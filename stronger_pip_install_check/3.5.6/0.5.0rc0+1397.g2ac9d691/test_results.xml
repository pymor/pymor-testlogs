<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="0" name="pytest" skips="6074" tests="12148" time="1045.343"><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;0]" time="0.0013048648834228516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc7f34059b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;1]" time="0.0035445690155029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc7f3403470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;2]" time="0.0005295276641845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc7f3405c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;3]" time="0.0005600452423095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc7f3405d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;4]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc7f3421240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;5]" time="0.0005357265472412109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc7f3421710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;6]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc7f3421be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;7]" time="0.0004932880401611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc7f33ac0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;8]" time="0.0006821155548095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc7f3421cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;9]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc7f34214a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;10]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc7faa3af98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;11]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc7f3405128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;12]" time="0.0005095005035400391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc835c98ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;13]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc7f33ac198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;14]" time="0.0005030632019042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc7f33ac748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;15]" time="0.0005486011505126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc7f33acc50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;16]" time="0.0007112026214599609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc835c98978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;17]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc7f3405860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;18]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc7f3421898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;19]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc7f3421a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;20]" time="0.0005047321319580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc7f33acd30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;21]" time="0.0005066394805908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc7f33ac0b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;22]" time="0.0004851818084716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc7f33acfd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;23]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc7f33b2550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;24]" time="0.0007870197296142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc7f33ac240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;25]" time="0.00048041343688964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc7f34217f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;26]" time="0.0005099773406982422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc7f34210f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;27]" time="0.0005083084106445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc7f3405cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;28]" time="0.0004832744598388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc835ca08d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;29]" time="0.0005214214324951172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc7f33b25f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;30]" time="0.0005054473876953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc7f33b28d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;31]" time="0.0004913806915283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc7f33b2e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;32]" time="0.0007002353668212891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc835c98978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;33]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc7f33b28d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;34]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc835ca0438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;35]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc7f3405c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;36]" time="0.0005078315734863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc7f34214e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;37]" time="0.0004820823669433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc7f33ac518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;38]" time="0.0005083084106445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc7f33ac358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;39]" time="0.0005500316619873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc7f33bb710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;40]" time="0.0004968643188476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc7f33acda0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;41]" time="0.0004985332489013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc7f3421978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;42]" time="0.0005459785461425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7fc7f3405b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;0]" time="0.0005457401275634766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc835ca0f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;1]" time="0.000522613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc7f33b25f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;2]" time="0.0005402565002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc7f33b2ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;3]" time="0.0006413459777832031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc7f33bb5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;4]" time="0.0005168914794921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc7f33bbfd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;5]" time="0.0005762577056884766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc7f33bb320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;6]" time="0.0004956722259521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc7f33bb438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;7]" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc7f33b2320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;8]" time="0.000514984130859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc835ca0780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;9]" time="0.0005078315734863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc7f3405b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;10]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc7f34217b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;11]" time="0.0005278587341308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc7f33bf160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;12]" time="0.0005028247833251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc7f33bf8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;13]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc7f33ac978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;14]" time="0.0004916191101074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc7f3421240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;15]" time="0.0005605220794677734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc7f3405f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;16]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc7f33b2978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;17]" time="0.0004937648773193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc7f33b2eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;18]" time="0.0005102157592773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc7f33bb710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;19]" time="0.0005221366882324219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc7f33bf6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;20]" time="0.0004870891571044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc7f33c91d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;21]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc7f33c9710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;22]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc7f33b2eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;23]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc835c6bd68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;24]" time="0.0005204677581787109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc7f3405fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;25]" time="0.0005066394805908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc835c74828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;26]" time="0.0005261898040771484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc7f33bf550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;27]" time="0.00048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc7f33c9320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;28]" time="0.0005297660827636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc7f33c9a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;29]" time="0.0007290840148925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc7f33c9fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;30]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc7f33c97b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;31]" time="0.0004990100860595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc7f33bf9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;32]" time="0.0005135536193847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc835c74b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;33]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc835ca90f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;34]" time="0.0005104541778564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc7f3405198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;35]" time="0.0005068778991699219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc7f33b2160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;36]" time="0.0005140304565429688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc7f33cf0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;37]" time="0.00447535514831543"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc7f33cf630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;38]" time="0.0005745887756347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc7f33c9390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;39]" time="0.00048232078552246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc7f33c9fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;40]" time="0.0005314350128173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc835c742e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;41]" time="0.00048732757568359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc7f33bf9e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;42]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7fc7f33bfc88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;0]" time="0.0005280971527099609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc7f33bb278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;1]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc7f33bba58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;2]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc7f33b2320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;3]" time="0.0007398128509521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc7f33bbb00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;4]" time="0.0005519390106201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc7f33bf2b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;5]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc7f33bf940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;6]" time="0.0005104541778564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc835c74c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;7]" time="0.0005352497100830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc7f33c9470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;8]" time="0.0005042552947998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc7f33c9b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;9]" time="0.0004913806915283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc7f33b2e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;10]" time="0.0004911422729492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc835ca0630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;11]" time="0.0004892349243164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc835ca0780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;12]" time="0.00047898292541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc7faa3af98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;13]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc7f33c94e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;14]" time="0.0005228519439697266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc835c740f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;15]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc7f33bf940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;16]" time="0.0005323886871337891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc837285cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;17]" time="0.0005135536193847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc7f33bbb00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;18]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc7f3421dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;19]" time="0.0007541179656982422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc7f3403358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;20]" time="0.0004932880401611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc7f33ac588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;21]" time="0.0005366802215576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc7f33bbe80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;22]" time="0.0004892349243164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc7f33bf3c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;23]" time="0.0005164146423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc835c74e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;24]" time="0.0005092620849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc7f33c9320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;25]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc83728d588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;26]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc835ca0780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;27]" time="0.0007364749908447266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc7f33cf208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;28]" time="0.0005469322204589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc7f33b2748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;29]" time="0.0005075931549072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc83728d240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;30]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc7f33c95c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;31]" time="0.0005366802215576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc7f33bfa58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;32]" time="0.00048160552978515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc837285cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;33]" time="0.00048804283142089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc7f33ac588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;34]" time="0.0005068778991699219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc7f33cf278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;35]" time="0.0007703304290771484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc7f33cf978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;36]" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc7f33bbe80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;37]" time="0.0005304813385009766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc7f33bf208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;38]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc7f33c93c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;39]" time="0.00048232078552246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc835ca94e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;40]" time="0.0005030632019042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc83728dac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;41]" time="0.0005078315734863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc7f34032e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;42]" time="0.0004878044128417969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7fc7f33cf358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;0]" time="0.0007786750793457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f33cff98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;1]" time="0.0005323886871337891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f33cfa90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;2]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f33b2278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;3]" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc835bfb4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;4]" time="0.0005178451538085938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f33c9dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;5]" time="0.0004985332489013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f33bf208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;6]" time="0.0004868507385253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f33bb278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;7]" time="0.0005829334259033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f33db0b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;8]" time="0.0008053779602050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f33db5f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;9]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f33bb278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;10]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f33bfc88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;11]" time="0.0005333423614501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f33c9320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;12]" time="0.0004878044128417969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f33b2320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;13]" time="0.0004949569702148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f33cfcc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;14]" time="0.0005238056182861328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f33cf358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;15]" time="0.0004916191101074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f33db0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;16]" time="0.0007984638214111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f33dbc18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;17]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc835c42d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;18]" time="0.0005135536193847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc83728deb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;19]" time="0.0004906654357910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f33c9dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;20]" time="0.0005249977111816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc837285d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;21]" time="0.0005123615264892578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc8372952e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;22]" time="0.0004892349243164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f33db278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;23]" time="0.0005104541778564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f33db390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;24]" time="0.001936197280883789"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f33e0278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;25]" time="0.0005054473876953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f33db748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;26]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f3421c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;27]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7fc872080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;28]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f33b2198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;29]" time="0.0005199909210205078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc835c4a390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;30]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f33cf400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;31]" time="0.0005891323089599609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f33e0080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;32]" time="0.0007624626159667969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f33e0898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;33]" time="0.0004906654357910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc835c42b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;34]" time="0.0004932880401611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc835c4a198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;35]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f33b2198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;36]" time="0.0005545616149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f33bf390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;37]" time="0.00048470497131347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f33dbcc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;38]" time="0.0005316734313964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f33db9e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;39]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f33e0518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;40]" time="0.000896453857421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f33e0eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;41]" time="0.0005209445953369141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f33e0080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;42]" time="0.0004851818084716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f33db160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;0]" time="0.0005280971527099609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc835c52438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;1]" time="0.0004994869232177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc7f33bb2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;2]" time="0.0005190372467041016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc7f33c93c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;3]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc83728d588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;4]" time="0.000530242919921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc7f33cf3c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;5]" time="0.0010669231414794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc7f3369518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;6]" time="0.0004932880401611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc835ca94e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;7]" time="0.0005145072937011719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc837295390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;8]" time="0.0005040168762207031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc7f33e0ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;9]" time="0.0005116462707519531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc7f33e02b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;10]" time="0.00048422813415527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc7f33db0b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;11]" time="0.0005080699920654297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc7f33cf4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;12]" time="0.0005137920379638672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc7f34031d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;13]" time="0.0005433559417724609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc835ca0240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;14]" time="0.0008628368377685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc7f33c9cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;15]" time="0.000507354736328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc7f33cf9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;16]" time="0.0005042552947998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc7f33db0b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;17]" time="0.0005261898040771484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc7f33e0278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;18]" time="0.0005180835723876953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc7f33e0668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;19]" time="0.0005366802215576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc83732feb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;20]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc835c4a0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;21]" time="0.0005352497100830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc837285d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;22]" time="0.0008831024169921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc835c98f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;23]" time="0.0005145072937011719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc83732fd68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;24]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc7f33e0d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;25]" time="0.0005125999450683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc7f33e0c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;26]" time="0.0005283355712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc7f34031d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;27]" time="0.0005080699920654297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc7f33cff60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;28]" time="0.0005106925964355469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc7f3369588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;29]" time="0.00054931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc7f3369a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;30]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc7f3369f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;31]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc7f3421dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;32]" time="0.0005202293395996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc7f33db390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;33]" time="0.0005180835723876953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc837295390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;34]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc7f33e0be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;35]" time="0.0005261898040771484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc7f33bb160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;36]" time="0.0005354881286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc7f33697f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;37]" time="0.0005040168762207031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc7f3373320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;38]" time="0.0007910728454589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc7f3373860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;39]" time="0.0004980564117431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc83733f0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;40]" time="0.0005142688751220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc83732feb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;41]" time="0.0004975795745849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc837295390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;42]" time="0.0005319118499755859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7fc7f33db7b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;0]" time="0.0005097389221191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc7f3421e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;1]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc7f3373438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;2]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc7f3373198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;3]" time="0.0008716583251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc7f3373e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;4]" time="0.0004851818084716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc7f3373a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;5]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc837337780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;6]" time="0.0005307197570800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc7f33cf358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;7]" time="0.0004932880401611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc7f33dbf60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;8]" time="0.0005266666412353516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc7f33e0cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;9]" time="0.0005066394805908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc7f33bb940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;10]" time="0.0005574226379394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc7f3369ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;11]" time="0.000766754150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc7f33774e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;12]" time="0.0005078315734863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc83728dd68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;13]" time="0.0005133152008056641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc7f33e0be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;14]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc7f33db7f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;15]" time="0.000530242919921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc837337f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;16]" time="0.0005054473876953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc7f3373f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;17]" time="0.0005323886871337891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc7f3373ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;18]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc7f3377358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;19]" time="0.0008115768432617188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc7f3377b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;20]" time="0.0004868507385253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc7f3373160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;21]" time="0.0005090236663818359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc8373376d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;22]" time="0.0004990100860595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc7f3403198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;23]" time="0.0005400180816650391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc7f33e05f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;24]" time="0.0005390644073486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc7f33bb1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;25]" time="0.0004937648773193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc7f33777b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;26]" time="0.0005462169647216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc7f3377198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;27]" time="0.0007941722869873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc7f337c160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;28]" time="0.0004775524139404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc7f33778d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;29]" time="0.0004916191101074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc7f3369198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;30]" time="0.0005276203155517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc837261a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;31]" time="0.0005383491516113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc7f33e0eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;32]" time="0.0005066394805908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc837337390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;33]" time="0.0005691051483154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc7f33733c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;34]" time="0.0005164146423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc7f337c278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;35]" time="0.0008449554443359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc7f337c780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;36]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc7f3373d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;37]" time="0.0005617141723632812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc7f33dbbe0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;38]" time="0.000522613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc835c4afd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;39]" time="0.0005211830139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc837261b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;40]" time="0.0005061626434326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc7f3377c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;41]" time="0.0005254745483398438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc7f3377198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;42]" time="0.0005078315734863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7fc7f337c2b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;0]" time="0.0008425712585449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc7f337cda0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;1]" time="0.0005259513854980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc7f3377d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;2]" time="0.0005011558532714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc837261390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;3]" time="0.0005173683166503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc837295240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;4]" time="0.0005731582641601562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc7f33dbf60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;5]" time="0.0005044937133789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc7f33734e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;6]" time="0.0005276203155517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc7f337c400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;7]" time="0.0005128383636474609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc7f337c518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;8]" time="0.0009720325469970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc7f3385400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;9]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc7f337c908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;10]" time="0.0005028247833251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc7f33734e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;11]" time="0.0005190372467041016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc837337d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;12]" time="0.000492095947265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc7f33693c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;13]" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc83c046908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;14]" time="0.0005135536193847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc7f3377358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;15]" time="0.0004932880401611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc7f3385208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;16]" time="0.0010573863983154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc7f3385a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;17]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc837261ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;18]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc8371ea4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;19]" time="0.0004887580871582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc7f337cc18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;20]" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc7f337c780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;21]" time="0.0005316734313964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc7f3377080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;22]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc7f3373eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;23]" time="0.0005257129669189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc7f3369f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;24]" time="0.0005128383636474609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc837285978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;25]" time="0.0008387565612792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc7f3369668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;26]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc7f3373eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;27]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc7f3377080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;28]" time="0.0005164146423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc7f3421e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;29]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc7f337cef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;30]" time="0.0005052089691162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc8371ea4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;31]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc83c046668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;32]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc837337a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;33]" time="0.0005564689636230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc835ca0cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;34]" time="0.0005517005920410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc7f33e0eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;35]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc7f337ca90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;36]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc83c053b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;37]" time="0.0005156993865966797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc7f3377080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;38]" time="0.0005524158477783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc7f3373898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;39]" time="0.0004878044128417969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc7f3385630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;40]" time="0.0005340576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc7f33853c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;41]" time="0.0008001327514648438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc7f3390128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;42]" time="0.0004935264587402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7fc7f33856a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;0]" time="0.0004971027374267578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc7f3369588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;1]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc7f33774e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;2]" time="0.000522613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc83c0533c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;3]" time="0.0005490779876708984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc7f337cc50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;4]" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc7f33e0be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;5]" time="0.0005497932434082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc835ca0cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;6]" time="0.00078582763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc7f3390668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;7]" time="0.0004961490631103516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc7f337c198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;8]" time="0.0005233287811279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc83728de10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;9]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc8372c3c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;10]" time="0.0004937648773193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc7f33777f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;11]" time="0.0005137920379638672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc7f3385c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;12]" time="0.0005321502685546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc7f3385be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;13]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc7f3390518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;14]" time="0.0007419586181640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc7f3390c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;15]" time="0.0005235671997070312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc7f3385c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;16]" time="0.00048041343688964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc7f3373828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;17]" time="0.0004899501800537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc83728deb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;18]" time="0.0005078315734863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc8371ea0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;19]" time="0.0005626678466796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc83c0469b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;20]" time="0.0005657672882080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc7f3390940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;21]" time="0.0005154609680175781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc7f3390208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;22]" time="0.0008041858673095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc7f33942e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;23]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc7f3390a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;24]" time="0.0005044937133789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc83c0469b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;25]" time="0.0004935264587402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc83c053668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;26]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc7f33774e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;27]" time="0.0004889965057373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc7f3369cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;28]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc7f3385cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;29]" time="0.0005304813385009766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc7f33940f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;30]" time="0.00075531005859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc7f3394908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;31]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc8372cd5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;32]" time="0.0005347728729248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc7f3369b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;33]" time="0.00048422813415527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc83c053320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;34]" time="0.0007765293121337891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc7f337c860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;35]" time="0.0005021095275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc7f3390518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;36]" time="0.0005469322204589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc7f3394518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;37]" time="0.0005044937133789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc7f3394390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;38]" time="0.0008661746978759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc7f3394f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;39]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc7f3394438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;40]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc8372612e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;41]" time="0.0005204677581787109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc7f3390748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;42]" time="0.0005266666412353516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7fc83728deb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;0]" time="0.0005521774291992188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc7f33774e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;1]" time="0.0005204677581787109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc8372cd518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;2]" time="0.0005469322204589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc7f339c048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;3]" time="0.0007836818695068359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc7f339c588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;4]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc8372cd908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;5]" time="0.0004916191101074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc83c053fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;6]" time="0.0005233287811279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc7f337c978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;7]" time="0.0005071163177490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc7f33903c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;8]" time="0.000499725341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc7f3394748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;9]" time="0.0004949569702148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc7f3394d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;10]" time="0.0004982948303222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc7f339c0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;11]" time="0.0008521080017089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc7f339cba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;12]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc7f3394b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;13]" time="0.0005040168762207031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc7f3390860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;14]" time="0.0005171298980712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc7f337c278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;15]" time="0.0005676746368408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc7f3369630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;16]" time="0.0004971027374267578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc837275438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;17]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc7f339c898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;18]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc7f339c2b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;19]" time="0.0008165836334228516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc7f33a2208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;20]" time="0.0004832744598388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc7f339c1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;21]" time="0.0005095005035400391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc7f339c6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;22]" time="0.0004916191101074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc8372cdda0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;23]" time="0.0005040168762207031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc83725a978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;24]" time="0.0005273818969726562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc7f33908d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;25]" time="0.0005183219909667969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc7f3394b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;26]" time="0.0004980564117431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc7f33a2390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;27]" time="0.00119781494140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc7f33a2828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;28]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc83c053b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;29]" time="0.0004949569702148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc837275390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;30]" time="0.0004878044128417969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc7f339ca58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;31]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc7f339c940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;32]" time="0.0005090236663818359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc7f33947b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;33]" time="0.0005230903625488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc7f3390390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;34]" time="0.0005278587341308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc83c046ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;35]" time="0.0005383491516113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc837337a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;36]" time="0.0009260177612304688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc7f3385ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;37]" time="0.000568389892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc837261eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;38]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc7f339cef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;39]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc7f339c9e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;40]" time="0.0005292892456054688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc8372cdcf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;41]" time="0.0005033016204833984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc8371ea0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;42]" time="0.0005230903625488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7fc83727b6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;0]" time="0.000484466552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc7f33a2908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;1]" time="0.0007340908050537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc7f3369630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;2]" time="0.0005033016204833984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc83727bb70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;3]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc8372752e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;4]" time="0.0004911422729492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc7f339ca58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;5]" time="0.0005099773406982422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc837261eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;6]" time="0.00048422813415527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc7f3390208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;7]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc7f33a2908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;8]" time="0.0005261898040771484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc7f33a2d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;9]" time="0.0006589889526367188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc7f32eb2b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;10]" time="0.0005252361297607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc7f33855c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;11]" time="0.00048732757568359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc7f3394908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;12]" time="0.0005362033843994141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc7f339c898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;13]" time="0.0005202293395996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc8372cd518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;14]" time="0.0004982948303222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc835c42e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;15]" time="0.0005359649658203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc835c06438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;16]" time="0.0005204677581787109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc7f32eb630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;17]" time="0.0008471012115478516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc7f32ebb70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;18]" time="0.0005204677581787109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc835c06828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;19]" time="0.0004975795745849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc83725acc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;20]" time="0.0005261898040771484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc7f339cba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;21]" time="0.0005214214324951172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc7f3394908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;22]" time="0.0005171298980712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc7f33a2e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;23]" time="0.0005252361297607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc7f32ebbe0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;24]" time="0.0005190372467041016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc7f32eb4a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;25]" time="0.0008416175842285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc7f32f21d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;26]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc7f32eba20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;27]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc7f33a2be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;28]" time="0.0005047321319580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc7f3385dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;29]" time="0.0004992485046386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc7f339c978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;30]" time="0.0005011558532714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc7f337c278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;31]" time="0.0005242824554443359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc835c06c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;32]" time="0.0005245208740234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc7f32f2240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;33]" time="0.0008091926574707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc7f32f27f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;34]" time="0.0005052089691162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc835c06f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;35]" time="0.0005252361297607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc7f339ca58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;36]" time="0.0004961490631103516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc8372d6278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;37]" time="0.0005166530609130859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc7f33a2ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;38]" time="0.000522613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc7f32ebda0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;39]" time="0.0005450248718261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc7f32ebcf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;40]" time="0.0005352497100830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc7f32f2048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;41]" time="0.0008759498596191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc7f32f2e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;42]" time="0.0005087852478027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7fc835c0e8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;0]" time="0.0005123615264892578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc7f3390208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;1]" time="0.0005273818969726562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc7f3394f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;2]" time="0.0005216598510742188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc7f339c748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;3]" time="0.0005185604095458984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc835c06ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;4]" time="0.0005054473876953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc7f32f2470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;5]" time="0.0005478858947753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc7f32f2588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;6]" time="0.0008425712585449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc7f32f9470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;7]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc7f32f29e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;8]" time="0.0005128383636474609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc83c053860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;9]" time="0.0005257129669189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc7f339c978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;10]" time="0.0005421638488769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc835c16a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;11]" time="0.0005102157592773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc835c0ecc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;12]" time="0.0005300045013427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc7f32eba20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;13]" time="0.0005471706390380859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc7f32f9278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;14]" time="0.0008189678192138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc7f32f9a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;15]" time="0.00048732757568359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc835c0eb70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;16]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc7f33855c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;17]" time="0.0005202293395996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc7f337c860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;18]" time="0.0005052089691162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc8372752e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;19]" time="0.0005216598510742188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc7f32f2b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;20]" time="0.0005261898040771484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc7f32f9c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;21]" time="0.0005366802215576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc7f32f94e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;22]" time="0.0008475780487060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc7f32ff0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;23]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc7f32f9940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;24]" time="0.0005214214324951172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc7f32f2908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;25]" time="0.0004954338073730469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc83727b4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;26]" time="0.0005397796630859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc837285a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;27]" time="0.0005269050598144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc7f33a2e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;28]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc835c0eb70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;29]" time="0.0005197525024414062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc7f32ff208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;30]" time="0.0008280277252197266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc7f32ff710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;31]" time="0.000499725341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc835c1e898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;32]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc7f33855c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;33]" time="0.0005078315734863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc7f337c278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;34]" time="0.0005044937133789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc7f32f2be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;35]" time="0.0005123615264892578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc7f32f9748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;36]" time="0.0005190372467041016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc7f32f95c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;37]" time="0.0004992485046386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc7f32ff240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;38]" time="0.0012807846069335938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc7f32ffd30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;39]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc835c06f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;40]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc835c1e550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;41]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc7f32f9320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;42]" time="0.0005109310150146484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7fc7f32f94a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;0]" time="0.0004837512969970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc7f32f2e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;1]" time="0.0005385875701904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc7f32ebcf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;2]" time="0.0005156993865966797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc7f33a2908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;3]" time="0.0005061626434326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc837285a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;4]" time="0.0008270740509033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc7f33a2f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;5]" time="0.0005066394805908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc7f32ebcf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;6]" time="0.0005228519439697266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc7f32f27f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;7]" time="0.0005021095275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc835c0eac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;8]" time="0.0005145072937011719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc7f32f9f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;9]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc835c1ebe0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;10]" time="0.0005035400390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc835c264a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;11]" time="0.0004966259002685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc7f32ff780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;12]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc7f3385e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;13]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc7f3394940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;14]" time="0.0005190372467041016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc7f32f9710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;15]" time="0.0005145072937011719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc835c0e0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;16]" time="0.0004937648773193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc830334fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;17]" time="0.0004949569702148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc7f32ebcf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;18]" time="0.0006103515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc7f32ff780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;19]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc7f32ff0b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;20]" time="0.0008020401000976562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc7f330b438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;21]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc7f32ff400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;22]" time="0.0005161762237548828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc7f32eb2b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;23]" time="0.0005376338958740234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc7f32f2be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;24]" time="0.0005295276641845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc7f32f9240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;25]" time="0.0005388259887695312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc835c1e550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;26]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc7f339c320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;27]" time="0.0005381107330322266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc7f330b240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;28]" time="0.0008573532104492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc7f330b978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;29]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc835c1e208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;30]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc83033e3c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;31]" time="0.0005114078521728516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc7f32f9940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;32]" time="0.0005173683166503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc83727bac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;33]" time="0.0005118846893310547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc7f32ff2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;34]" time="0.000518798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc7f330ba58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;35]" time="0.0005366802215576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc7f330b4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;36]" time="0.0008392333984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc7f330bf98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;37]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc7f330b748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;38]" time="0.0005042552947998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc7f32eb2b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;39]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc7f32fff98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;40]" time="0.0005192756652832031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc830334da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;41]" time="0.0005133152008056641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc835c16c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;42]" time="0.0005376338958740234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7fc835c1eb38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;0]" time="0.0005137920379638672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc7f33100f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;1]" time="0.0008165836334228516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc7f33105f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;2]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc83033eef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;3]" time="0.0004949569702148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc7f32f9cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;4]" time="0.0004963874816894531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc7f32f2908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;5]" time="0.0004992485046386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc7f32eb080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;6]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc7f330b240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;7]" time="0.0005090236663818359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc7f330b4a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;8]" time="0.0004899501800537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc7f3310128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;9]" time="0.0008409023284912109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc7f3310c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;10]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc8302c6710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;11]" time="0.0005176067352294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc7f32ff0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;12]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc7f32f2320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;13]" time="0.0005118846893310547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc83033e3c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;14]" time="0.0005021095275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc7f33855c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;15]" time="0.0004961490631103516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc7f3310278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;16]" time="0.0005335807800292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc7f3310390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;17]" time="0.0008361339569091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc7f3318278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;18]" time="0.0005078315734863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc7f33100f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;19]" time="0.0004899501800537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc835c1e208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;20]" time="0.0005252361297607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc83c0606a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;21]" time="0.0005204677581787109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc83033ee48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;22]" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc7f32ebb38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;23]" time="0.0005500316619873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc7f330bd68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;24]" time="0.0005481243133544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc7f3318080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;25]" time="0.0007832050323486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc7f3318898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;26]" time="0.000484466552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc7f32ff0b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;27]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc830334ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;28]" time="0.0005536079406738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc7f32f90b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;29]" time="0.0005292892456054688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc83c076898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;30]" time="0.0005340576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc7f3310908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;31]" time="0.0005142688751220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc7f33107b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;32]" time="0.0005280971527099609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc7f3318518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;33]" time="0.0008292198181152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc7f3318eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;34]" time="0.0005192756652832031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc7f3318080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;35]" time="0.0005097389221191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc7f33102e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;36]" time="0.0005195140838623047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc83c076a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;37]" time="0.0005028247833251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc83c060d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;38]" time="0.0005114078521728516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc83033e908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;39]" time="0.0005209445953369141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc7f32ff860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;40]" time="0.0005052089691162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc7f330ba90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;41]" time="0.0008561611175537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc7f331d518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;42]" time="0.00048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7fc7f32f2320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;0]" time="0.0005207061767578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc83033e908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;1]" time="0.0005152225494384766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc83c076940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;2]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc7f33107f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;3]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc7f33185f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;4]" time="0.0005240440368652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc7f3318cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;5]" time="0.0005414485931396484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc7f331d390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;6]" time="0.0011467933654785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc7f331db38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;7]" time="0.0005407333374023438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc83c060c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;8]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc835c0eb70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;9]" time="0.0005512237548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc7f3318d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;10]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc7f3318ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;11]" time="0.0004971027374267578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc7f3310d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;12]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc7f330b4a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;13]" time="0.0005095005035400391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc7f32ffef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;14]" time="0.0005207061767578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc7f33a2eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;15]" time="0.0009570121765136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc7f32ff208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;16]" time="0.0005104541778564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc7f330b748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;17]" time="0.0005202293395996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc7f3310f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;18]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc7f3318ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;19]" time="0.0004937648773193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc835c0eb70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;20]" time="0.0005006790161132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc7f33cf358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;21]" time="0.0006105899810791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc83c076a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;22]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc7f331d8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;23]" time="0.0008165836334228516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc83c076a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;24]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc83033e908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;25]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc83c075208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;26]" time="0.000522613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc7f33188d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;27]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc7f33100f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;28]" time="0.0005233287811279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc835c06eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;29]" time="0.0005021095275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc7f331dba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;30]" time="0.0005092620849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc7f32a9080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;31]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc7f32a95c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;32]" time="0.0005269050598144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc7f331d748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;33]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc7f330bfd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;34]" time="0.00047898292541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc7f3318a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;35]" time="0.0004956722259521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc83c060d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;36]" time="0.0005092620849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc83c078fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;37]" time="0.0005090236663818359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc83c076dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;38]" time="0.0005238056182861328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc7f32a9940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;39]" time="0.0008280277252197266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc7f32a9e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;40]" time="0.0005083084106445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc83725a978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;41]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc7f3318be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;42]" time="0.0004975795745849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7fc7f33102e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;0]" time="0.0005028247833251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc8372ae908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;1]" time="0.0005323886871337891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc7f331deb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;2]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc7f32a9ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;3]" time="0.0005280971527099609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc7f32a9198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;4]" time="0.0007879734039306641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc7f32ae4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;5]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc7f32a9f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;6]" time="0.0005011558532714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc835c5c438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;7]" time="0.0005180835723876953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc7f330b9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;8]" time="0.000530242919921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc7f33100f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;9]" time="0.0005061626434326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc7f33186a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;10]" time="0.0005161762237548828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc83c078f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;11]" time="0.0004954338073730469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc7f32ae390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;12]" time="0.0008196830749511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc7f32aeb00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;13]" time="0.0004925727844238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc83c060d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;14]" time="0.0005078315734863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc7f3310f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;15]" time="0.0005276203155517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc8372ae908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;16]" time="0.0005195140838623047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc7f331d978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;17]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc7f32a9908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;18]" time="0.0005643367767333984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc7f32ae7b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;19]" time="0.0005345344543457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc7f32ae0b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;20]" time="0.0008227825164794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc7f32b5160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;21]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc7f32ae9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;22]" time="0.0005092620849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc7f32a9c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;23]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc7f331d9e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;24]" time="0.0004925727844238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc835c5c390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;25]" time="0.0005230903625488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc7f33107b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;26]" time="0.0005044937133789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc83c060d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;27]" time="0.0005300045013427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc7f32b5278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;28]" time="0.0008080005645751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc7f32b5780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;29]" time="0.0005095005035400391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc7f32ff208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;30]" time="0.0004928112030029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc8372ae518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;31]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc835c5ca20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;32]" time="0.0005059242248535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc7f32a9048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;33]" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc7f32ae6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;34]" time="0.0005409717559814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc7f32ae198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;35]" time="0.0004837512969970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc7f32b52b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;36]" time="0.0008046627044677734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc7f32b5da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;37]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc7f32aee48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;38]" time="0.0005097389221191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc7f32a9048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;39]" time="0.0005035400390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc835c63828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;40]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc7f330b9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;41]" time="0.0005118846893310547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc7f3318fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;42]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7fc7f32b5400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;0]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc7f32b5518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;1]" time="0.0007810592651367188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc7f32bb400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;2]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc7f32b5400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;3]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc7f32ff860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;4]" time="0.000492095947265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc7f33107b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;5]" time="0.0004975795745849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc835c5c978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;6]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc7f32a9a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;7]" time="0.0005047321319580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc7f32aeeb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;8]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc7f32bb208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;9]" time="0.0007672309875488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc7f32bba20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;10]" time="0.00052642822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc7f331d748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;11]" time="0.0005211830139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc835c63c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;12]" time="0.000545501708984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc83c060d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;13]" time="0.00048160552978515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc8372e48d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;14]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc7f32b5c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;15]" time="0.0005047321319580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc7f32bbb70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;16]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc7f32bb470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;17]" time="0.0011508464813232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc7f32c2080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;18]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc83c060a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;19]" time="0.0005104541778564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc835c63c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;20]" time="0.0004980564117431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc7f32bbc88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;21]" time="0.0004909038543701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc7f32bb208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;22]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc7f32b52e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;23]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc7f32b5748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;24]" time="0.0005290508270263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc7f32aeb38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;25]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc7f32a9358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;26]" time="0.0008182525634765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc8373260f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;27]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc7f32b5278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;28]" time="0.0004940032958984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc7f32b5b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;29]" time="0.0005099773406982422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc7f32bbe10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;30]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc835c5ceb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;31]" time="0.0005140304565429688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc7f3310a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;32]" time="0.0004832744598388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc8372e4630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;33]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc7f331dd30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;34]" time="0.0004899501800537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc83c0785c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;35]" time="0.0005092620849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc8372e4f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;36]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc835c636d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;37]" time="0.0005285739898681641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc7f32bbc50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;38]" time="0.0005121231079101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc7f32b5550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;39]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc837326588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;40]" time="0.0004899501800537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc7f32aeef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;41]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc7f32c2208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;42]" time="0.0007798671722412109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7fc7f32c2748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;0]" time="0.000484466552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc7f32aeeb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;1]" time="0.000499725341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc7f32b58d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;2]" time="0.0005664825439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc7f32bb400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;3]" time="0.0005233287811279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc7f32bbd68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;4]" time="0.0005714893341064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc7f331d240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;5]" time="0.0005085468292236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc83c078f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;6]" time="0.0005171298980712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc7f32c2240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;7]" time="0.000835418701171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc7f32c2c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;8]" time="0.0005171298980712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc83c060a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;9]" time="0.0005474090576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc7f32bb828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;10]" time="0.0005166530609130859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc835c30668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;11]" time="0.000518798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc837326cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;12]" time="0.0004994869232177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc7f32ae9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;13]" time="0.0005202293395996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc7f32c2940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;14]" time="0.0005207061767578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc7f32c24a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;15]" time="0.0008268356323242188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc7f32cc2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;16]" time="0.0005238056182861328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc7f32c2240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;17]" time="0.0005249977111816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc7f32ae4a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;18]" time="0.00052642822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc7f32b5470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;19]" time="0.0005033016204833984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc835c30668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;20]" time="0.0005359649658203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc7f32bb400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;21]" time="0.0005266666412353516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc8372e4630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;22]" time="0.0005075931549072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc7f32cc0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;23]" time="0.0008411407470703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc7f32cc908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;24]" time="0.0005037784576416016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc8372ae278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;25]" time="0.0005240440368652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc7f32bb5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;26]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc7f32b58d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;27]" time="0.0005390644073486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc7f33a25c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;28]" time="0.0005164146423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc7f32c2898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;29]" time="0.0004971027374267578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc7f32cc518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;30]" time="0.0005218982696533203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc7f32cc390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;31]" time="0.0008399486541748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc7f32ccf28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;32]" time="0.0005083084106445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc7f32cc4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;33]" time="0.0005133152008056641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc7f32c2fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;34]" time="0.0005283355712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc7f32aeef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;35]" time="0.0005307197570800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc7f32b58d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;36]" time="0.0004985332489013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc7f32bb828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;37]" time="0.0005342960357666016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc8372e4630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;38]" time="0.0005195140838623047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc7f32d3048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;39]" time="0.0008804798126220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc7f32d3588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;40]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc835c5ceb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;41]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc835c305c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;42]" time="0.0005197525024414062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7fc7f32b5550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;0]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc7f32c2898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;1]" time="0.0005221366882324219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc7f32cc9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;2]" time="0.0004913806915283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc7f32cc3c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;3]" time="0.0005140304565429688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc7f32d30f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;4]" time="0.0008232593536376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc7f32d3ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;5]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc7f32cca90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;6]" time="0.0005261898040771484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc7f32c2d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;7]" time="0.0004918575286865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc837326630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;8]" time="0.0005466938018798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc835c30f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;9]" time="0.0005164146423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc835c37cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;10]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc7f32d3898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;11]" time="0.0005147457122802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc7f32d32b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;12]" time="0.000827789306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc7f32d8208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;13]" time="0.0004832744598388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc7f32d3208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;14]" time="0.0005221366882324219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc835c37908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;15]" time="0.0005290508270263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc7f32bb400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;16]" time="0.0005071163177490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc8373264e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;17]" time="0.000537872314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc7f32c2f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;18]" time="0.0005118846893310547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc7f32cc5f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;19]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc7f32d8390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;20]" time="0.0008425712585449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc7f32d8828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;21]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc835cb2c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;22]" time="0.0005104541778564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc7f32c2fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;23]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc835c30a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;24]" time="0.0005087852478027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc7f32bb7b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;25]" time="0.0005095005035400391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc7f32d3198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;26]" time="0.0005095005035400391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc7f32d39b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;27]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc7f32d8048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;28]" time="0.0010726451873779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc7f32d8e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;29]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc835c30a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;30]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc835cb2588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;31]" time="0.0005369186401367188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc7f32d8b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;32]" time="0.0005180835723876953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc7f32d8470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;33]" time="0.0005323886871337891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc835c37860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;34]" time="0.0005071163177490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc7f32d38d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;35]" time="0.0005071163177490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc7f32ccb00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;36]" time="0.0005300045013427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc7f32c2828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;37]" time="0.16283416748046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc7f32cc668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;38]" time="0.0005145072937011719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc7f32d3f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;39]" time="0.0006935596466064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc835cb2d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;40]" time="0.0007271766662597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc7f32bb5f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;41]" time="0.0006532669067382812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc7f32d8710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;42]" time="0.0006477832794189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7fc835c3ab70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;0]" time="0.000698089599609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc83c060a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;1]" time="0.0006849765777587891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc7f32d3a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;2]" time="0.0006136894226074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc7f32ccf60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;3]" time="0.0006783008575439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc7f32d84a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;4]" time="0.0006151199340820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc7f33a2898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;5]" time="0.0005998611450195312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc7fac4df28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;6]" time="0.0009279251098632812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc83c0750b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;7]" time="0.0005984306335449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc7f33694e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;8]" time="0.0005991458892822266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc7f32d8c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;9]" time="0.0006020069122314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc7f32cc5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;10]" time="0.0005846023559570312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc7f32d3a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;11]" time="0.0005323886871337891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc835cb2d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;12]" time="0.0005011558532714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc835c3a780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;13]" time="0.0005517005920410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc7f32a93c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;14]" time="0.0008361339569091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc7f32dd198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;15]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc7f331d588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;16]" time="0.0004975795745849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc835c5cf60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;17]" time="0.0005178451538085938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc7f32d3ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;18]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc837220240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;19]" time="0.0004990100860595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc7f32d8e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;20]" time="0.0005557537078857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc7f3369518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;21]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc7f32dd278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;22]" time="0.0008325576782226562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc7f32dd7b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;23]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc7f33a2860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;24]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc7f32d8c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;25]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc837220588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;26]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc835c37710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;27]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc835c30fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;28]" time="0.0005095005035400391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc837326cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;29]" time="0.0004992485046386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc7f32dd278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;30]" time="0.0007612705230712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc7f32dddd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;31]" time="0.0005888938903808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc835c3a8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;32]" time="0.0005176067352294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc7f32d3ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;33]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc8372208d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;34]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc7f32d89e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;35]" time="0.0005192756652832031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc7f3385a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;36]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc7f32dd240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;37]" time="0.0004711151123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc7f32dd588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;38]" time="0.0008456707000732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc7f32e4438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;39]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc7f32dd9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;40]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc7f33a2860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;41]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc837220b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;42]" time="0.0005340576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7fc835cb84e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;0]" time="0.0005626678466796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc835c37ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;1]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc7f32a93c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;2]" time="0.000484466552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc7f32e4240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;3]" time="0.0007739067077636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc7f32e4a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;4]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc835c52748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;5]" time="0.0006086826324462891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc835cb8198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;6]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc837220b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;7]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc7f33a25f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;8]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc7f32ddac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;9]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc7f32e4ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;10]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc7f32e44a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;11]" time="0.0009338855743408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc7f326a0b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;12]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc7f32e48d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;13]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc7f32ddb38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;14]" time="0.0005021095275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc7f32c2710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;15]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc837220b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;16]" time="0.0005173683166503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc7f32d3550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;17]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc8302d0828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;18]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc7f326a1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;19]" time="0.0007722377777099609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc7f326a6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;20]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc8302d0438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;21]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc835cb8828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;22]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc7f32d8be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;23]" time="0.0004982948303222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc7f32dd588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;24]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc7f32e40f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;25]" time="0.0005581378936767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc7f32e4588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;26]" time="0.0005114078521728516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc7f326a208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;27]" time="0.0008900165557861328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc7f326acf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;28]" time="0.0005278587341308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc7f33a2860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;29]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc7f32dd5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;30]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc7f32d89e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;31]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc835c3acc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;32]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc8302d76d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;33]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc7f326a358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;34]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc7f326a470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;35]" time="0.0008187294006347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc7f3272358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;36]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc7f326aa58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;37]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc8302d7588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;38]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc7f32a9e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;39]" time="0.0004923343658447266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc837220588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;40]" time="0.0005509853363037109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc7f32dd470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;41]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc7f32e4cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;42]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7fc7f3272160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;0]" time="0.0011851787567138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc7f3272978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;1]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc835cb8ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;2]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc8302d7780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;3]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc7f326ae48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;4]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc7f326ad30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;5]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc7f32e4e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;6]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc7f32dde10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;7]" time="0.0005805492401123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc835cb2eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;8]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc835c3aa20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;9]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc835cb2eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;10]" time="0.0005006790161132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc7f32ddc18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;11]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc7f32e4c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;12]" time="0.0005123615264892578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc7f326a208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;13]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc8302d7438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;14]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc835c872e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;15]" time="0.0005025863647460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc835cb8780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;16]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc7f3272198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;17]" time="0.0008296966552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc7f32a9198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;18]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc8302d70f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;19]" time="0.0005364418029785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc7f326a198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;20]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc7f32e47f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;21]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc7f32ddc18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;22]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc7f32d8a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;23]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc7f3272b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;24]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc7f3272da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;25]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc7f3272e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;26]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc7f32725f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;27]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc7f32d8ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;28]" time="0.0005230903625488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc7f32e4ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;29]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc7f326a198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;30]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc8302d7588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;31]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc835c87240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;32]" time="0.0005033016204833984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc7f327c6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;33]" time="0.0005021095275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc835c87240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;34]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc7f326a2b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;35]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc837326630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;36]" time="0.0005040168762207031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc83c0750b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;37]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc835c8e2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;38]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc7f3272588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;39]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc7f327c438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;40]" time="0.00055694580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc7f327cf60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;41]" time="0.0005185604095458984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc7f32814e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;42]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7fc7f327cba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;0]" time="0.0004985332489013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc7f3272eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;1]" time="0.0005791187286376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc835c8e390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;2]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc7f32e4c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;3]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc7f326ae10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;4]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc835c87390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;5]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc7f3281860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;6]" time="0.0008072853088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc7f3281da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;7]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc8372ae278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;8]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc7f32dd780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;9]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc835c8e6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;10]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc7f3272ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;11]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc7f327cdd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;12]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc7f3281b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;13]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc7f3281e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;14]" time="0.0008609294891357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc7f3289400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;15]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc7f3281ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;16]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc7f327c6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;17]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc835c8ecc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;18]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc835cdd780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;19]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc7f331d588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;20]" time="0.0004971027374267578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc7f326aeb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;21]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc7f3289240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;22]" time="0.0008411407470703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc7f3289a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;23]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc7f32dd7b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;24]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc835cdd2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;25]" time="0.0004966259002685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc835c8ea20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;26]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc7f327c780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;27]" time="0.0005509853363037109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc7f3281ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;28]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc7f3289b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;29]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc7f3289470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;30]" time="0.0007588863372802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc7f328f080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;31]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc7f3289860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;32]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc7f32815c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;33]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc7f327c438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;34]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc835c8ecc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;35]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc7f32d8208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;36]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc7f331d588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;37]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc7f328f198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;38]" time="0.0007829666137695312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc7f328f6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;39]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc835cdd390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;40]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc835ce36d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;41]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc7f32724e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;42]" time="0.0005011558532714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7fc7f3281ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;0]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc7f32897b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;1]" time="0.0005242824554443359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc7f3289550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;2]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc7f328f1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;3]" time="0.0008499622344970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc7f328fcc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;4]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc7f32898d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;5]" time="0.0005078315734863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc7f327c6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;6]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc7f3272a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;7]" time="0.0004711151123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc835ce3ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;8]" time="0.0005736351013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc835cddb70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;9]" time="0.0004971027374267578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc7f328f320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;10]" time="0.0005280971527099609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc7f328f438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;11]" time="0.0011754035949707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc7f3298320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;12]" time="0.0005519390106201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc835ce3b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;13]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc7f326a6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;14]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc7f328f160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;15]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc7f328f6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;16]" time="0.0005075931549072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc7f3289dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;17]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc7f3281860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;18]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc7f3281390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;19]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc7f3272f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;20]" time="0.0008273124694824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc835c87240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;21]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc7f3281eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;22]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc7f32898d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;23]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc7f328f780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;24]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc837206f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;25]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc83720d390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;26]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc835ce3828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;27]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc7f327c978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;28]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc7f327c0b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;29]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc835ce3c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;30]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc83720d438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;31]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc7f328ffd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;32]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc7f3289438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;33]" time="0.0005431175231933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc7f3281390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;34]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc835c87390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;35]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc7f32984a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;36]" time="0.0009224414825439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc7f3298828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;37]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc7f32814e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;38]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc7f32899e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;39]" time="0.0004968643188476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc7f328f9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;40]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc7f326af28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;41]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc835ce3240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;42]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7fc7f327c438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;0]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc7f3298048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;1]" time="0.0008695125579833984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc7f3298d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;2]" time="0.0005090236663818359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc835ce3240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;3]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc7f328f898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;4]" time="0.0005080699920654297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc837206c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;5]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc7f32d3d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;6]" time="0.0005106925964355469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc7f3281860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;7]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc7f3298a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;8]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc7f3298588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;9]" time="0.0008513927459716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc7f32a03c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;10]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc7f3298898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;11]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc835c87eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;12]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc7f3289da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;13]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc7f328f710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;14]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc83720d198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;15]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc83030af60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;16]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc7f32a01d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;17]" time="0.0007383823394775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc7f32a09e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;18]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc7f327c438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;19]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc7f328f9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;20]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc7f3289780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;21]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc835c52748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;22]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc7f3298898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;23]" time="0.0005843639373779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc7f32a05c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;24]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc7f32a0438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;25]" time="0.0008249282836914062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc7f3226048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;26]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc7f32a07f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;27]" time="0.0004982948303222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc7f3298390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;28]" time="0.0005099773406982422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc830313a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;29]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc7f3281860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;30]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc83720dfd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;31]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc8302d0630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;32]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc7f3226160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;33]" time="0.0007634162902832031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc7f3226668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;34]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc7f328f160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;35]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc83720d978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;36]" time="0.0005767345428466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc830313eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;37]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc7f3298f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;38]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc7f32a0860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;39]" time="0.0005574226379394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc7f32a0518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;40]" time="0.0005104541778564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc7f3226198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;41]" time="0.0008013248443603516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc7f3226c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;42]" time="0.0005061626434326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7fc7f3298978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;0]" time="0.0005092620849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc830313cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;1]" time="0.0004906654357910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc7f3281208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;2]" time="0.0005078315734863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc7f3289860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;3]" time="0.0005195140838623047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc7f328f048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;4]" time="0.0005180835723876953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc7f32262e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;5]" time="0.0005011558532714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc7f3226400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;6]" time="0.0008563995361328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc7f322d2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;7]" time="0.0005209445953369141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc7f32267b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;8]" time="0.0005054473876953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc7f328f048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;9]" time="0.00061798095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc837206a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;10]" time="0.0006124973297119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc7f32814e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;11]" time="0.0006229877471923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc830313828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;12]" time="0.0006940364837646484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc7f32a0d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;13]" time="0.0005209445953369141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc7f322d0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;14]" time="0.00086212158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc7f322d908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;15]" time="0.0004956722259521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc7f3298908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;16]" time="0.0004913806915283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc835cc3cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;17]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc837216438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;18]" time="0.0006358623504638672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc7f327c4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;19]" time="0.0005052089691162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc7f3226da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;20]" time="0.0004971027374267578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc7f322d518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;21]" time="0.0005242824554443359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc7f322d390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;22]" time="0.0011010169982910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc7f322df28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;23]" time="0.0005445480346679688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc7f3289e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;24]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc835cca588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;25]" time="0.0006787776947021484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc7f322dcf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;26]" time="0.0005350112915039062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc7f322d9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;27]" time="0.0005054473876953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc7f3226400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;28]" time="0.0005292892456054688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc7f3226048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;29]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc7f32a09e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;30]" time="0.0005109310150146484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc7f3298d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;31]" time="0.0008440017700195312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc7f32a07f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;32]" time="0.0005776882171630859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc7f3226048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;33]" time="0.0005006790161132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc7f32261d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;34]" time="0.0005266666412353516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc7f322d6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;35]" time="0.0005397796630859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc830313390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;36]" time="0.00052642822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc835cc3fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;37]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc83031b588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;38]" time="0.0005104541778564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc7f327cbe0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;39]" time="0.0008394718170166016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc837326630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;40]" time="0.0005035400390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc8372160f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;41]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc835ccad68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;42]" time="0.0005333423614501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7fc7f322dcf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;0]" time="0.0005068778991699219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc7f322d4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;1]" time="0.0005183219909667969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc7f3226048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;2]" time="0.0005288124084472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc7f32a07f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;3]" time="0.0006856918334960938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc7f3237470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;4]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc7f32379b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;5]" time="0.0005452632904052734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc7f32262e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;6]" time="0.0005497932434082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc7f322d710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;7]" time="0.0005447864532470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc7f322dfd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;8]" time="0.0005466938018798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc835ccac18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;9]" time="0.0005085468292236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc83031b630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;10]" time="0.0005090236663818359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc7f32370f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;11]" time="0.0005097389221191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc7f3237d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;12]" time="0.0008409023284912109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc7f323d2b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;13]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc7f3237208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;14]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc83031b588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;15]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc835ccaeb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;16]" time="0.0005147457122802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc7f322dd30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;17]" time="0.0004954338073730469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc7f3226d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;18]" time="0.0005483627319335938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc8371f42e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;19]" time="0.0005042552947998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc7f323d128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;20]" time="0.0008251667022705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc7f323d8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;21]" time="0.0005090236663818359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc8371f4ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;22]" time="0.0004925727844238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc835cd2438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;23]" time="0.0005407333374023438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc7f322d438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;24]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc8372160f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;25]" time="0.0005736351013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc7f3237160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;26]" time="0.0005092620849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc7f323d5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;27]" time="0.0005033016204833984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc7f323d358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;28]" time="0.0008060932159423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc7f323def0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;29]" time="0.0004971027374267578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc7f323d470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;30]" time="0.00054931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc7f3237ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;31]" time="0.0004992485046386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc8371fb4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;32]" time="0.0005459785461425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc835cc3ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;33]" time="0.0005035400390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc7f322dd30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;34]" time="0.0005035400390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc8371f4fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;35]" time="0.0005993843078613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc7f32a0400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;36]" time="0.0009200572967529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc7f3243550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;37]" time="0.0004990100860595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc7f3226748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;38]" time="0.000537872314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc7f322d4a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;39]" time="0.0005404949188232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc7f327c1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;40]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc7f3237278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;41]" time="0.0006422996520996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc7f323d940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;42]" time="0.0005106925964355469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7fc7f323dda0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;0]" time="0.0005884170532226562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc7f3243400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;1]" time="0.0008530616760253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc7f3243b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;2]" time="0.0005092620849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc7f323d6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;3]" time="0.0005202293395996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc7f328f8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;4]" time="0.0005590915679931641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc835cc3ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;5]" time="0.0005173683166503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc7f322d9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;6]" time="0.0005939006805419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc8371f4828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;7]" time="0.0005078315734863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc7f3243240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;8]" time="0.0005061626434326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc7f32430f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;9]" time="0.0008594989776611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc7f324a1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;10]" time="0.0005693435668945312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc7f3243208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;11]" time="0.0005047321319580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc7f3226438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;12]" time="0.0005218982696533203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc7f322d9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;13]" time="0.0004892349243164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc8371fbac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;14]" time="0.0005047321319580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc7f3237f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;15]" time="0.000518798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc7f323dfd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;16]" time="0.0005857944488525391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc7f324a240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;17]" time="0.0008299350738525391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc7f324a7f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;18]" time="0.0005052089691162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc83724a828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;19]" time="0.0004971027374267578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc8371fb0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;20]" time="0.0005095005035400391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc835cc3b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;21]" time="0.0004980564117431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc7f322dda0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;22]" time="0.0005161762237548828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc7f3243240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;23]" time="0.0005035400390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc7f32a0828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;24]" time="0.00054931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc7f324a358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;25]" time="0.0008299350738525391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc7f324ae10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;26]" time="0.0004935264587402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc7f3243978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;27]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc8371f4f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;28]" time="0.0005154609680175781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc8371fb6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;29]" time="0.000545501708984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc7f3237f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;30]" time="0.0006346702575683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc7f323db38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;31]" time="0.0005369186401367188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc7f324a470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;32]" time="0.0005147457122802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc7f324a588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;33]" time="0.0012423992156982422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc7f3250470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;34]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc8371fb240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;35]" time="0.0005559921264648438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc7f322dfd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;36]" time="0.0005295276641845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc7f324ac18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;37]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc7f324ac88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;38]" time="0.0005142688751220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc7f3243c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;39]" time="0.0005257129669189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc7f3243b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;40]" time="0.0005457401275634766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc7f323d2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;41]" time="0.0005140304565429688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc7f32375f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;42]" time="0.0009653568267822266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7fc7f3237668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;0]" time="0.0005044937133789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc7f3243550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;1]" time="0.0005166530609130859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc7f324aeb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;2]" time="0.0005736351013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc7f324a5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;3]" time="0.0005223751068115234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc837250828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;4]" time="0.0005185604095458984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc8371f42e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;5]" time="0.0005190372467041016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc83724ab70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;6]" time="0.000514984130859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc7f32d83c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;7]" time="0.0005528926849365234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc7f3289da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;8]" time="0.0007321834564208984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc8371fb240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;9]" time="0.0005326271057128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc83030ac18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;10]" time="0.0005340576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc7f324a828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;11]" time="0.0005183219909667969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc7f324ab00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;12]" time="0.0005283355712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc7f3243550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;13]" time="0.0004947185516357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc7f3237668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;14]" time="0.0005011558532714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc7f3250320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;15]" time="0.0008566379547119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc7f3250b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;16]" time="0.0005173683166503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc7f32432b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;17]" time="0.0005340576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc7f324ac88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;18]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc83735ae10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;19]" time="0.0005831718444824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc8371f42e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;20]" time="0.0005121231079101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc83724acc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;21]" time="0.0005221366882324219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc7f3250160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;22]" time="0.0005431175231933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc7f32500f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;23]" time="0.0008223056793212891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc7f325a0b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;24]" time="0.000499725341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc7f3250f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;25]" time="0.0005164146423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc7f3250080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;26]" time="0.0005118846893310547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc7f3226e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;27]" time="0.0005176067352294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc83735ad68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;28]" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc7f3243898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;29]" time="0.0005788803100585938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc8373610f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;30]" time="0.0005121231079101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc7f325a1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;31]" time="0.0009512901306152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc7f325a6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;32]" time="0.0005116462707519531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc837361978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;33]" time="0.0006692409515380859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc7f324a7f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;34]" time="0.0006136894226074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc837250198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;35]" time="0.0005598068237304688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc8371f4ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;36]" time="0.0005288124084472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc7f3250320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;37]" time="0.0005404949188232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc7f3250e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;38]" time="0.000522613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc7f325a208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;39]" time="0.0008740425109863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc7f325acf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;40]" time="0.0005450248718261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc7f32506a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;41]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc7f3226080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;42]" time="0.0005404949188232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7fc83735af60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;0]" time="0.0005309581756591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc7f32438d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;1]" time="0.0004992485046386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc7f323d748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;2]" time="0.0005214214324951172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc7f325a358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;3]" time="0.0005655288696289062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc7f325a470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;4]" time="0.0009031295776367188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc7f325f358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;5]" time="0.0007197856903076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc7f325a940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;6]" time="0.0005071163177490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc7f323d898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;7]" time="0.0005435943603515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc7f3243a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;8]" time="0.0005655288696289062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc83735ae10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;9]" time="0.0005278587341308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc8371f4ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;10]" time="0.0005369186401367188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc7f3250160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;11]" time="0.0005176067352294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc7f325f160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;12]" time="0.0008935928344726562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc7f325f978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;13]" time="0.0005433559417724609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc83724ac18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;14]" time="0.0005917549133300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc8371fba20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;15]" time="0.0005133152008056641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc837361f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;16]" time="0.0005204677581787109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc830324b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;17]" time="0.0005123615264892578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc7f325a8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;18]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc7f325fa58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;19]" time="0.0005102157592773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc7f325f470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;20]" time="0.0010633468627929688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc7f325ff98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;21]" time="0.0005261898040771484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc7f325f710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;22]" time="0.0005407333374023438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc7f325a198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;23]" time="0.0005750656127929688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc830324550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;24]" time="0.0005092620849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc837361cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;25]" time="0.0005173683166503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc7f324af28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;26]" time="0.0005176067352294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc83724ac18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;27]" time="0.0005342960357666016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc7f31e80b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;28]" time="0.0008976459503173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc7f31e85f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;29]" time="0.0005035400390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc837250b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;30]" time="0.0005369186401367188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc837361978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;31]" time="0.0005249977111816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc8303245f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;32]" time="0.0005371570587158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc7f325a208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;33]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc7f325fba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;34]" time="0.0005438327789306641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc7f325f4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;35]" time="0.0005066394805908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc7f31e80f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;36]" time="0.0008406639099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc7f31e8c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;37]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc83032c940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;38]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc7f325a9e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;39]" time="0.0006642341613769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc830324400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;40]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc8371fb780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;41]" time="0.0005552768707275391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc7f32500b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;42]" time="0.0005118846893310547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7fc7f31e8278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;0]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc7f31e8390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;1]" time="0.0013420581817626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc7f31ed278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;2]" time="0.0004775524139404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc837361198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;3]" time="0.0005092620849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc83032c208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;4]" time="0.00052642822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc7f31e8f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;5]" time="0.0005400180816650391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc7f31e8908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;6]" time="0.0004994869232177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc7f325fbe0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;7]" time="0.0006093978881835938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc83726a4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;8]" time="0.0005371570587158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc7f325a438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;9]" time="0.0006368160247802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc7f3250b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;10]" time="0.0009555816650390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc7f325acf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;11]" time="0.0005300045013427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc7f325f748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;12]" time="0.0005135536193847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc7f31e8358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;13]" time="0.0005331039428710938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc7f31e8710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;14]" time="0.0005421638488769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc83032c358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;15]" time="0.0005230903625488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc837349630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;16]" time="0.0005114078521728516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc837361a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;17]" time="0.0005257129669189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc7f3237048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;18]" time="0.0007786750793457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc7f3237f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;19]" time="0.0006182193756103516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc7f3243a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;20]" time="0.0005061626434326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc83032c2b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;21]" time="0.0005650520324707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc7f31e8e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;22]" time="0.000522613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc7f31e80f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;23]" time="0.0005967617034912109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc7f325f748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;24]" time="0.0005369186401367188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc7f325acf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;25]" time="0.0005483627319335938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc7f31ed780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;26]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc7f31edcc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;27]" time="0.0006163120269775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc7f325ff60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;28]" time="0.000492095947265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc7f31e8208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;29]" time="0.0005204677581787109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc83032c208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;30]" time="0.0005764961242675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc837349198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;31]" time="0.0005128383636474609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc8371fb780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;32]" time="0.0005097389221191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc7f31ed4a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;33]" time="0.0005204677581787109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc7f31f6080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;34]" time="0.0008881092071533203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc7f31f65c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;35]" time="0.0005238056182861328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc7f31ed8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;36]" time="0.0005035400390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc7f3298be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;37]" time="0.0005223751068115234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc8373492e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;38]" time="0.0005800724029541016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc7f31e87b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;39]" time="0.0005192756652832031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc83726a4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;40]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc7f325a9e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;41]" time="0.0005543231964111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc7f31f6240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;42]" time="0.0008854866027832031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7fc7f31f6be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;0]" time="0.0005571842193603516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc7f31e8208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;1]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc83032cb38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;2]" time="0.0005259513854980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc837350780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;3]" time="0.0005543231964111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc7f3243b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;4]" time="0.0005257129669189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc7f31ede10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;5]" time="0.0005183219909667969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc7f31f6828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;6]" time="0.0005788803100585938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc7f31f6400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;7]" time="0.0008749961853027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc7f31ff240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;8]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc7f31f6748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;9]" time="0.0005025863647460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc7f31ed550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;10]" time="0.0005171298980712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc7f3298be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;11]" time="0.0005083084106445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc8373504e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;12]" time="0.0005755424499511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc83032cb38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;13]" time="0.0005125999450683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc7f325f320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;14]" time="0.0005269050598144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc7f31ff048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;15]" time="0.0008540153503417969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc7f31ff860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;16]" time="0.0005524158477783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc7f31e80b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;17]" time="0.0005235671997070312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc8372a04e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;18]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc837350b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;19]" time="0.0005209445953369141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc7f31ed588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;20]" time="0.0005033016204833984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc7f31f6c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;21]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc7f31f6780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;22]" time="0.0005254745483398438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc7f31ff048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;23]" time="0.0009486675262451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc7f31ffe80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;24]" time="0.0005350112915039062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc7f31ff2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;25]" time="0.0005104541778564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc7f31f61d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;26]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc7f31f6630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;27]" time="0.0005500316619873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc7f31edd30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;28]" time="0.0005326271057128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc83032c160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;29]" time="0.0005319118499755859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc7f323dfd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;30]" time="0.0005400180816650391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc7f31e80f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;31]" time="0.0008366107940673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc7f32064e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;32]" time="0.0005278587341308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc8372a0780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;33]" time="0.0005209445953369141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc837350c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;34]" time="0.0005104541778564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc7f31edef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;35]" time="0.0006468296051025391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc7f31f6160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;36]" time="0.0005135536193847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc7f31ff5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;37]" time="0.0005259513854980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc7f31ffc50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;38]" time="0.0005178451538085938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc7f3206358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;39]" time="0.0008685588836669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc7f3206b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;40]" time="0.0005297660827636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc837227a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;41]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc7f31f61d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;42]" time="0.0005452632904052734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7fc7f3298978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;0]" time="0.0005180835723876953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc837350c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;1]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc7f325ab00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;2]" time="0.0005142688751220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc7f32067b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;3]" time="0.0006442070007324219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc7f3206198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;4]" time="0.0008077621459960938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc7f320d160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;5]" time="0.0006060600280761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc7f3206fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;6]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc7f32061d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;7]" time="0.0004990100860595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc8372a0e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;8]" time="0.0005059242248535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc7f31ed550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;9]" time="0.0005435943603515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc7f31f6a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;10]" time="0.0005102157592773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc8372274e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;11]" time="0.0004966259002685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc7f320d278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;12]" time="0.0012745857238769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc7f320d780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;13]" time="0.0004935264587402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc83032cbe0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;14]" time="0.0006518363952636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc835ceda20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;15]" time="0.000518798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc7f32069b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;16]" time="0.0005218982696533203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc7f3206e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;17]" time="0.0005183219909667969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc7f31ffb38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;18]" time="0.0005342960357666016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc7f31f6a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;19]" time="0.0005400180816650391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc837349b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;20]" time="0.0005543231964111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc7f31ed9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;21]" time="0.0009052753448486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc7f31f6ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;22]" time="0.0006725788116455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc7f31ff240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;23]" time="0.0006124973297119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc7f3206e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;24]" time="0.0005059242248535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc7f32061d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;25]" time="0.000514984130859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc8372a0588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;26]" time="0.0005140304565429688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc835cf4588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;27]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc7f31ed9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;28]" time="0.0005195140838623047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc7f325a080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;29]" time="0.0005333423614501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc7f325a080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;30]" time="0.0005793571472167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc7f31ed5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;31]" time="0.0005433559417724609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc835cf4588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;32]" time="0.0005156993865966797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc7f325f470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;33]" time="0.000545501708984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc7f3206668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;34]" time="0.0005154609680175781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc7f31ffef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;35]" time="0.0005025863647460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc7f31f6ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;36]" time="0.0005424022674560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc7f320d128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;37]" time="0.0009074211120605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc7f320de48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;38]" time="0.0004961490631103516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc7f31ff080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;39]" time="0.0004961490631103516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc7f32067f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;40]" time="0.0005362033843994141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc8372a0780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;41]" time="0.0005161762237548828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc835cf4d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;42]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7fc837227438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;0]" time="0.0005249977111816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc7f320d978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;1]" time="0.0005245208740234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc7f320d2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;2]" time="0.0008664131164550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc7f32163c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;3]" time="0.0005552768707275391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc7f320d4a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;4]" time="0.0005204677581787109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc837227780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;5]" time="0.0005357265472412109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc835cf4cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;6]" time="0.0005254745483398438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc7f325f470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;7]" time="0.0005171298980712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc7f3206588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;8]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc835c7d2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;9]" time="0.0006177425384521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc7f3216208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;10]" time="0.0008485317230224609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc7f32169e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;11]" time="0.000518798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc7f31ffe48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;12]" time="0.0005974769592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc7f325f320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;13]" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc8371fb780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;14]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc837227a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;15]" time="0.0005385875701904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc7f320d630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;16]" time="0.0005466938018798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc7f32165c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;17]" time="0.0005207061767578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc7f3216438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;18]" time="0.000827789306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc7f321c048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;19]" time="0.0005364418029785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc7f32167f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;20]" time="0.0004956722259521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc837230a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;21]" time="0.0004911422729492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc7f320d320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;22]" time="0.0005207061767578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc8371fb240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;23]" time="0.000518798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc8372a0780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;24]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc7f3206cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;25]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc7f321c160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;26]" time="0.0008425712585449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc7f321c668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;27]" time="0.0005402565002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc7f3206fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;28]" time="0.0005109310150146484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc837237390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;29]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc7f3298978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;30]" time="0.0005114078521728516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc7f320da58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;31]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc7f3216668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;32]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc7f3216518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;33]" time="0.0005288124084472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc7f321c198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;34]" time="0.0009310245513916016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc7f321cc88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;35]" time="0.0005419254302978516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc7f3216da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;36]" time="0.0005326271057128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc7f320df98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;37]" time="0.0004968643188476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc837227a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;38]" time="0.000530242919921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc837237828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;39]" time="0.0005164146423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc7f3206cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;40]" time="0.0005331039428710938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc7f321c2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;41]" time="0.0005273818969726562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc7f321c400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;42]" time="0.0008013248443603516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7fc7f32222e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;0]" time="0.0004940032958984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7fc7f321c780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;1]" time="0.0005128383636474609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7fc7f31f69e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;2]" time="0.0005121231079101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7fc837237978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;3]" time="0.0005490779876708984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7fc835cf4d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;4]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7fc7f320dcf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;5]" time="0.000553131103515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7fc7f3216048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;6]" time="0.0005140304565429688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7fc7f32220f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;7]" time="0.0009191036224365234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7fc7f3222908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;8]" time="0.000507354736328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7fc7f320df28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;9]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7fc835cf42e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;10]" time="0.0005090236663818359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7fc837237fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;11]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7fc8372cb198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;12]" time="0.0005011558532714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7fc7f321cda0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;13]" time="0.0005095005035400391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7fc7f3222518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;14]" time="0.0005283355712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7fc7f3222390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;15]" time="0.0008714199066162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7fc7f3222f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;16]" time="0.0005335807800292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7fc7f32224e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;17]" time="0.0005116462707519531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7fc7f321c8d0&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem0]" time="0.001180887222290039"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7fc7f321ceb8&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem1]" time="0.0005218982696533203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7fc837237978&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem2]" time="0.0005276203155517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7fc7f325f320&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem3]" time="0.0005345344543457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7fc7f320df28&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem4]" time="0.0005631446838378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7fc7f31ac080&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem5]" time="0.001127481460571289"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7fc7f31ac5c0&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem6]" time="0.0005483627319335938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7fc8372374e0&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem7]" time="0.0005321502685546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7fc8372cb588&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem8]" time="0.0005204677581787109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7fc7f32224e0&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem9]" time="0.0006113052368164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7fc7f3222ef0&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem10]" time="0.0005168914794921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7fc7f321cb38&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem11]" time="0.0005125999450683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7fc7f32167f0&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem12]" time="0.0004837512969970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7fc7f31edb38&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem13]" time="0.0005254745483398438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7fc7f3250c50&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem14]" time="0.0008397102355957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7fc835cf4198&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem15]" time="0.0005180835723876953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7fc837230f60&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem0]" time="0.0005419254302978516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7fc7f321c278&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem1]" time="0.0005083084106445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7fc7f3222d68&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem2]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7fc828a8de10&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem3]" time="0.0005292892456054688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7fc8372cb198&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem4]" time="0.0005643367767333984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7fc837237d68&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem5]" time="0.00051116943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7fc7f31ac2b0&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem6]" time="0.0008554458618164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7fc7f323d748&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem7]" time="0.0005195140838623047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7fc8372cb780&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem8]" time="0.0005517005920410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7fc828a9b588&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem9]" time="0.0005342960357666016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7fc7f3222da0&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem10]" time="0.0005137920379638672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7fc7f321cf98&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem11]" time="0.0005154609680175781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7fc7f3216dd8&gt;</skipped></testcase><testcase classname="src.pymortests.basic" file="src/pymortests/basic.py" line="6" name="test_importable" time="0.0006561279296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/basic.py:6: &lt;py._xmlgen.raw object at 0x7fc7f31ac2b0&gt;</skipped></testcase><testcase classname="src.pymortests.block" file="src/pymortests/block.py" line="13" name="test_apply" time="0.0009565353393554688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/block.py:13: &lt;py._xmlgen.raw object at 0x7fc7f31acb38&gt;</skipped></testcase><testcase classname="src.pymortests.block" file="src/pymortests/block.py" line="39" name="test_apply_adjoint" time="0.0005087852478027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/block.py:39: &lt;py._xmlgen.raw object at 0x7fc7f31b30b8&gt;</skipped></testcase><testcase classname="src.pymortests.block" file="src/pymortests/block.py" line="65" name="test_block_diagonal" time="0.0005562305450439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/block.py:65: &lt;py._xmlgen.raw object at 0x7fc7f31edb38&gt;</skipped></testcase><testcase classname="src.pymortests.block" file="src/pymortests/block.py" line="76" name="test_blk_diag_apply_inverse" time="0.0005340576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/block.py:76: &lt;py._xmlgen.raw object at 0x7fc7f31fff28&gt;</skipped></testcase><testcase classname="src.pymortests.block" file="src/pymortests/block.py" line="98" name="test_blk_diag_apply_inverse_adjoint" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/block.py:98: &lt;py._xmlgen.raw object at 0x7fc7f32224e0&gt;</skipped></testcase><testcase classname="src.pymortests.cache.TestCache" file="src/pymortests/cache.py" line="57" name="test_runtime" time="0.001088857650756836"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/cache.py:57: &lt;py._xmlgen.raw object at 0x7fc828a9b240&gt;</skipped></testcase><testcase classname="src.pymortests.cache.TestCache" file="src/pymortests/cache.py" line="83" name="test_region_api" time="0.0005066394805908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/cache.py:83: &lt;py._xmlgen.raw object at 0x7fc828a935c0&gt;</skipped></testcase><testcase classname="src.pymortests.complex_values" file="src/pymortests/complex_values.py" line="11" name="test_complex" time="0.0006971359252929688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/complex_values.py:11: &lt;py._xmlgen.raw object at 0x7fc7f3237a58&gt;</skipped></testcase><testcase classname="src.pymortests.complex_values" file="src/pymortests/complex_values.py" line="65" name="test_real_imag" time="0.0005476474761962891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/complex_values.py:65: &lt;py._xmlgen.raw object at 0x7fc7f31b34a8&gt;</skipped></testcase><testcase classname="src.pymortests.complex_values" file="src/pymortests/complex_values.py" line="82" name="test_scal" time="0.0008714199066162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/complex_values.py:82: &lt;py._xmlgen.raw object at 0x7fc7f31b39e8&gt;</skipped></testcase><testcase classname="src.pymortests.complex_values" file="src/pymortests/complex_values.py" line="95" name="test_axpy" time="0.0005176067352294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/complex_values.py:95: &lt;py._xmlgen.raw object at 0x7fc7f325f470&gt;</skipped></testcase><testcase classname="src.pymortests.complex_values" file="src/pymortests/complex_values.py" line="107" name="test_dot" time="0.0005471706390380859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/complex_values.py:107: &lt;py._xmlgen.raw object at 0x7fc828a9b630&gt;</skipped></testcase><testcase classname="src.pymortests.complex_values" file="src/pymortests/complex_values.py" line="114" name="test_pairwise_dot" time="0.0006003379821777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/complex_values.py:114: &lt;py._xmlgen.raw object at 0x7fc7f321ce48&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[elliptic:&apos;0 0 0 0&apos;]" time="0.0010514259338378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc7f3216da0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[elliptic:&apos;1 2 0 3&apos;]" time="0.0005621910095214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc7f31ac860&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[elliptic:&apos;--rect 1 2 0 3&apos;]" time="0.00051116943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc7f31b3710&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[elliptic:&apos;0 0 2 1&apos;]" time="0.0005235671997070312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc7f31b3b00&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[elliptic:&apos;--fv 0 0 0 0&apos;]" time="0.0008385181427001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc7f31ba080&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[elliptic:&apos;--fv 1 2 0 3&apos;]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc7f31b3550&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[elliptic:&apos;--fv --rect 1 2 0 3&apos;]" time="0.0005114078521728516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc81b425b00&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[elliptic:&apos;--fv 0 0 2 1&apos;]" time="0.0005061626434326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc7f31acc50&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[elliptic2:&apos;1 20&apos;]" time="0.0005102157592773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc7f321c278&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[elliptic2:&apos;--fv 1 20&apos;]" time="0.0005431175231933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc7f3222b00&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[elliptic_oned:&apos;1 20&apos;]" time="0.0006597042083740234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc83723f240&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[elliptic_oned:&apos;--fv 1 20&apos;]" time="0.0005199909210205078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc7f31ba198&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[burgers:&apos;--num-flux=lax_friedrichs 0.1&apos;]" time="0.0008349418640136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc7f31ba6a0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[burgers:&apos;--num-flux=engquist_osher 0.1&apos;]" time="0.0005204677581787109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc828a9b6d8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[burgers:&apos;--num-flux=simplified_engquist_osher 0.1&apos;]" time="0.0005190372467041016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc7f3222d30&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[parabolic:&apos;heat 1&apos;]" time="0.0005321502685546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc7f321c278&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[parabolic:&apos;heat --rect 1&apos;]" time="0.0005154609680175781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc7f31ac748&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[parabolic:&apos;heat --fv 1&apos;]" time="0.0005385875701904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc7f31b3128&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[parabolic:&apos;heat --rect --fv 1&apos;]" time="0.0005071163177490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc7f31b33c8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[parabolic:&apos;dar 1&apos;]" time="0.000499725341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc7f31ba1d0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[parabolic:&apos;dar --rect 1&apos;]" time="0.0008683204650878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc7f31bacc0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[elliptic_unstructured:&apos;6.0 16 0.1&apos;]" time="0.0005218982696533203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc7f31b3d68&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[thermalblock:&apos;--plot-solutions --plot-err --plot-error-sequence 2 2 3 5&apos;]" time="0.0005102157592773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc7f31acc50&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[thermalblock:&apos;--fenics 2 2 3 5&apos;]" time="0.0005400180816650391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc7f321ce48&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[thermalblock:&apos;--greedy-without-estimator 3 1 2 5&apos;]" time="0.0005006790161132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc7f3222da0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[thermalblock:&apos;--alg=pod 2 2 3 5&apos;]" time="0.0005156993865966797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc81b3ac668&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[thermalblock:&apos;--alg=adaptive_greedy 2 2 10 30&apos;]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc7f31ba320&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[thermalblock:&apos;--alg=naive --reductor=traditional 2 2 10 5&apos;]" time="0.0004985332489013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc7f31ba438&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[thermalblock_adaptive:&apos;10&apos;]" time="0.0008282661437988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc7f31c1320&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[thermalblock_adaptive:&apos;--visualize-refinement 10&apos;]" time="0.0005078315734863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc7f31ba7b8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[thermalblock_simple:&apos;pymor naive 2 10 10&apos;]" time="0.0004909038543701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc81b3ac9b0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[thermalblock_simple:&apos;fenics greedy 2 10 10&apos;]" time="0.0005402565002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc828a93908&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[thermalblock_simple:&apos;ngsolve greedy 2 10 10&apos;]" time="0.0004925727844238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc7f31ffd30&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[thermalblock_simple:&apos;pymor-text adaptive_greedy -1 3 3&apos;]" time="0.0005252361297607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc7f31ac940&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[thermalblock_gui:&apos;--testing 2 2 3 5&apos;]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc7f31b33c8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[burgers_ei:&apos;1 2 2 5 2 5 --plot-ei-err&apos;]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc7f31c1128&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[burgers_ei:&apos;1 2 2 5 2 5 --ei-alg=deim&apos;]" time="0.0008006095886230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc7f31c1940&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[parabolic_mor:&apos;pymor greedy 2 3 1&apos;]" time="0.0005125999450683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc7f31b3ba8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[parabolic_mor:&apos;pymor pod 2 3 1&apos;]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc7f3216da0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[parabolic_mor:&apos;fenics adaptive_greedy 2 3 1&apos;]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc828a93908&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[heat:&apos;&apos;]" time="0.0005006790161132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc81b3ac518&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[delay:&apos;&apos;]" time="0.0004954338073730469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc7f31ba710&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="159" name="test_demos[string_equation:&apos;&apos;]" time="0.0004956722259521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:159: &lt;py._xmlgen.raw object at 0x7fc7f31c19e8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_analyze_pickle1" time="0.0005116462707519531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7fc7f31c1400&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="175" name="test_analyze_pickle2" time="0.0008304119110107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:175: &lt;py._xmlgen.raw object at 0x7fc7f31c1f60&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="186" name="test_analyze_pickle3" time="0.0005071163177490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:186: &lt;py._xmlgen.raw object at 0x7fc7f31c15f8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="197" name="test_analyze_pickle4" time="0.0005090236663818359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:197: &lt;py._xmlgen.raw object at 0x7fc7f31bae80&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[elliptic:&apos;0 0 0 0&apos;]" time="0.0005538463592529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc828be4780&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[elliptic:&apos;1 2 0 3&apos;]" time="0.0005397796630859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc81b3f8be0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[elliptic:&apos;--rect 1 2 0 3&apos;]" time="0.0005099773406982422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc7f321cc88&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[elliptic:&apos;0 0 2 1&apos;]" time="0.0005388259887695312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc7f31b3128&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[elliptic:&apos;--fv 0 0 0 0&apos;]" time="0.0005204677581787109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc7f31c6080&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[elliptic:&apos;--fv 1 2 0 3&apos;]" time="0.0008580684661865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc7f31c65c0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[elliptic:&apos;--fv --rect 1 2 0 3&apos;]" time="0.0005059242248535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc7f31b35f8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[elliptic:&apos;--fv 0 0 2 1&apos;]" time="0.0005033016204833984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc8372cbc18&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[elliptic2:&apos;1 20&apos;]" time="0.0005216598510742188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc81b3acb00&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[elliptic2:&apos;--fv 1 20&apos;]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc7f31baa58&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[elliptic_oned:&apos;1 20&apos;]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc7f31c19e8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[elliptic_oned:&apos;--fv 1 20&apos;]" time="0.0005393028259277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc7f31c1390&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[burgers:&apos;--num-flux=lax_friedrichs 0.1&apos;]" time="0.0005431175231933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc7f31c60b8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[burgers:&apos;--num-flux=engquist_osher 0.1&apos;]" time="0.0011138916015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc7f31c6be0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[burgers:&apos;--num-flux=simplified_engquist_osher 0.1&apos;]" time="0.0005524158477783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc81b3ac128&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[parabolic:&apos;heat 1&apos;]" time="0.000499725341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc81b40d668&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[parabolic:&apos;heat --rect 1&apos;]" time="0.0005257129669189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc7f31c1c18&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[parabolic:&apos;heat --fv 1&apos;]" time="0.0005185604095458984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc7f31c17b8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[parabolic:&apos;heat --rect --fv 1&apos;]" time="0.0005087852478027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc7f31ba438&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[parabolic:&apos;dar 1&apos;]" time="0.0005335807800292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc7f31b3128&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[parabolic:&apos;dar --rect 1&apos;]" time="0.0005040168762207031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc7f31ac240&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[elliptic_unstructured:&apos;6.0 16 0.1&apos;]" time="0.0005104541778564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc7f31ac438&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[thermalblock:&apos;--plot-solutions --plot-err --plot-error-sequence 2 2 3 5&apos;]" time="0.0008399486541748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc7f31acb38&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[thermalblock:&apos;--fenics 2 2 3 5&apos;]" time="0.0005273818969726562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc7f31badd8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[thermalblock:&apos;--greedy-without-estimator 3 1 2 5&apos;]" time="0.0004966259002685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc7f31ba390&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[thermalblock:&apos;--alg=pod 2 2 3 5&apos;]" time="0.0005176067352294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc7f31c1d68&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[thermalblock:&apos;--alg=adaptive_greedy 2 2 10 30&apos;]" time="0.0005140304565429688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc81b40db00&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[thermalblock:&apos;--alg=naive --reductor=traditional 2 2 10 5&apos;]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc7f3222d68&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[thermalblock_adaptive:&apos;10&apos;]" time="0.0005323886871337891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc81b3ac518&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[thermalblock_adaptive:&apos;--visualize-refinement 10&apos;]" time="0.0005235671997070312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc7f31c6c88&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[thermalblock_simple:&apos;pymor naive 2 10 10&apos;]" time="0.0005145072937011719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc7f320d4e0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[thermalblock_simple:&apos;fenics greedy 2 10 10&apos;]" time="0.0004990100860595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc81b41c9e8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[thermalblock_simple:&apos;ngsolve greedy 2 10 10&apos;]" time="0.0005180835723876953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc81b40d470&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[thermalblock_simple:&apos;pymor-text adaptive_greedy -1 3 3&apos;]" time="0.000518798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc7f31c1748&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[thermalblock_gui:&apos;--testing 2 2 3 5&apos;]" time="0.0005030632019042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc7f31ba390&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[burgers_ei:&apos;1 2 2 5 2 5 --plot-ei-err&apos;]" time="0.0005090236663818359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc7f31b3898&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[burgers_ei:&apos;1 2 2 5 2 5 --ei-alg=deim&apos;]" time="0.0005207061767578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc7f31c6cc0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[parabolic_mor:&apos;pymor greedy 2 3 1&apos;]" time="0.00055694580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc7f31c6588&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[parabolic_mor:&apos;pymor pod 2 3 1&apos;]" time="0.0008366107940673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc7f31d32e8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[parabolic_mor:&apos;fenics adaptive_greedy 2 3 1&apos;]" time="0.000514984130859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc7f31c6358&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[heat:&apos;&apos;]" time="0.0005288124084472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc7f31b3128&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[delay:&apos;&apos;]" time="0.0005381107330322266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc828be49e8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="207" name="test_thermalblock_ipython[string_equation:&apos;&apos;]" time="0.0005087852478027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:207: &lt;py._xmlgen.raw object at 0x7fc81b40d668&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="221" name="test_thermalblock_results[thermalblock:&apos;--plot-solutions --plot-err --plot-error-sequence 2 2 3 5&apos;]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:221: &lt;py._xmlgen.raw object at 0x7fc81b3b41d0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="221" name="test_thermalblock_results[thermalblock:&apos;--fenics 2 2 3 5&apos;]" time="0.0005643367767333984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:221: &lt;py._xmlgen.raw object at 0x7fc81b404f98&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="221" name="test_thermalblock_results[thermalblock:&apos;--greedy-without-estimator 3 1 2 5&apos;]" time="0.0005385875701904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:221: &lt;py._xmlgen.raw object at 0x7fc7f31d30f0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="221" name="test_thermalblock_results[thermalblock:&apos;--alg=pod 2 2 3 5&apos;]" time="0.0008492469787597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:221: &lt;py._xmlgen.raw object at 0x7fc7f31d3828&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="221" name="test_thermalblock_results[thermalblock:&apos;--alg=adaptive_greedy 2 2 10 30&apos;]" time="0.0005137920379638672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:221: &lt;py._xmlgen.raw object at 0x7fc81b41ca58&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="221" name="test_thermalblock_results[thermalblock:&apos;--alg=naive --reductor=traditional 2 2 10 5&apos;]" time="0.0005025863647460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:221: &lt;py._xmlgen.raw object at 0x7fc81b40da58&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="234" name="test_burgers_ei_results" time="0.0005445480346679688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:234: &lt;py._xmlgen.raw object at 0x7fc7f31c16a0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="243" name="test_parabolic_mor_results" time="0.000545501708984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:243: &lt;py._xmlgen.raw object at 0x7fc7f31bab70&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;0]" time="0.0012078285217285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fc83723f4e0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;1]" time="0.0005176067352294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fc7f31c6160&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;2]" time="0.0005300045013427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fc7f31d34a8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;3]" time="0.0008368492126464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fc7f31d3e80&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;4]" time="0.0005545616149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fc7f31d3a20&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;5]" time="0.0005295276641845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fc7f31c6080&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;6]" time="0.0005578994750976562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fc7f31b3080&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;7]" time="0.0005469322204589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fc7f31ba6a0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;8]" time="0.0005147457122802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fc81b40d668&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;9]" time="0.0005178451538085938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fc81b41c668&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;10]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fc835ceda20&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;11]" time="0.0008711814880371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fc7f31da4e0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;12]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fc81b3b43c8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;13]" time="0.00051116943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fc7f31c19e8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;14]" time="0.0005292892456054688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fc7f31ba048&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;15]" time="0.0004985332489013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fc7f31c6160&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;16]" time="0.0005078315734863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fc7f31d3a90&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;17]" time="0.0005245208740234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fc7f31d3ba8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;18]" time="0.0005028247833251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fc7f31da358&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;19]" time="0.0008516311645507812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fc7f31dab00&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;20]" time="0.0005042552947998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fc7f31d3a90&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;21]" time="0.0005075931549072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fc7f31c6fd0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;22]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fc837349c18&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;23]" time="0.0005316734313964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7fc81b40d710&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;0]" time="0.0005211830139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fc7f320de10&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;1]" time="0.0005450248718261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fc7f31da7b8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;2]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fc7f31da198&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;3]" time="0.0008187294006347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fc7f31de160&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;4]" time="0.0004990100860595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fc7f31dafd0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;5]" time="0.0005145072937011719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fc7f31da6d8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;6]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fc7f31c1940&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;7]" time="0.0005156993865966797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fc7f31ba278&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;8]" time="0.0005364418029785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fc7f31c6fd0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;9]" time="0.0006532669067382812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fc81b1770f0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;10]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fc7f31de278&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;11]" time="0.0008332729339599609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fc7f31de780&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;12]" time="0.0005350112915039062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fc81b16efd0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;13]" time="0.0005025863647460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fc7f31c6e48&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;14]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fc7f31c1748&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;15]" time="0.0005583763122558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fc7f31da668&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;16]" time="0.0005035400390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fc7f31dacf8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;17]" time="0.0005691051483154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fc81b187518&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;18]" time="0.0005121231079101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fc7f31de2b0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;19]" time="0.0008187294006347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fc7f31deda0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;20]" time="0.0005035400390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fc7f31da128&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;21]" time="0.0004940032958984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7fc81b3f8908&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;0]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fc81b41cc88&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;1]" time="0.0005133152008056641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fc7f31c6588&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;2]" time="0.0005917549133300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fc7f31d35f8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;3]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fc7f31de400&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;4]" time="0.0005266666412353516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fc7f31de518&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;5]" time="0.0007929801940917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fc7f3167400&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;6]" time="0.0004937648773193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fc7f31dea90&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;7]" time="0.0004916191101074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fc81b1770f0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;8]" time="0.0005171298980712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fc7f31b3128&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;9]" time="0.0005364418029785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fc81b3b4278&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;10]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fc7f31da978&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;11]" time="0.0005199909210205078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fc81b187a58&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;12]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fc7f3167208&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;13]" time="0.0011932849884033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fc7f3167a20&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;14]" time="0.0005059242248535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fc81b41c668&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;15]" time="0.0005128383636474609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fc81b16efd0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;16]" time="0.0005145072937011719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fc7f31de470&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;17]" time="0.0004940032958984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fc7f31de8d0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;18]" time="0.0005071163177490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fc7f31da588&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;19]" time="0.0005350112915039062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fc7f31d3630&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;20]" time="0.00048732757568359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fc81b40da58&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;21]" time="0.000507354736328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fc7f31ac438&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;22]" time="0.0008158683776855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fc7f31d35f8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;23]" time="0.0005259513854980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7fc7f31daba8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function0]" time="0.0010762214660644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7fc7f31de748&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function1]" time="0.0006337165832519531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7fc7f31de470&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function2]" time="0.0005788803100585938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7fc81b16eb70&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function3]" time="0.0005242824554443359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7fc81b3b41d0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function4]" time="0.0005161762237548828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7fc7f31aceb8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function5]" time="0.0005197525024414062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7fc7f3167780&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function6]" time="0.0008063316345214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7fc7f31ace80&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function7]" time="0.0005342960357666016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7fc7f31baeb8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function8]" time="0.0005033016204833984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7fc81b187518&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function9]" time="0.0005595684051513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7fc7f31de4e0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function10]" time="0.0005266666412353516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7fc7f31daac8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function11]" time="0.0005259513854980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7fc7f31d37f0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="35" name="test_lincomb_function" time="0.0005440711975097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:35: &lt;py._xmlgen.raw object at 0x7fc7f3167b70&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="60" name="test_pickle[function0]" time="0.0005462169647216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:60: &lt;py._xmlgen.raw object at 0x7fc7f3167f60&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="60" name="test_pickle[function1]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:60: &lt;py._xmlgen.raw object at 0x7fc7f316d4e0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="60" name="test_pickle[function2]" time="0.0004954338073730469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:60: &lt;py._xmlgen.raw object at 0x7fc7f3167828&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="60" name="test_pickle[function3]" time="0.0005095005035400391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:60: &lt;py._xmlgen.raw object at 0x7fc7f31da198&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="60" name="test_pickle[function4]" time="0.0004980564117431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:60: &lt;py._xmlgen.raw object at 0x7fc81b193048&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="60" name="test_pickle[function5]" time="0.0005168914794921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:60: &lt;py._xmlgen.raw object at 0x7fc7f31de470&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="60" name="test_pickle[function6]" time="0.0005025863647460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:60: &lt;py._xmlgen.raw object at 0x7fc81b41cc88&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="60" name="test_pickle[function7]" time="0.0004899501800537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:60: &lt;py._xmlgen.raw object at 0x7fc7f31acf28&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="60" name="test_pickle[function8]" time="0.0005450248718261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:60: &lt;py._xmlgen.raw object at 0x7fc7f316d860&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="60" name="test_pickle[function9]" time="0.0010352134704589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:60: &lt;py._xmlgen.raw object at 0x7fc7f316dda0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="60" name="test_pickle[function10]" time="0.0005230903625488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:60: &lt;py._xmlgen.raw object at 0x7fc81b16efd0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="60" name="test_pickle[function11]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:60: &lt;py._xmlgen.raw object at 0x7fc7f31de2e8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="64" name="test_pickle_without_dumps_function[picklable_function0]" time="0.0004994869232177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:64: &lt;py._xmlgen.raw object at 0x7fc7f31d3a90&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="64" name="test_pickle_without_dumps_function[picklable_function1]" time="0.000518798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:64: &lt;py._xmlgen.raw object at 0x7fc7f31dab00&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="64" name="test_pickle_without_dumps_function[picklable_function2]" time="0.0004909038543701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:64: &lt;py._xmlgen.raw object at 0x7fc7f3167cc0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="64" name="test_pickle_without_dumps_function[picklable_function3]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:64: &lt;py._xmlgen.raw object at 0x7fc7f316d8d0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="64" name="test_pickle_without_dumps_function[picklable_function4]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:64: &lt;py._xmlgen.raw object at 0x7fc7f316d6d8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="64" name="test_pickle_without_dumps_function[picklable_function5]" time="0.0010004043579101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:64: &lt;py._xmlgen.raw object at 0x7fc7f3175400&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="64" name="test_pickle_without_dumps_function[picklable_function6]" time="0.0005140304565429688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:64: &lt;py._xmlgen.raw object at 0x7fc7f316da90&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="64" name="test_pickle_without_dumps_function[picklable_function7]" time="0.0005311965942382812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:64: &lt;py._xmlgen.raw object at 0x7fc7f3167c18&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="68" name="test_pickle_by_evaluation[function0]" time="0.0005307197570800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:68: &lt;py._xmlgen.raw object at 0x7fc7f31da358&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="68" name="test_pickle_by_evaluation[function1]" time="0.0004968643188476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:68: &lt;py._xmlgen.raw object at 0x7fc81b193c88&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="68" name="test_pickle_by_evaluation[function2]" time="0.0005197525024414062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:68: &lt;py._xmlgen.raw object at 0x7fc7f31deda0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="68" name="test_pickle_by_evaluation[function3]" time="0.0005118846893310547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:68: &lt;py._xmlgen.raw object at 0x7fc81b17c320&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="68" name="test_pickle_by_evaluation[function4]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:68: &lt;py._xmlgen.raw object at 0x7fc7f3175240&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="68" name="test_pickle_by_evaluation[function5]" time="0.0008497238159179688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:68: &lt;py._xmlgen.raw object at 0x7fc7f3175a20&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="68" name="test_pickle_by_evaluation[function6]" time="0.0005280971527099609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:68: &lt;py._xmlgen.raw object at 0x7fc81b187860&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="68" name="test_pickle_by_evaluation[function7]" time="0.0005052089691162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:68: &lt;py._xmlgen.raw object at 0x7fc81b1934e0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="68" name="test_pickle_by_evaluation[function8]" time="0.0005190372467041016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:68: &lt;py._xmlgen.raw object at 0x7fc81b1a22b0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="68" name="test_pickle_by_evaluation[function9]" time="0.0005075931549072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:68: &lt;py._xmlgen.raw object at 0x7fc7f3167710&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="68" name="test_pickle_by_evaluation[function10]" time="0.0005295276641845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:68: &lt;py._xmlgen.raw object at 0x7fc7f316da90&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="68" name="test_pickle_by_evaluation[function11]" time="0.0005509853363037109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:68: &lt;py._xmlgen.raw object at 0x7fc7f3175b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;0]" time="0.00069427490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc7f3175470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;1]" time="0.0008680820465087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc7f317c080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;2]" time="0.0005245208740234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc7f31758d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;3]" time="0.0005257129669189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc7f316dba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;4]" time="0.0005326271057128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc7f3167be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;5]" time="0.0005238056182861328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc7f31daba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;6]" time="0.0005550384521484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc81b1770f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;7]" time="0.0005044937133789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc81b3b4278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;8]" time="0.0005214214324951172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc7f317c198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;9]" time="0.0008590221405029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc7f317c6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;10]" time="0.0005090236663818359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc7f31dea90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;11]" time="0.0005228519439697266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc81b1a2438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;12]" time="0.0005428791046142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc7f31675f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;13]" time="0.0005161762237548828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc7f316d6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;14]" time="0.0005166530609130859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc7f3175d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;15]" time="0.0005061626434326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc7f3175c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;16]" time="0.0005211830139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc7f317c240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;17]" time="0.000896453857421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc7f317ccc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;18]" time="0.0005617141723632812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc81af47748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;19]" time="0.0005092620849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc7f316d6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;20]" time="0.0005099773406982422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc81b190a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;21]" time="0.0005376338958740234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc81b177f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;22]" time="0.0005030632019042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc81b17cba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;23]" time="0.000499725341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc7f317c9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;24]" time="0.0005190372467041016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc7f317c438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;25]" time="0.0008690357208251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc7f3183320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;26]" time="0.0005195140838623047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc7f317c208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;27]" time="0.0005314350128173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc7f31dea90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;28]" time="0.000553131103515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc7f31daba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;29]" time="0.0005421638488769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc81b190fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;30]" time="0.0005576610565185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc81af47e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;31]" time="0.0005071163177490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc7f3175710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;32]" time="0.0005147457122802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc7f3183128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;33]" time="0.0008513927459716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc7f3183940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;34]" time="0.0005106925964355469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc81af47d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;35]" time="0.0005242824554443359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc81b1a22b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;36]" time="0.0005366802215576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc81b17c518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;37]" time="0.0005197525024414062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc7f317c390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;38]" time="0.0005328655242919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc7f317c470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;39]" time="0.0005421638488769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc7f3183a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;40]" time="0.0005214214324951172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc7f3183438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;41]" time="0.001168966293334961"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc7f3183f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;42]" time="0.0005788803100585938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7fc81b193358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;0]" time="0.0005376338958740234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc81af47550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;1]" time="0.0005681514739990234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc7f3183d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;2]" time="0.0005218982696533203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc7f3183a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;3]" time="0.0005438327789306641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc7f317cdd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;4]" time="0.0005543231964111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc7f317c080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;5]" time="0.0005230903625488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc7f31d3ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;6]" time="0.0005755424499511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc7f316d128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;7]" time="0.0008127689361572266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc7f316dda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;8]" time="0.0005395412445068359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc7f317c860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;9]" time="0.0005068778991699219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc7f317c8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;10]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc7f3183b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;11]" time="0.0005352497100830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc81b288978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;12]" time="0.0005190372467041016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc81af47be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;13]" time="0.0005512237548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc81af4d400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;14]" time="0.0005447864532470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc7f3167710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;15]" time="0.0005292892456054688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc7f31675f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;16]" time="0.0005078315734863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc81af4d9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;17]" time="0.0005335807800292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc81b1a70f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;18]" time="0.0005371570587158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc7f3183dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;19]" time="0.0005517005920410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc81af3d710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;20]" time="0.0005342960357666016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc7f317c0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;21]" time="0.0005354881286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc7f316d710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;22]" time="0.0005364418029785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc7f318d128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;23]" time="0.0008800029754638672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc7f318d668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;24]" time="0.0005192756652832031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc7f3175e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;25]" time="0.0005290508270263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc7f317c9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;26]" time="0.0005102157592773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc7f3183710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;27]" time="0.0005483627319335938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc81b288b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;28]" time="0.0005474090576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc7f31da7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;29]" time="0.0005114078521728516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc81b1a22b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;30]" time="0.0005428791046142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc7f318d208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;31]" time="0.0009009838104248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc7f318dba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;32]" time="0.0005624294281005859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc7f31dab00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;33]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc81b3b4278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;34]" time="0.0005178451538085938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc7f317cd30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;35]" time="0.0005431175231933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc81b2a3e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;36]" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc7f31757b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;37]" time="0.0005681514739990234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc7f318dc50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;38]" time="0.0005486011505126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc7f318d3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;39]" time="0.0008726119995117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc7f3191208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;40]" time="0.0004932880401611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc7f318d860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;41]" time="0.0005254745483398438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc81b40d710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;42]" time="0.0005092620849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7fc81b2a3fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;0]" time="0.0005371570587158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f317c0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;1]" time="0.0005524158477783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f3183dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;2]" time="0.0005397796630859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc81b1a2438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;3]" time="0.0005517005920410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f31913c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;4]" time="0.0008835792541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f3191828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;5]" time="0.0005404949188232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc81b36e8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;6]" time="0.0005567073822021484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f3183320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;7]" time="0.0005230903625488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f3175e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;8]" time="0.00054168701171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc81b2a3400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;9]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f318d9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;10]" time="0.0005781650543212891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f318d198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;11]" time="0.0005452632904052734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f3191048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;12]" time="0.0008642673492431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f3191e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;13]" time="0.0005431175231933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f3191048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;14]" time="0.0005445480346679688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc81b40d710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;15]" time="0.0005373954772949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f318d9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;16]" time="0.0005507469177246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f31755c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;17]" time="0.0005376338958740234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f3183710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;18]" time="0.0005078315734863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc81b36ed68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;19]" time="0.000545501708984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc81b193908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;20]" time="0.0008449554443359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f31994a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;21]" time="0.0005512237548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc81b288d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;22]" time="0.0005164146423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f317ccf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;23]" time="0.0005109310150146484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc81b2a3240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;24]" time="0.0005462169647216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f318d358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;25]" time="0.0005176067352294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f3191fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;26]" time="0.0005688667297363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f3191c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;27]" time="0.0005109310150146484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f3199320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;28]" time="0.0008661746978759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f3199ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;29]" time="0.0005180835723876953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f31c6080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;30]" time="0.0005469322204589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f318d710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;31]" time="0.0005424022674560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f3175e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;32]" time="0.0005311965942382812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f317c9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;33]" time="0.0005698204040527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc81b17c7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;34]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f3199c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;35]" time="0.0006227493286132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f3199668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;36]" time="0.0008318424224853516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f31a0128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;37]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f3199f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;38]" time="0.0005338191986083984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f31995c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;39]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f3183b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;40]" time="0.0005457401275634766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f31755c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;41]" time="0.0005245208740234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc81b3766d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;42]" time="0.0005183219909667969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7fc7f31c6080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;0]" time="0.0005314350128173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc7f31a0240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;1]" time="0.0008063316345214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc7f31a0748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;2]" time="0.0005512237548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc7f318d198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;3]" time="0.0005443096160888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc81b376b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;4]" time="0.0005686283111572266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc81b381278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;5]" time="0.0005340576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc7f3183550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;6]" time="0.0004956722259521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc7f3199780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;7]" time="0.0005705356597900391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc81b36ed68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;8]" time="0.0005362033843994141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc7f31a02e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;9]" time="0.001184701919555664"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc7f31a0d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;10]" time="0.0005090236663818359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc81b381c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;11]" time="0.0005309581756591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc81ae97a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;12]" time="0.0005354881286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc7f3199d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;13]" time="0.00051116943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc7f31990b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;14]" time="0.0005252361297607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc7f3191630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;15]" time="0.0005087852478027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc7f318d2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;16]" time="0.0005331039428710938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc7f3167550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;17]" time="0.0005381107330322266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc7f31d3e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;18]" time="0.0008759498596191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc81b31f9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;19]" time="0.0005211830139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc7f318d358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;20]" time="0.0005362033843994141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc7f3191978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;21]" time="0.0005369186401367188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc7f3199e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;22]" time="0.0005249977111816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc81ae97da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;23]" time="0.0005385875701904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc81b2a3780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;24]" time="0.0005753040313720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc7f3183780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;25]" time="0.0005228519439697266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc7f31a0c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;26]" time="0.0009407997131347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc7f3183550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;27]" time="0.000553131103515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc81ae979b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;28]" time="0.000553131103515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc7f3199cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;29]" time="0.00047898292541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc81ae1e518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;30]" time="0.0005698204040527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc7f3191e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;31]" time="0.0005402565002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc7f31675f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;32]" time="0.0005335807800292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc7f31a0ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;33]" time="0.0005075931549072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc7f312a2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;34]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc7f312a7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;35]" time="0.0005292892456054688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc7f31675f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;36]" time="0.0005290508270263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc7f3191e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;37]" time="0.0005497932434082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc81ae1e518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;38]" time="0.0005252361297607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc7f3199668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;39]" time="0.0005452632904052734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc81b2a3e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;40]" time="0.0005137920379638672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc7f312a2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;41]" time="0.0005323886871337891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc7f312ab70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;42]" time="0.0008127689361572266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7fc7f312f0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;0]" time="0.0005135536193847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc7f312a0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;1]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc81b288e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;2]" time="0.0005390644073486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc7f3199198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;3]" time="0.0005116462707519531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc81b36e8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;4]" time="0.0005326271057128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc7f3191208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;5]" time="0.0005345344543457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc7f31c69b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;6]" time="0.00054168701171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc7f312f208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;7]" time="0.0008373260498046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc7f312f710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;8]" time="0.00052642822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc7f318dc18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;9]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc81ae1eba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;10]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc7f31994a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;11]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc81aec2550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;12]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc7f312a9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;13]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc7f312aba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;14]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc7f312f240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;15]" time="0.0007650852203369141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc7f312fd30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;16]" time="0.0005340576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc81b17c9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;17]" time="0.0005087852478027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc81aec2d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;18]" time="0.0005297660827636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc7f3199780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;19]" time="0.0005402565002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc81ae1e1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;20]" time="0.0005438327789306641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc7f31a0940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;21]" time="0.0005719661712646484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc7f312fa20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;22]" time="0.0005249977111816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc7f312f4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;23]" time="0.0009083747863769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc7f3135390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;24]" time="0.0005273818969726562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc7f312fa20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;25]" time="0.0005495548248291016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc7f31a0c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;26]" time="0.0005352497100830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc81ae1e1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;27]" time="0.0005657672882080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc7f3199208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;28]" time="0.0005025863647460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc81b3764e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;29]" time="0.0005393028259277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc7f312a198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;30]" time="0.0005385875701904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc7f3135198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;31]" time="0.0008423328399658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc7f31359b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;32]" time="0.0005617141723632812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc81ae97fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;33]" time="0.0005254745483398438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc81b36ed68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;34]" time="0.0005548000335693359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc7f318dc18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;35]" time="0.0005087852478027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc81aeca940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;36]" time="0.0005183219909667969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc7f312fbe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;37]" time="0.0005102157592773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc7f3135b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;38]" time="0.0005137920379638672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc7f3135518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;39]" time="0.0008802413940429688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc7f313b080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;40]" time="0.0005307197570800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc7f31357b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;41]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc7f312f7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;42]" time="0.000514984130859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7fc81aeca550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;0]" time="0.0005223751068115234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc7f3191f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;1]" time="0.0005316734313964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc7f31990f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;2]" time="0.0005931854248046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc81b17c5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;3]" time="0.0005171298980712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc7f313b128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;4]" time="0.0008256435394287109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc7f313b630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;5]" time="0.0005223751068115234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc81aec2fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;6]" time="0.0005295276641845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc81ae1e9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;7]" time="0.0005042552947998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc81ae524e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;8]" time="0.0005240440368652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc7f312ff98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;9]" time="0.000507354736328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc7f31356d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;10]" time="0.0005335807800292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc7f3135080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;11]" time="0.0005257129669189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc7f313b1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;12]" time="0.0008509159088134766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc7f313bc50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;13]" time="0.0004990100860595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc7f312fb70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;14]" time="0.0005192756652832031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc81aeca550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;15]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc7f3191f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;16]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc7f312aba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;17]" time="0.0005276203155517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc81ae5a710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;18]" time="0.0005223751068115234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc7f313b940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;19]" time="0.0005409717559814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc7f313b3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;20]" time="0.0011818408966064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc7f31422b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;21]" time="0.0005168914794921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc7f3199fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;22]" time="0.0005345344543457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc81aecadd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;23]" time="0.0004906654357910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc7f313b3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;24]" time="0.0005044937133789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc7f313bd30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;25]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc7f3135be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;26]" time="0.0005211830139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc7f312f8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;27]" time="0.00055694580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc7f312acc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;28]" time="0.0005090236663818359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc7f312a630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;29]" time="0.0008230209350585938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc7f312ab70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;30]" time="0.0005342960357666016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc7f31356d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;31]" time="0.0004918575286865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc7f3135d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;32]" time="0.0005161762237548828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc7f313b6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;33]" time="0.0005040168762207031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc7f3191978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;34]" time="0.0005230903625488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc7f3199fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;35]" time="0.0005128383636474609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc81ae5a710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;36]" time="0.00048232078552246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc7f31a04a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;37]" time="0.0005545616149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc7f31a04a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;38]" time="0.0005221366882324219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc81ae5ae48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;39]" time="0.0005230903625488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc81aecab38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;40]" time="0.0005068778991699219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc7f313bef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;41]" time="0.0005102157592773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc7f3135828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;42]" time="0.0005269050598144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7fc81ade3470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;0]" time="0.0004975795745849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc7f312a978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;1]" time="0.0005125999450683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc7f3142160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;2]" time="0.0008151531219482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc7f3142978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;3]" time="0.0005245208740234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc7f312fa20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;4]" time="0.0005147457122802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc7f31356d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;5]" time="0.000530242919921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc7f313bd30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;6]" time="0.0005588531494140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc7f318d128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;7]" time="0.0005929470062255859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc81ae5ada0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;8]" time="0.0005033016204833984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc7f31425c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;9]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc7f3142400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;10]" time="0.0009434223175048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc7f3142eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;11]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc7f3142358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;12]" time="0.0005199909210205078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc7f31a0748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;13]" time="0.0007834434509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc81aec2d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;14]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc7f313ba58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;15]" time="0.0005514621734619141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc7f3135be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;16]" time="0.00052642822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc7f312fa20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;17]" time="0.0004982948303222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc81ae1e128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;18]" time="0.0008637905120849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc7f314d518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;19]" time="0.0005090236663818359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc7f312a0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;20]" time="0.00052642822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc7f3135fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;21]" time="0.0004994869232177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc7f313b7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;22]" time="0.0005323886871337891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc81ae5a710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;23]" time="0.0005178451538085938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc7f3142198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;24]" time="0.0005311965942382812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc7f3142d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;25]" time="0.0006868839263916016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc7f314d3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;26]" time="0.0008978843688964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc7f314db38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;27]" time="0.0005345344543457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc7f3142f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;28]" time="0.0004990100860595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc81aecab38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;29]" time="0.0005309581756591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc7f313b668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;30]" time="0.0005290508270263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc7f312a0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;31]" time="0.0005195140838623047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc7f316d2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;32]" time="0.0005474090576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc7f314d7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;33]" time="0.0005362033843994141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc7f314d198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;34]" time="0.0009386539459228516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc7f3152198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;35]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc7f314da20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;36]" time="0.0005161762237548828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc81adec978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;37]" time="0.0005180835723876953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc81adf38d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;38]" time="0.0005240440368652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc81ade3a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;39]" time="0.0005233287811279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc81ae5ada0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;40]" time="0.0005137920379638672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc7f3142f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;41]" time="0.0005552768707275391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc7f3152320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;42]" time="0.0009002685546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7fc7f31527b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;0]" time="0.0005424022674560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc7f31426d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;1]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc7f313b7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;2]" time="0.0005033016204833984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc81ade3908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;3]" time="0.0005764961242675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc81adf3d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;4]" time="0.0005862712860107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc7f314d5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;5]" time="0.0005841255187988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc7f314d2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;6]" time="0.0005197525024414062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc7f3152080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;7]" time="0.0008580684661865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc7f3152dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;8]" time="0.0005183219909667969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc7f314df98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;9]" time="0.0005371570587158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc81adf3978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;10]" time="0.0005171298980712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc81ade3320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;11]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc81ae5a668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;12]" time="0.0005071163177490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc7f3142da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;13]" time="0.0005276203155517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc7f3152ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;14]" time="0.0005407333374023438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc7f3152550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;15]" time="0.0008516311645507812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc7f315a438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;16]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc7f3152b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;17]" time="0.0005388259887695312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc7f31425f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;18]" time="0.00048232078552246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc7f3199208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;19]" time="0.0005526542663574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc7f3191978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;20]" time="0.0004985332489013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc81adf3c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;21]" time="0.0005362033843994141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc7f314def0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;22]" time="0.0005297660827636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc7f315a240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;23]" time="0.0008931159973144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc7f315aa58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;24]" time="0.000507354736328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc81ade3278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;25]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc81b1cfbe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;26]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc7f313b828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;27]" time="0.0005412101745605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc81b1d77f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;28]" time="0.0004963874816894531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc7f3152940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;29]" time="0.0005197525024414062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc7f315ab00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;30]" time="0.0005259513854980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc7f315a5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;31]" time="0.0011720657348632812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc7f31600b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;32]" time="0.0005033016204833984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc81ae5afd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;33]" time="0.0005588531494140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc81adf3c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;34]" time="0.0005323886871337891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc7f315ae48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;35]" time="0.0005273818969726562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc7f315a780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;36]" time="0.0005929470062255859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc7f3152898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;37]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc81adec978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;38]" time="0.0005059242248535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc7f314db38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;39]" time="0.0005304813385009766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc7f31a0518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;40]" time="0.0009191036224365234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc7f3142f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;41]" time="0.0005121231079101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc81adeceb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;42]" time="0.0005433559417724609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7fc7f3152240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;0]" time="0.0005068778991699219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc7f315ab00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;1]" time="0.0005431175231933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc7f315ada0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;2]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc7f313ba58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;3]" time="0.0005412101745605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc81b1d7940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;4]" time="0.0005233287811279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc7f312a0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;5]" time="0.0008289813995361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc7f312a0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;6]" time="0.0005321502685546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc81b1d70b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;7]" time="0.0005266666412353516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc81adf3630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;8]" time="0.0005199909210205078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc7f315a2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;9]" time="0.0005006790161132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc7f3152550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;10]" time="0.0005154609680175781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc81adecd68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;11]" time="0.0005495548248291016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc7f3142c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;12]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc7f31605c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;13]" time="0.0005030632019042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc7f3160b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;14]" time="0.0005838871002197266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc7f3152080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;15]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc7f315ac88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;16]" time="0.0005903244018554688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc81ae16f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;17]" time="0.0005271434783935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc81b1cfe80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;18]" time="0.0005197525024414062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc7f316d208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;19]" time="0.0005211830139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc7f31602e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;20]" time="0.0005199909210205078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc7f3160e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;21]" time="0.0008554458618164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc7f30ea400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;22]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc7f3160d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;23]" time="0.0005228519439697266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc81b1d7be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;24]" time="0.0005366802215576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc81ae16a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;25]" time="0.0005388259887695312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc7f315a2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;26]" time="0.0005142688751220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc7f314dda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;27]" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc7f3152550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;28]" time="0.0005552768707275391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc7f30ea278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;29]" time="0.0008602142333984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc7f30eaa20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;30]" time="0.0005395412445068359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc7f314d588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;31]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc7f315ab00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;32]" time="0.0005173683166503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc81ae16b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;33]" time="0.0005106925964355469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc81ae5a1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;34]" time="0.0005085468292236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc7f31602e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;35]" time="0.0005271434783935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc7f30eaba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;36]" time="0.0005047321319580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc7f30ea0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;37]" time="0.001028299331665039"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc7f30f0080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;38]" time="0.0005145072937011719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc7f30eabe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;39]" time="0.0005011558532714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc7f3160be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;40]" time="0.0005011558532714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc7f316d978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;41]" time="0.0005207061767578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc81ae16a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;42]" time="0.000522613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7fc7f3135be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;0]" time="0.0004935264587402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc81adecd68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;1]" time="0.0005300045013427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc7f30f0198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;2]" time="0.0008747577667236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc7f30f06a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;3]" time="0.0005598068237304688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc81ad9dfd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;4]" time="0.000514984130859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc7f315af60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;5]" time="0.0005342960357666016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc81b1d7f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;6]" time="0.0005211830139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc7f3160320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;7]" time="0.0005178451538085938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc7f30ea748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;8]" time="0.0005211830139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc7f30eac18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;9]" time="0.0005075931549072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc7f30f0240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;10]" time="0.0008671283721923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc7f30f0cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;11]" time="0.0005738735198974609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc7f30ea748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;12]" time="0.0005285739898681641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc7f3160eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;13]" time="0.0005202293395996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc81b1cfa90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;14]" time="0.0005140304565429688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc81ad9d860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;15]" time="0.0005342960357666016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc81b305d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;16]" time="0.0005228519439697266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc7f30f09b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;17]" time="0.000522613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc7f30f0438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;18]" time="0.0009140968322753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc7f30f7320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;19]" time="0.0005333423614501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc7f30f0198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;20]" time="0.0005095005035400391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc7f31527f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;21]" time="0.0005218982696533203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc7f315a828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;22]" time="0.0006067752838134766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc81b1cfa90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;23]" time="0.0005040168762207031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc7f3160f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;24]" time="0.0005052089691162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc7f30ea828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;25]" time="0.000545501708984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc7f30f7128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;26]" time="0.0008370876312255859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc7f30f7940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;27]" time="0.0005466938018798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc7f3160320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;28]" time="0.0005352497100830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc81b1d7358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;29]" time="0.0005354881286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc81b305358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;30]" time="0.0005116462707519531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc81adecd68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;31]" time="0.0005404949188232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc7f30f0e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;32]" time="0.0005350112915039062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc7f30f7a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;33]" time="0.0004899501800537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc7f30f7438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;34]" time="0.0008826255798339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc7f30f7f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;35]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc7f30f76d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;36]" time="0.0005185604095458984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc7f30f04a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;37]" time="0.0005204677581787109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc7f3152550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;38]" time="0.0005342960357666016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc81b305908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;39]" time="0.0005276203155517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc81ad9d5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;40]" time="0.0005221366882324219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc7f3160358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;41]" time="0.0005581378936767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc7f30fe080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;42]" time="0.001287698745727539"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7fc7f30fe5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;0]" time="0.0005586147308349609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc81b305630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;1]" time="0.0005316734313964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc81b2f6748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;2]" time="0.0005743503570556641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc7f30f7828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;3]" time="0.0005362033843994141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc7f30f74a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;4]" time="0.0005352497100830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc7f30f0b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;5]" time="0.0005345344543457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc7f30f06a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;6]" time="0.0005135536193847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc7f30ea438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;7]" time="0.0005249977111816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc7f3160978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;8]" time="0.000965118408203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc7f3160860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;9]" time="0.0005497932434082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc7f30f0080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;10]" time="0.0005137920379638672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc7f30f0ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;11]" time="0.0005519390106201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc7f30f7c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;12]" time="0.0005259513854980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc81af18860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;13]" time="0.0005047321319580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc81b2f6a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;14]" time="0.0005242824554443359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc7f315aac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;15]" time="0.000537872314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc7f31a0fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;16]" time="0.0005230903625488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc7f31a0748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;17]" time="0.0005095005035400391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc81ae16cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;18]" time="0.0005245208740234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc81b2f6550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;19]" time="0.0005176067352294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc7f30f77f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;20]" time="0.0005068778991699219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc7f30f7b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;21]" time="0.0004994869232177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc7f30f04a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;22]" time="0.0004971027374267578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc7f3160320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;23]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc7f30fe278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;24]" time="0.0009968280792236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc7f30fec88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;25]" time="0.0005061626434326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc7f30f0080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;26]" time="0.0005230903625488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc7f30f79e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;27]" time="0.0005116462707519531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc81af18518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;28]" time="0.00052642822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc81b2f6898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;29]" time="0.000518798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc7f315aac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;30]" time="0.0005125999450683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc7f30fe978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;31]" time="0.0005128383636474609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc7f30fe400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;32]" time="0.0008673667907714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc7f3108208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;33]" time="0.0005409717559814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc7f30fe438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;34]" time="0.000522613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc7f315af60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;35]" time="0.0005116462707519531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc81b2f6208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;36]" time="0.0005505084991455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc7f30f7e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;37]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc7f30f0780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;38]" time="0.0005202293395996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc81ae9fa58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;39]" time="0.0005247592926025391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc7f3108048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;40]" time="0.0008108615875244141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc7f3108828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;41]" time="0.0005061626434326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc7f30ea278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;42]" time="0.0005261898040771484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7fc7f30f7828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;0]" time="0.0005371570587158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc81af18c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;1]" time="0.0005054473876953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc81ae16cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;2]" time="0.0005223751068115234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc7f30fe9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;3]" time="0.0005319118499755859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc7f312a470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;4]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc7f3108080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;5]" time="0.0008542537689208984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc7f3108e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;6]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc7f3108080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;7]" time="0.0005176067352294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc7f30fe438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;8]" time="0.0005555152893066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc7f30fea90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;9]" time="0.0005214214324951172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc81b2f6358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;10]" time="0.0005114078521728516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc7f30f0080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;11]" time="0.0004889965057373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc7f30eaf28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;12]" time="0.0005006790161132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc81ae9fb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;13]" time="0.00081634521484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc7f310f4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;14]" time="0.0005261898040771484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc7f30f7208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;15]" time="0.0005125999450683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc81af18f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;16]" time="0.0005252361297607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc81b2f6358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;17]" time="0.0005154609680175781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc7f30fef60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;18]" time="0.0005171298980712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc7f31085c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;19]" time="0.0004982948303222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc7f3108c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;20]" time="0.0005021095275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc7f310f320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;21]" time="0.0008535385131835938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc7f310fac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;22]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc7f315af60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;23]" time="0.0005090236663818359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc7f30fe668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;24]" time="0.0005514621734619141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc7f3142358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;25]" time="0.0005326271057128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc81ad72588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;26]" time="0.0005269050598144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc7f31609b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;27]" time="0.0005269050598144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc7f310fc88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;28]" time="0.0005166530609130859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc7f310f668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;29]" time="0.0008544921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc7f3115128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;30]" time="0.0005228519439697266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc7f310f978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;31]" time="0.0005257129669189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc81ae9f5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;32]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc7f30f0f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;33]" time="0.0005204677581787109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc7f3142358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;34]" time="0.0005230903625488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc81ad6bac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;35]" time="0.0005006790161132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc7f312a470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;36]" time="0.0006091594696044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc7f3115240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;37]" time="0.0008687973022460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc7f3115748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;38]" time="0.0004940032958984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc7f30fea90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;39]" time="0.0005197525024414062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc81ad6bac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;40]" time="0.0004963874816894531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc81ad72a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;41]" time="0.0005095005035400391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc7f30f7208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;42]" time="0.0005283355712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7fc7f310f908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;0]" time="0.0005273818969726562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc7f310f208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;1]" time="0.0005567073822021484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc7f31152e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;2]" time="0.0008699893951416016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc7f3115d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;3]" time="0.000507354736328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc7f310f978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;4]" time="0.0005273818969726562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc7f30f7208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;5]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc81ad72ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;6]" time="0.0005273818969726562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc7f30fe400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;7]" time="0.0005068778991699219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc7f31082e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;8]" time="0.0005238056182861328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc7f3115a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;9]" time="0.0005347728729248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc7f31154e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;10]" time="0.0011582374572753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc7f31183c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;11]" time="0.0005562305450439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc81ad72588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;12]" time="0.0004916191101074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc81adaf240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;13]" time="0.0005011558532714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc7f31157f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;14]" time="0.0005240440368652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc7f3115198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;15]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc7f310f0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;16]" time="0.0005218982696533203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc7f31088d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;17]" time="0.0005726814270019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc81b3059b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;18]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc7f30fec88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;19]" time="0.0009019374847412109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc81af18e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;20]" time="0.0005409717559814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc7f310ff60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;21]" time="0.0005528926849365234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc7f310f5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;22]" time="0.0005071163177490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc7f3115390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;23]" time="0.0005152225494384766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc81ad6bb70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;24]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc81adaf438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;25]" time="0.0005333423614501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc81ad7b198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;26]" time="0.0005342960357666016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc7f3160358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;27]" time="0.0008461475372314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc7f3142668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;28]" time="0.0005178451538085938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc81ad72588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;29]" time="0.0005121231079101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc81adafb70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;30]" time="0.0005044937133789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc7f3115be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;31]" time="0.0005068778991699219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc81ae9fb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;32]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc7f310ff60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;33]" time="0.0005156993865966797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc81af18320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;34]" time="0.000522613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc7f31188d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;35]" time="0.0005025863647460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc7f3118e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;36]" time="0.0005221366882324219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc7f310f828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;37]" time="0.0005865097045898438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc7f3115390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;38]" time="0.0005168914794921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc7f30f7e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;39]" time="0.0005748271942138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc81adb4780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;40]" time="0.0005424022674560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc81ad72cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;41]" time="0.0005145072937011719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc7f31185f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;42]" time="0.0005340576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7fc7f30a61d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;0]" time="0.0008232593536376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc7f30a6710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;1]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc7f3118240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;2]" time="0.0005772113800048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc81adaf198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;3]" time="0.0005283355712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc81adb4438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;4]" time="0.0005297660827636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc7f3115e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;5]" time="0.0005171298980712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc7f310f0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;6]" time="0.0005156993865966797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc7f30a6358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;7]" time="0.00054168701171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc7f30a6048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;8]" time="0.000843048095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc7f30a6d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;9]" time="0.0005741119384765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc7f3115908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;10]" time="0.0005142688751220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc7f30f0b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;11]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc81adaf4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;12]" time="0.0005116462707519531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc81af2dcc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;13]" time="0.0005757808685302734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc7f3118f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;14]" time="0.0005319118499755859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc7f30a6a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;15]" time="0.0005054473876953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc7f30a6828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;16]" time="0.0008833408355712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc7f30ad390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;17]" time="0.0005245208740234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc7f30a6518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;18]" time="0.0005142688751220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc7f3118710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;19]" time="0.0005171298980712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc7f3160b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;20]" time="0.0004851818084716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc81adb4198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;21]" time="0.0004971027374267578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc81ae9fda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;22]" time="0.0005316734313964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc7f310f828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;23]" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc7f30ad198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;24]" time="0.0008213520050048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc7f30ad9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;25]" time="0.0005066394805908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc7f3115748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;26]" time="0.000579833984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc81af2da20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;27]" time="0.0004906654357910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc81ad72cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;28]" time="0.0005612373352050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc7f31182b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;29]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc7f30a6ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;30]" time="0.0005466938018798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc7f30adb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;31]" time="0.0005235671997070312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc7f30ad518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;32]" time="0.0008189678192138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc7f30b3080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;33]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc7f30ad7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;34]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc7f30a6be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;35]" time="0.0005266666412353516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc7f3118fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;36]" time="0.0004990100860595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc81af34780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;37]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc81af2df60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;38]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc7f310f828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;39]" time="0.0005121231079101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc7f30b3128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;40]" time="0.0008697509765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc7f30b3630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;41]" time="0.0005357265472412109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc81adaf8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;42]" time="0.0005171298980712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7fc7f3160828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;0]" time="0.0005319118499755859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc81af34630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;1]" time="0.0005245208740234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc7f30a67b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;2]" time="0.0005242824554443359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc7f30ad6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;3]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc7f30ad080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;4]" time="0.0005071163177490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc7f30b31d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;5]" time="0.0008740425109863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc7f30b3c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;6]" time="0.0005223751068115234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc7f3142ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;7]" time="0.0005211830139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc7f30a6a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;8]" time="0.0004949569702148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc81af344e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;9]" time="0.0005636215209960938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc81af2d8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;10]" time="0.0005261898040771484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc81adafa20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;11]" time="0.0005300045013427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc7f30b3940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;12]" time="0.0004961490631103516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc7f30b33c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;13]" time="0.000904083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc7f30b92b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;14]" time="0.0005061626434326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc7f30b36d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;15]" time="0.0005388259887695312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc81adafd68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;16]" time="0.0005280971527099609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc81af3d390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;17]" time="0.0005104541778564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc81af344e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;18]" time="0.0005214214324951172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc7f30a6400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;19]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc7f30adda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;20]" time="0.0005025863647460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc7f30b90b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;21]" time="0.0012660026550292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc7f30b98d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;22]" time="0.0006124973297119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc81af344e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;23]" time="0.0005779266357421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc7f310ff60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;24]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc7f30b3d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;25]" time="0.0005242824554443359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc7f30b3828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;26]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc7f30ad6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;27]" time="0.0005283355712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc7f30a6f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;28]" time="0.0005424022674560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc7f3142668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;29]" time="0.0004918575286865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc7f3118ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;30]" time="0.0009567737579345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc7f30a6748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;31]" time="0.0005207061767578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc7f30ad898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;32]" time="0.000530242919921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc7f30b3cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;33]" time="0.0005054473876953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc7f30b3438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;34]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc81af3d198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;35]" time="0.0005443096160888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc81b2e1978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;36]" time="0.0005414485931396484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc7f31187b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;37]" time="0.0005524158477783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc7f30fec88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;38]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc7f30fec88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;39]" time="0.0005099773406982422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc7f3118c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;40]" time="0.0005125999450683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc81b2e1f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;41]" time="0.0005309581756591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc7f3115dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;42]" time="0.000507354736328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7fc7f30b3f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;0]" time="0.0005083084106445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc7f30ad9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;1]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc7f30a6710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;2]" time="0.0005197525024414062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc7f30b92b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;3]" time="0.00092315673828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc7f30b9fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;4]" time="0.0005145072937011719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc7f30b9ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;5]" time="0.0005254745483398438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc81b2dddd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;6]" time="0.0004982948303222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc7f30ad630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;7]" time="0.0005042552947998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc7f30b37f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;8]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc7f30f77b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;9]" time="0.0005300045013427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc7f314db38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;10]" time="0.0005269050598144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc7f30fecf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;11]" time="0.0008599758148193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc7f30c3518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;12]" time="0.0004878044128417969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc81b2e1eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;13]" time="0.0005221366882324219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc7f3115dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;14]" time="0.0004937648773193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc7f30b36d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;15]" time="0.0005383491516113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc7f30a6748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;16]" time="0.0005633831024169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc7f30b9c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;17]" time="0.0005097389221191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc7f30b9dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;18]" time="0.0005350112915039062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc7f30c33c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;19]" time="0.0008876323699951172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc7f30c3b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;20]" time="0.0005097389221191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc81af569e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;21]" time="0.0005121231079101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc7f30ad630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;22]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc7f30b37f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;23]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc81af5c400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;24]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc7f31180f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;25]" time="0.0005211830139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc7f30c3cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;26]" time="0.0005123615264892578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc7f30c3198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;27]" time="0.0008592605590820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc7f30ca198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;28]" time="0.0005030632019042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc7f30c38d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;29]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc81b2e1f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;30]" time="0.0005142688751220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc7f3115dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;31]" time="0.001453399658203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc7f310f828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;32]" time="0.0005216598510742188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc7f30ad3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;33]" time="0.0005202293395996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc7f30b9dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;34]" time="0.0006043910980224609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc7f30ca320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;35]" time="0.0009112358093261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc7f30ca7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;36]" time="0.0005428791046142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc81b2ddac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;37]" time="0.0005037784576416016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc7f30b3e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;38]" time="0.0005199909210205078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc81af5c940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;39]" time="0.0004990100860595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc7f3118a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;40]" time="0.0004985332489013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc7f30c3cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;41]" time="0.0005664825439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc7f30c3128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;42]" time="0.0005202293395996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7fc7f30ca080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;0]" time="0.000978708267211914"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc7f30cadd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;1]" time="0.0004909038543701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc7f30c3828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;2]" time="0.0005145072937011719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc7f31180f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;3]" time="0.000499725341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc81af5cbe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;4]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc7f30b3cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;5]" time="0.0005471706390380859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc7f30b9e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;6]" time="0.0005052089691162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc7f30caac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;7]" time="0.0005807876586914062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc7f30ca550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;8]" time="0.0008783340454101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc7f30d2438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;9]" time="0.0006096363067626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc7f30caac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;10]" time="0.0005738735198974609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc7f30a6710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;11]" time="0.0004892349243164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc7f30b3828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;12]" time="0.0005662441253662109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc81af5c358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;13]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc7f3115dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;14]" time="0.0005440711975097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc7f30c3278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;15]" time="0.00054168701171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc7f30d2240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;16]" time="0.0008218288421630859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc7f30d2a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;17]" time="0.0004963874816894531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc7f3115dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;18]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc81af5cdd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;19]" time="0.0005393028259277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc7f30b3828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;20]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc81ae84898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;21]" time="0.0005316734313964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc7f30cac88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;22]" time="0.0005209445953369141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc7f30d2b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;23]" time="0.0005133152008056641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc7f30d25c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;24]" time="0.0009198188781738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc7f30d70b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;25]" time="0.0005154609680175781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc7f30d2908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;26]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc7f30ca898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;27]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc81ae844a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;28]" time="0.0005145072937011719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc81aee3358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;29]" time="0.0005033016204833984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc81af5c0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;30]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc7f31180f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;31]" time="0.0005314350128173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc7f30d71d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;32]" time="0.0011224746704101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc7f30d76d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;33]" time="0.0005021095275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc81aee34a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;34]" time="0.0005345344543457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc81ae84d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;35]" time="0.0005307197570800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc7f30d2908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;36]" time="0.0005247592926025391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc7f30d2ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;37]" time="0.0005142688751220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc7f30cac18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;38]" time="0.0005033016204833984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc7f30c3c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;39]" time="0.0005202293395996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc7f30b9e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;40]" time="0.0005195140838623047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc7f3142358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;41]" time="0.0008838176727294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc7f30b9550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;42]" time="0.0004990100860595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7fc7f30c3128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;0]" time="0.0005133152008056641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc7f30cafd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;1]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc7f30d2828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;2]" time="0.0005247592926025391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc7f30d2b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;3]" time="0.0004975795745849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc81aee3400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;4]" time="0.0005209445953369141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc81ae8d4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;5]" time="0.0005176067352294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc7f30d77b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;6]" time="0.0007796287536621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc7f30a6748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;7]" time="0.0005085468292236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc81ae8d748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;8]" time="0.0005116462707519531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc7f30d20b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;9]" time="0.0004928112030029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc7f30d28d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;10]" time="0.0005285739898681641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc7f30ca828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;11]" time="0.0005304813385009766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc7f30c3c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;12]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc7f30d77f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;13]" time="0.0005278587341308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc7f30d7be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;14]" time="0.0004868507385253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc7f30e0160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;15]" time="0.00052642822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc7f30b9710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;16]" time="0.0005297660827636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc81b2e16d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;17]" time="0.0005035400390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc7f30ca860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;18]" time="0.0005106925964355469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc7f30d2e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;19]" time="0.0005185604095458984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc81af5c0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;20]" time="0.000537872314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc81ae302e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;21]" time="0.0005214214324951172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc7f30e04e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;22]" time="0.0008745193481445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc7f30e0a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;23]" time="0.0005457401275634766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc81ae30828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;24]" time="0.0005197525024414062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc81ae84898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;25]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc7f30d2eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;26]" time="0.0005285739898681641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc7f314db38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;27]" time="0.0005359649658203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc7f30d70f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;28]" time="0.0005080699920654297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc7f30e05f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;29]" time="0.0005321502685546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc7f30e0358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;30]" time="0.0008602142333984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc7f3067080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;31]" time="0.0005311965942382812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc7f30e0828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;32]" time="0.000499725341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc7f30d7a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;33]" time="0.0005583763122558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc7f30b9e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;34]" time="0.0004947185516357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc7f30ca898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;35]" time="0.0005474090576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc81af56e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;36]" time="0.0005357265472412109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc81ae8d2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;37]" time="0.0005247592926025391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc7f3067198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;38]" time="0.0009016990661621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc7f30676a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;39]" time="0.0004918575286865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc81ae84940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;40]" time="0.0005211830139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc7f30d2b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;41]" time="0.0005462169647216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc81b2e1198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;42]" time="0.0005052089691162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7fc7f30d7d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;0]" time="0.0005605220794677734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc7f30e0d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;1]" time="0.0005474090576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc7f30e0c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;2]" time="0.0005028247833251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc7f3067240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;3]" time="0.0008599758148193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc7f3067cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;4]" time="0.0005326271057128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc7f30e0908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;5]" time="0.0005366802215576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc7f30d7be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;6]" time="0.0005269050598144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc7f30ca358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;7]" time="0.0005362033843994141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc7f30d2b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;8]" time="0.0005259513854980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc81ae30630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;9]" time="0.0005104541778564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc7f30679b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;10]" time="0.0005273818969726562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc7f3067438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;11]" time="0.0008957386016845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc7f306f320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;12]" time="0.0005438327789306641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc7f3067a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;13]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc81ae30cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;14]" time="0.0005373954772949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc7f310ff60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;15]" time="0.0005364418029785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc7f30c33c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;16]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc81ae38390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;17]" time="0.0005400180816650391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc7f30e0828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;18]" time="0.0005280971527099609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc7f306f128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;19]" time="0.0008156299591064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc7f306f940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;20]" time="0.0005402565002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc81b2e1198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;21]" time="0.000514984130859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc7f30cac18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;22]" time="0.0005090236663818359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc7f30d2e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;23]" time="0.0005025863647460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc81ae302e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;24]" time="0.0005228519439697266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc7f30672e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;25]" time="0.0005245208740234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc7f306fa20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;26]" time="0.0005125999450683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc7f306f438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;27]" time="0.0008101463317871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc7f306ff60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;28]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc7f306f6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;29]" time="0.0005362033843994141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc7f3067240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;30]" time="0.0005788803100585938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc81adc64a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;31]" time="0.0004932880401611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc81ae30cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;32]" time="0.0005557537078857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc7f30caef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;33]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc7f30d77b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;34]" time="0.0004887580871582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc7f3076080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;35]" time="0.0008070468902587891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc7f30765c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;36]" time="0.0005137920379638672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc81ae38978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;37]" time="0.0005211830139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc7f30d2e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;38]" time="0.00048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc81adc6fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;39]" time="0.0005285739898681641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc7f3067470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;40]" time="0.0004971027374267578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc7f306f5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;41]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc7f306f4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;42]" time="0.0005207061767578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7fc7f3076160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;0]" time="0.0012028217315673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc7f3076be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;1]" time="0.0005273818969726562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc81ae84160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;2]" time="0.0005071163177490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc81add0048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;3]" time="0.000514984130859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc7f306f710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;4]" time="0.0004963874816894531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc7f306f940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;5]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc7f3067f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;6]" time="0.0005457401275634766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc7f30e0c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;7]" time="0.0005192756652832031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc7f30d7c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;8]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc81ae30f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;9]" time="0.0007815361022949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc7f30d74a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;10]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc7f30e0710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;11]" time="0.0004994869232177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc7f3067198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;12]" time="0.0005543231964111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc81adc0e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;13]" time="0.0005173683166503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc7f306f748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;14]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc81add0358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;15]" time="0.0005309581756591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc81adc64a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;16]" time="0.0005071163177490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc7f3076828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;17]" time="0.0005156993865966797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc7f30b9fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;18]" time="0.0005042552947998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc7f30d20b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;19]" time="0.0005643367767333984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc7f306f7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;20]" time="0.0005071163177490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc7f3067cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;21]" time="0.0005185604095458984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc7f30e0198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;22]" time="0.000484466552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc81b205748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;23]" time="0.0005216598510742188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc7f3076208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;24]" time="0.0005810260772705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc7f30765c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;25]" time="0.0008487701416015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc7f307e2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;26]" time="0.000522613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc7f3076390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;27]" time="0.00048804283142089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc81b205358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;28]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc7f30e0c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;29]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc7f3067cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;30]" time="0.0005006790161132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc7f306ff98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;31]" time="0.0005807876586914062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc81b1f69b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;32]" time="0.0005309581756591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc7f307e0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;33]" time="0.0008988380432128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc7f307e828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;34]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc81b209160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;35]" time="0.0005567073822021484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc7f306f940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;36]" time="0.0004832744598388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc7f3067198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;37]" time="0.0005044937133789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc7f30d7c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;38]" time="0.0005171298980712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc7f30a6748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;39]" time="0.0005321502685546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc7f30762e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;40]" time="0.00051116943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc7f307e0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;41]" time="0.0008115768432617188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc7f307ee48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;42]" time="0.0005156993865966797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7fc7f307e0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;0]" time="0.0005066394805908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc7f3076390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;1]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc81b205748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;2]" time="0.0005218982696533203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc7f30e0198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;3]" time="0.0004992485046386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc7f30cadd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;4]" time="0.0005638599395751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc81b209518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;5]" time="0.0005230903625488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc7f30b99b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;6]" time="0.0008082389831542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc7f30854a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;7]" time="0.0004858970642089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc81b209320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;8]" time="0.0005228519439697266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc7f3067ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;9]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc7f30d7c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;10]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc81b2cc748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;11]" time="0.0005204677581787109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc7f307e588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;12]" time="0.0005242824554443359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc7f307ec50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;13]" time="0.0005197525024414062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc7f3085320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;14]" time="0.0009074211120605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc7f3085ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;15]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc81b2dd550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;16]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc81b205f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;17]" time="0.0005142688751220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc7f3115748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;18]" time="0.0005087852478027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc81adc0c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;19]" time="0.0005054473876953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc81adc6dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;20]" time="0.0005273818969726562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc7f3085c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;21]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc7f3085668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;22]" time="0.0008385181427001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc7f3089128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;23]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc7f3085fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;24]" time="0.0005168914794921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc7f3085198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;25]" time="0.0004982948303222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc7f30679e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;26]" time="0.0005228519439697266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc7f30d7f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;27]" time="0.0005245208740234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc81b2c2748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;28]" time="0.0005583763122558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc7f30760b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;29]" time="0.0005211830139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc7f3089240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;30]" time="0.0008230209350585938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc7f3089748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;31]" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc7f3076f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;32]" time="0.0005326271057128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc7f30d7f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;33]" time="0.0005388259887695312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc7f306f5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;34]" time="0.0005054473876953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc7f3067e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;35]" time="0.0005097389221191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc7f3085390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;36]" time="0.0005030632019042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc81ae38780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;37]" time="0.0005269050598144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc7f30892e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;38]" time="0.0008685588836669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc7f3089d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;39]" time="0.0005230903625488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc7f3085978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;40]" time="0.0004906654357910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc81adc0c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;41]" time="0.0005180835723876953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc81b2cce80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;42]" time="0.0005021095275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7fc81b2c2da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;0]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc7f307eef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;1]" time="0.0005350112915039062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc7f3089a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;2]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc7f30894e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;3]" time="0.0008025169372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc7f30913c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;4]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc7f3089a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;5]" time="0.0005030632019042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc7f307eef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;6]" time="0.0005068778991699219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc81b2c2978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;7]" time="0.0005552768707275391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc81b2ccd30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;8]" time="0.0004916191101074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc81adc6160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;9]" time="0.0005168914794921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc7f30851d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;10]" time="0.0005612373352050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc7f30911d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;11]" time="0.0011949539184570312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc7f30919e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;12]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc7f30e0198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;13]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc81b2c25c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;14]" time="0.0004837512969970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc7f3089e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;15]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc7f3089908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;16]" time="0.0005195140838623047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc7f30858d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;17]" time="0.0005052089691162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc7f307e160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;18]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc7f30760b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;19]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc7f30d7518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;20]" time="0.0008754730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc7f3076cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;21]" time="0.0005357265472412109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc7f3085978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;22]" time="0.0004892349243164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc7f3089860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;23]" time="0.0005128383636474609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc7f30892b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;24]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc81b1b82e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;25]" time="0.0005025863647460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc7f306ff60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;26]" time="0.0005407333374023438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc81adc0c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;27]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc7f3091710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;28]" time="0.0007760524749755859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc7f30d7d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;29]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc81b1b5f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;30]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc81b1b8e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;31]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc7f3089dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;32]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc7f30854a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;33]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc7f307e358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;34]" time="0.0005319118499755859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc7f3091b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;35]" time="0.0005211830139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc7f3091ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;36]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc7f309b470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;37]" time="0.000499725341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc7f3091898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;38]" time="0.0005104541778564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc7f3085ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;39]" time="0.000492095947265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc7f3089198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;40]" time="0.0005345344543457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc81b1b8cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;41]" time="0.0005207061767578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc81b2cc940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;42]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7fc81ae840b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;0]" time="0.0005321502685546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc7f309b7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;1]" time="0.0008411407470703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc7f309bd30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;2]" time="0.00048422813415527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc81b2ccc88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;3]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc81b1b8240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;4]" time="0.0005116462707519531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc7f3089b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;5]" time="0.0005061626434326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc7f30851d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;6]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc7f3091c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;7]" time="0.0005011558532714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc7f309ba20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;8]" time="0.0005161762237548828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc7f309b668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;9]" time="0.0008571147918701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc7f30a2390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;10]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc7f309ba20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;11]" time="0.0004787445068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc7f3091f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;12]" time="0.0005280971527099609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc7f307e860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;13]" time="0.0005092620849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc7f3089550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;14]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc81b2c2320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;15]" time="0.0005202293395996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc81b1c7828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;16]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc7f30a21d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;17]" time="0.0008254051208496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc7f30a29b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;18]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc81b265908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;19]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc81b2c22b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;20]" time="0.0005142688751220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc7f30b99b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;21]" time="0.0005421638488769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc7f3091400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;22]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc7f309b978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;23]" time="0.0004963874816894531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc7f30a2b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;24]" time="0.0005283355712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc7f30a2518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;25]" time="0.0008518695831298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc7f3027080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;26]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc7f30a27b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;27]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc7f309b860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;28]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc7f30917f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;29]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc7f30b9fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;30]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc81b1b8c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;31]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc81b1ae128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;32]" time="0.0004932880401611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc7f3027128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;33]" time="0.0008432865142822266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc7f3027630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;34]" time="0.0005121231079101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc81b1ae1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;35]" time="0.0004858970642089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc7f3089c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;36]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc7f3085e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;37]" time="0.0005154609680175781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc7f309bbe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;38]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc7f30a26d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;39]" time="0.0006101131439208984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc7f30a20b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;40]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc7f30271d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;41]" time="0.0007951259613037109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc7f3027c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;42]" time="0.0004911422729492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7fc7f309beb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;0]" time="0.0005152225494384766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc7f30913c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;1]" time="0.0005183219909667969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc7f3089d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;2]" time="0.0005619525909423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc81b1c7828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;3]" time="0.0005133152008056641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc81b1ae9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;4]" time="0.0005061626434326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc7f3027940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;5]" time="0.0005321502685546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc7f30273c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;6]" time="0.0009014606475830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc7f302f2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;7]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc7f30276d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;8]" time="0.0005085468292236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc81b2ccfd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;9]" time="0.0005242824554443359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc81b1c76d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;10]" time="0.0005011558532714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc7f3089d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;11]" time="0.0005166530609130859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc7f309bef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;12]" time="0.00051116943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc7f30a2828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;13]" time="0.0004961490631103516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc7f302f0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;14]" time="0.0008628368377685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc7f302f8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;15]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc7f309ba20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;16]" time="0.0005106925964355469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc7f3085e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;17]" time="0.0005161762237548828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc81b1c7438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;18]" time="0.000537872314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc81b1aef98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;19]" time="0.0004994869232177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc7f3027278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;20]" time="0.0005168914794921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc7f302f5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;21]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc7f302f128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;22]" time="0.0014615058898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc7f302fef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;23]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc81b1e33c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;24]" time="0.0005171298980712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc81ae38390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;25]" time="0.0005612373352050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc7f302fc18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;26]" time="0.0006275177001953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc7f302f748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;27]" time="0.000518798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc7f30276d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;28]" time="0.0005707740783691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc7f3027a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;29]" time="0.0005102157592773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc7f30a2898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;30]" time="0.0005040168762207031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc7f309bd68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;31]" time="0.0008826255798339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc7f30a2cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;32]" time="0.0005259513854980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc7f30276d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;33]" time="0.0005307197570800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc7f302fda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;34]" time="0.0005030632019042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc7f302f5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;35]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc7f3089b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;36]" time="0.0004949569702148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc81b1e3c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;37]" time="0.0005815029144287109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc7f309bda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;38]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc7f3091dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;39]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc7f3091dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;40]" time="0.0005092620849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc7f309bda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;41]" time="0.0005207061767578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc81b1e33c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;42]" time="0.0005283355712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7fc7f302fb70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;0]" time="0.0004956722259521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc81af25a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;1]" time="0.0005233287811279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc7f3027048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;2]" time="0.0005152225494384766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc7f30a2390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;3]" time="0.0005054473876953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc7f303a0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;4]" time="0.0008637905120849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc7f303a5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;5]" time="0.0005245208740234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc7f3027a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;6]" time="0.0005917549133300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc81aee37f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;7]" time="0.0005092620849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc7f302fcf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;8]" time="0.0005397796630859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc7f302fc88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;9]" time="0.0005080699920654297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc81b205160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;10]" time="0.0005199909210205078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc81b1ae5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;11]" time="0.0005834102630615234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc7f303a198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;12]" time="0.0008997917175292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc7f303ab38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;13]" time="0.0004925727844238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc81b1b8ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;14]" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc7f302f978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;15]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc81af255c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;16]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc7f3027c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;17]" time="0.0005218982696533203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc81aeee588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;18]" time="0.0005176067352294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc7f303abe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;19]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc7f303a358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;20]" time="0.0008392333984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc7f303e198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;21]" time="0.0005047321319580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc7f303afd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;22]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc7f303a240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;23]" time="0.0005500316619873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc81aeeea20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;24]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc81af259b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;25]" time="0.0005125999450683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc7f302f748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;26]" time="0.0005137920379638672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc81ae30f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;27]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc7f303e320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;28]" time="0.000797271728515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc7f303e7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;29]" time="0.0004820823669433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc81b1e37b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;30]" time="0.0005464553833007812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc7f302f780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;31]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc7f3027160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;32]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc81aeeed68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;33]" time="0.0005102157592773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc7f303a7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;34]" time="0.0004971027374267578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc7f3076978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;35]" time="0.00052642822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc7f303e080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;36]" time="0.0008981227874755859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc7f303edd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;37]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc7f303aa20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;38]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc81aeee978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;39]" time="0.0005245208740234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc7f3027208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;40]" time="0.0005474090576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc7f302f438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;41]" time="0.0005040168762207031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc7f309b208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;42]" time="0.0005252361297607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7fc7f303eac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;0]" time="0.0005292892456054688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc7f303e550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;1]" time="0.0008330345153808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc7f3045438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;2]" time="0.0005664825439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc7f303ec88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;3]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc7f3089128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;4]" time="0.0004994869232177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc7f302f438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;5]" time="0.0005450248718261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc81aef6978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;6]" time="0.000545501708984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc81aeee438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;7]" time="0.0005388259887695312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc7f303aef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;8]" time="0.0005273818969726562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc7f3045240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;9]" time="0.0008270740509033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc7f3045a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;10]" time="0.0005204677581787109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc81b1b51d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;11]" time="0.0005171298980712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc81aef6390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;12]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc81b1ae5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;13]" time="0.0005087852478027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc7f309b320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;14]" time="0.0005319118499755859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc7f303ec88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;15]" time="0.0005211830139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc7f3045b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;16]" time="0.0005290508270263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc7f30455c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;17]" time="0.0008683204650878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc7f30490b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;18]" time="0.0005478858947753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc7f3045908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;19]" time="0.0005147457122802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc81aea7c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;20]" time="0.0005021095275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc7f303ecc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;21]" time="0.0005288124084472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc81af25470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;22]" time="0.0005037784576416016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc81aef6780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;23]" time="0.0005278587341308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc81aeb0438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;24]" time="0.0005629062652587891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc7f30491d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;25]" time="0.0008966922760009766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc7f30496d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;26]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc81aeb0240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;27]" time="0.000522613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc81aef6630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;28]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc7f309b668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;29]" time="0.0005736351013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc7f303e550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;30]" time="0.0005033016204833984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc7f30452b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;31]" time="0.0005357265472412109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc7f3045080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;32]" time="0.0005137920379638672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc7f3049278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;33]" time="0.0011796951293945312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc7f3049cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;34]" time="0.0005238056182861328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc81aef6c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;35]" time="0.0004911422729492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc81aeee588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;36]" time="0.0005359649658203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc7f3045ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;37]" time="0.0005207061767578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc7f303ea20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;38]" time="0.0005168914794921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc7f3076908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;39]" time="0.0005373954772949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc81b1ae7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;40]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc7f3091518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;41]" time="0.0005068778991699219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc7f30a23c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;42]" time="0.0007548332214355469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7fc81b1c76d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;0]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc7f303ac18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;1]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc7f303ee10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;2]" time="0.0005207061767578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc7f3045a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;3]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc81aeeecc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;4]" time="0.0004949569702148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc7f3089128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;5]" time="0.0005166530609130859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc81aea7d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;6]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc7f3049ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;7]" time="0.0007512569427490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc81af255c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;8]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc81aeb02e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;9]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc7f3045240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;10]" time="0.0004971027374267578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc7f303e320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;11]" time="0.0005679130554199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc7f309ba20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;12]" time="0.0005249977111816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc7f3091518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;13]" time="0.0004909038543701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc7f3049a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;14]" time="0.0005249977111816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc7f3055240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;15]" time="0.0005533695220947266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc7f3055780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;16]" time="0.0005278587341308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc7f3091550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;17]" time="0.0004887580871582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc7f309b6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;18]" time="0.0005092620849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc7f3045a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;19]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc81b3a79e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;20]" time="0.0005364418029785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc81aeb0d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;21]" time="0.0005297660827636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc7f3055470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;22]" time="0.0005190372467041016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc7f3055b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;23]" time="0.00086212158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc7f305a080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;24]" time="0.0005152225494384766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc7f3055828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;25]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc81aeb0390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;26]" time="0.0005197525024414062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc81b3a74a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;27]" time="0.0005419254302978516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc7f3045240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;28]" time="0.000507354736328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc7f303edd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;29]" time="0.0004992485046386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc7f3091dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;30]" time="0.0005733966827392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc7f305a198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;31]" time="0.0008256435394287109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc7f305a6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;32]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc7f303acf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;33]" time="0.00048732757568359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc7f303eef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;34]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc81b3a79e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;35]" time="0.0005259513854980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc81b394710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;36]" time="0.0005328655242919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc7f3055080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;37]" time="0.0005254745483398438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc7f3055be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;38]" time="0.0005095005035400391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc7f305a1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;39]" time="0.0009150505065917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc7f305acc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;40]" time="0.0005698204040527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc7f30550f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;41]" time="0.0005276203155517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc81b394828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;42]" time="0.0005657672882080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7fc7f3045e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;0]" time="0.0005278587341308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc7f303eef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;1]" time="0.0005133152008056641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc7f3049940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;2]" time="0.0005340576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc7f305a9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;3]" time="0.0005166530609130859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc7f305a470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;4]" time="0.000986337661743164"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc7f3062320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;5]" time="0.0005538463592529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc7f305aa58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;6]" time="0.0005071163177490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc7f3091550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;7]" time="0.0005373954772949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc81aed0ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;8]" time="0.000518798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc81b3a7f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;9]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc81b3949e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;10]" time="0.0004887580871582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc7f3055860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;11]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc7f3062128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;12]" time="0.0008389949798583984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc7f3062940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;13]" time="0.0005280971527099609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc81b394080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;14]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc81b3a76a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;15]" time="0.00048804283142089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc81aed0c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;16]" time="0.0005147457122802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc81b1ae7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;17]" time="0.0005075931549072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc7f305ae48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;18]" time="0.000507354736328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc7f3062a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;19]" time="0.000514984130859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc7f3062438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;20]" time="0.0008025169372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc7f3062f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;21]" time="0.0004775524139404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc7f30626d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;22]" time="0.0005536079406738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc7f305aac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;23]" time="0.0004947185516357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc7f30496d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;24]" time="0.0005114078521728516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc81aed0ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;25]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc7f3045710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;26]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc7f3055860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;27]" time="0.0005271434783935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc7f2fec080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;28]" time="0.0008342266082763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc7f2fec5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;29]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc81b3a7400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;30]" time="0.0005061626434326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc81aedb860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;31]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc7f303acf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;32]" time="0.0005323886871337891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc7f305a4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;33]" time="0.0005390644073486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc7f30625c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;34]" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc7f30624e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;35]" time="0.0004925727844238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc7f2fec160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;36]" time="0.0008089542388916016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc7f2fecbe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;37]" time="0.0005300045013427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc7f3049f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;38]" time="0.0005269050598144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc7f305a7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;39]" time="0.0005176067352294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc7f303e9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;40]" time="0.0006105899810791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc81aedbfd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;41]" time="0.0005228519439697266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc81b3a7898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;42]" time="0.0005087852478027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7fc7f2fec8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;0]" time="0.0005195140838623047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2fec358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;1]" time="0.0013916492462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2ff1240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;2]" time="0.0006051063537597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc81aedbf98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;3]" time="0.0005927085876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc81ae633c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;4]" time="0.0006594657897949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2fec9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;5]" time="0.0006284713745117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2fec6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;6]" time="0.0006685256958007812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc7f3062d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;7]" time="0.0006890296936035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc7f3062f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;8]" time="0.0006115436553955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc7f305a9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;9]" time="0.0006060600280761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc7f30557b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;10]" time="0.0011699199676513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc7f305a860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;11]" time="0.0005178451538085938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc7f3062780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;12]" time="0.0005054473876953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2feca90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;13]" time="0.0005147457122802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2fec198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;14]" time="0.0005233287811279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc81aed0ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;15]" time="0.0005354881286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc81aedbda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;16]" time="0.0005121231079101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc7f30557b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;17]" time="0.000553131103515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc7f3049748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;18]" time="0.0005693435668945312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc7f30490b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;19]" time="0.0005733966827392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc7f30555c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;20]" time="0.0005054473876953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc7f3045c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;21]" time="0.0005702972412109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc81b3949e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;22]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2fec6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;23]" time="0.0005290508270263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc7f3062940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;24]" time="0.0005247592926025391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc7f305a080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;25]" time="0.0005106925964355469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2ff10f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;26]" time="0.0008192062377929688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2ff1908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;27]" time="0.0005283355712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc81b28f6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;28]" time="0.0005025863647460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc7f30626d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;29]" time="0.00051116943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2feca58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;30]" time="0.0005118846893310547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc81ae633c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;31]" time="0.0005536079406738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc7f30557b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;32]" time="0.0005280971527099609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc7f30490b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;33]" time="0.0005459785461425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2ff1320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;34]" time="0.0008327960968017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2ff1e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;35]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2ff1320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;36]" time="0.0005290508270263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc7f30490b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;37]" time="0.0005087852478027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc7f303e5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;38]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc81b394cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;39]" time="0.0005421638488769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2fecac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;40]" time="0.0005099773406982422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc7f305a860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;41]" time="0.0005371570587158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc7f30a29e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;42]" time="0.0009043216705322266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2ffb4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;0]" time="0.0005142688751220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc7f30626d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;1]" time="0.0005087852478027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc7f2fec208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;2]" time="0.0005407333374023438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc81aed0da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;3]" time="0.0005216598510742188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc81b281240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;4]" time="0.0005307197570800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc7f2ff1a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;5]" time="0.0005207061767578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc7f2ff1c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;6]" time="0.0005125999450683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc7f2ffb320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;7]" time="0.0008733272552490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc7f2ffbac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;8]" time="0.0005276203155517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc7f2ff17b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;9]" time="0.0005776882171630859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc81b2812e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;10]" time="0.0005097389221191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc81ae63668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;11]" time="0.0005404949188232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc7f2fecac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;12]" time="0.0005481243133544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc81b28f5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;13]" time="0.00051116943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc7f2ffbc88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;14]" time="0.0005545616149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc7f2ffb668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;15]" time="0.0008876323699951172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc7f2fff128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;16]" time="0.0005137920379638672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc7f2ffb668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;17]" time="0.0006017684936523438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc7f3062b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;18]" time="0.0005092620849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc81b24a470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;19]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc81ae63278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;20]" time="0.0005457401275634766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc81b281b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;21]" time="0.0005638599395751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc81b253208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;22]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc7f2fff240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;23]" time="0.0008683204650878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc7f2fff748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;24]" time="0.0005271434783935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc81b253be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;25]" time="0.0005357265472412109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc7f303e9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;26]" time="0.0006535053253173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc7f2feca58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;27]" time="0.0005290508270263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc81b28f6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;28]" time="0.0005705356597900391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc7f2ffb748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;29]" time="0.0005249977111816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc7f305a860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;30]" time="0.0005326271057128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc7f2fff2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;31]" time="0.0008616447448730469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc7f2fffd68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;32]" time="0.0005407333374023438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc7f2ffb668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;33]" time="0.0005121231079101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc81b28f550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;34]" time="0.0005636215209960938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc7f2feca58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;35]" time="0.0005567073822021484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc81b253f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;36]" time="0.0005295276641845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc7f2ff17f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;37]" time="0.0005350112915039062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc7f2fffa58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;38]" time="0.0004937648773193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc7f2fff4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;39]" time="0.0008327960968017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc7f30093c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;40]" time="0.0005483627319335938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc7f2fffc18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;41]" time="0.0005140304565429688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc81b295fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;42]" time="0.0005815029144287109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7fc81b281a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;0]" time="0.000518798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc7f30554e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;1]" time="0.0005521774291992188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc7f2ffb0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;2]" time="0.0005743503570556641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc81b25a7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;3]" time="0.0005602836608886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc7f30091d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;4]" time="0.0008533000946044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc7f30099e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;5]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc7f2ffb048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;6]" time="0.0005116462707519531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc81b28f550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;7]" time="0.0005304813385009766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc7f2fec208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;8]" time="0.0005376338958740234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc81b295278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;9]" time="0.0005252361297607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc7f2fffc18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;10]" time="0.0005249977111816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc7f30095c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;11]" time="0.0005233287811279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc7f3009550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;12]" time="0.0014233589172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc7f300d080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;13]" time="0.0005564689636230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc81aedb668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;14]" time="0.0005135536193847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc81b25a6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;15]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc7f3009be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;16]" time="0.0005342960357666016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc7f3009a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;17]" time="0.0004954338073730469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc7f2fff2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;18]" time="0.0005300045013427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc7f2ffb5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;19]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc7f2ff1a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;20]" time="0.0005249977111816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc7f30559b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;21]" time="0.0008769035339355469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc7f2ff1978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;22]" time="0.0005323886871337891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc7f2ffbfd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;23]" time="0.0005500316619873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc7f2fffeb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;24]" time="0.0005145072937011719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc7f30090b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;25]" time="0.0005247592926025391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc7f3009dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;26]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc81b25a0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;27]" time="0.0005147457122802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc81b253940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;28]" time="0.0005590915679931641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc7f30626d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;29]" time="0.0007753372192382812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc7f3049400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;30]" time="0.0005228519439697266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc81b253b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;31]" time="0.0005266666412353516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc81ae6c8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;32]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc7f30098d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;33]" time="0.0005304813385009766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc7f2fff518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;34]" time="0.0005090236663818359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc7f2ffbb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;35]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc7f2ff17f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;36]" time="0.0005152225494384766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc7f300d550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;37]" time="0.0004906654357910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc7f300da90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;38]" time="0.0004878044128417969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc7f2ffbb38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;39]" time="0.0005221366882324219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc7f2fff278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;40]" time="0.0005407333374023438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc7f3009e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;41]" time="0.0005242824554443359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc81ae6ceb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;42]" time="0.0005598068237304688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7fc7f2fecac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;0]" time="0.0005052089691162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc7f300d278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;1]" time="0.0005278587341308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc7f300de10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;2]" time="0.0008637905120849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc7f3017390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;3]" time="0.0005247592926025391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc7f300dba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;4]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc7f2fec208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;5]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc81ae6cb70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;6]" time="0.0005142688751220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc7f30095c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;7]" time="0.0005855560302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc7f2fff780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;8]" time="0.0005331039428710938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc81ae73828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;9]" time="0.0005028247833251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc7f3017208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;10]" time="0.0008234977722167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc7f30179b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;11]" time="0.0005176067352294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc81b295fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;12]" time="0.0006175041198730469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc7f30095c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;13]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc7f3027ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;14]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc7f300dcc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;15]" time="0.0005352497100830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc7f300d3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;16]" time="0.0005578994750976562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc7f3017b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;17]" time="0.0005238056182861328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc7f3017048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;18]" time="0.0008959770202636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc7f301d080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;19]" time="0.0005309581756591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc7f30176d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;20]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc81b226ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;21]" time="0.0005426406860351562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc7f3062320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;22]" time="0.00054168701171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc7f300dcc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;23]" time="0.0005083084106445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc7f3009e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;24]" time="0.0005197525024414062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc7f2fff4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;25]" time="0.0005135536193847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc7f301d128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;26]" time="0.0008969306945800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc7f301d630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;27]" time="0.0005140304565429688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc7f2fff278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;28]" time="0.0005092620849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc7f3009e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;29]" time="0.0005061626434326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc7f300df60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;30]" time="0.0005550384521484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc81b2269b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;31]" time="0.0005438327789306641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc7f3017240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;32]" time="0.0005269050598144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc7f3017080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;33]" time="0.0005426406860351562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc7f301d1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;34]" time="0.0008494853973388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc7f301dc50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;35]" time="0.0005571842193603516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc7f3017898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;36]" time="0.0005176067352294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc81b226fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;37]" time="0.0005643367767333984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc7f300df28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;38]" time="0.0005354881286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc7f3009c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;39]" time="0.0005240440368652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc81b295fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;40]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc7f301d940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;41]" time="0.0005030632019042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc7f301d3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;42]" time="0.0008683204650878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7fc7f2fa72b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;0]" time="0.0005216598510742188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc7f301d198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;1]" time="0.0005528926849365234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc7f2fff198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;2]" time="0.0005698204040527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc7f3009c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;3]" time="0.0005097389221191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc7f300dcf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;4]" time="0.0005307197570800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc7f3017e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;5]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc81b224c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;6]" time="0.000484466552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc7f2fa70b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;7]" time="0.0008528232574462891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc7f2fa78d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;8]" time="0.0005164146423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc7f3017cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;9]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc81b2537f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;10]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc81ae6c6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;11]" time="0.0004966259002685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc7f30090b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;12]" time="0.000499725341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc7f301dd30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;13]" time="0.0005888938903808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc7f2fa75c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;14]" time="0.0006628036499023438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc7f2fa7128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;15]" time="0.0008602142333984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc7f2fa7ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;16]" time="0.0004913806915283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc7f2fa7a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;17]" time="0.0005242824554443359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc7f301db38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;18]" time="0.0005147457122802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc7f301d320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;19]" time="0.0005486011505126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc81ae6cac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;20]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc7f300d3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;21]" time="0.000537872314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc7f3017b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;22]" time="0.000514984130859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc7f2fae080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;23]" time="0.0011341571807861328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc7f2fae550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;24]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc81adfe5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;25]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc81adfc5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;26]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc7f2fa7c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;27]" time="0.0005283355712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc7f2fa7940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;28]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc7f301d208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;29]" time="0.000499725341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc7f301d6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;30]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc7f300d278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;31]" time="0.0005116462707519531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc81b28f550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;32]" time="0.0008623600006103516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc7f300d588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;33]" time="0.0005090236663818359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc7f301d080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;34]" time="0.0005395412445068359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc81b224ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;35]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc7f2fa7320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;36]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc7f2fa74e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;37]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc81b2537f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;38]" time="0.000514984130859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc81b2269b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;39]" time="0.0005578994750976562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc7f2ff1a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;40]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc7f2ff1a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;41]" time="0.0005795955657958984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc81adfe5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;42]" time="0.0005195140838623047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7fc7f2fa7dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;0]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc7f2fa7cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;1]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc81b2243c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;2]" time="0.0004868507385253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc7f301df98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;3]" time="0.0005309581756591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc7f300db00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;4]" time="0.0005028247833251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc7f2fae080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;5]" time="0.0008537769317626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc7f2faec18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;6]" time="0.0004937648773193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc7f301d7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;7]" time="0.0005078315734863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc81ae0e7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;8]" time="0.0005350112915039062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc7f2fa7ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;9]" time="0.0005033016204833984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc81b2e2128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;10]" time="0.0005080699920654297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc81adfe748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;11]" time="0.0005388259887695312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc7f2fae908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;12]" time="0.0005524158477783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc7f2fae358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;13]" time="0.0008909702301025391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc7f2fb6198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;14]" time="0.0004868507385253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc7f2faed30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;15]" time="0.0005209445953369141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc7f2fae668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;16]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc81ae6c6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;17]" time="0.0004911422729492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc7f2fa7b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;18]" time="0.0005409717559814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc81b224518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;19]" time="0.0005333423614501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc7f3017048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;20]" time="0.0005695819854736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc7f2fb6320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;21]" time="0.0008749961853027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc7f2fb67b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;22]" time="0.0005271434783935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc81ae0e7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;23]" time="0.0005114078521728516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc7f2fa7a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;24]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc81b26bb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;25]" time="0.0005259513854980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc81adfe748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;26]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc7f2fae1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;27]" time="0.0004980564117431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc7f305aa90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;28]" time="0.0005433559417724609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc7f2fb6358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;29]" time="0.0009076595306396484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc7f2fb6dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;30]" time="0.0005548000335693359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc7f2fae908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;31]" time="0.0004925727844238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc81adfe400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;32]" time="0.0006074905395507812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc7f2fa76d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;33]" time="0.0005428791046142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc7f300d278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;34]" time="0.0005567073822021484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc7f301db38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;35]" time="0.0005366802215576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc7f2fb6ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;36]" time="0.0005376338958740234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc7f2fb6550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;37]" time="0.0008485317230224609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc7f2fbd438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;38]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc7f2fb69e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;39]" time="0.0005207061767578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc81b310908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;40]" time="0.0005123615264892578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc7f30179e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;41]" time="0.0005197525024414062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc81b26b5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;42]" time="0.0005211830139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7fc81b2265c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;0]" time="0.0005006790161132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc7f2fae3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;1]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc7f2fbd240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;2]" time="0.0008788108825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc7f2fbda58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;3]" time="0.0005266666412353516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc7f3055828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;4]" time="0.0004947185516357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc81b26b5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;5]" time="0.0005395412445068359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc81ae0e358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;6]" time="0.0005278587341308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc81b3109b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;7]" time="0.0005097389221191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc7f2fb6a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;8]" time="0.0005137920379638672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc7f2fbdb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;9]" time="0.0004982948303222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc7f2fbd5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;10]" time="0.0008795261383056641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc7f2fc20b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;11]" time="0.0005092620849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc7f2fbd908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;12]" time="0.0005109310150146484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc7f2fb6b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;13]" time="0.0005021095275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc7f301d128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;14]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc81ae0ea90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;15]" time="0.0005314350128173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc7f2fa7ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;16]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc7f30559b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;17]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc7f2fc21d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;18]" time="0.0010266304016113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc7f2fc26d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;19]" time="0.0005550384521484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc81b26bfd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;20]" time="0.0004990100860595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc81b2b8a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;21]" time="0.0005269050598144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc81b3109b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;22]" time="0.0005168914794921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc7f2fb65c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;23]" time="0.0005085468292236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc7f2fbd2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;24]" time="0.000518798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc7f2fbd048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;25]" time="0.0005044937133789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc7f2fc2278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;26]" time="0.0008740425109863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc7f2fc2cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;27]" time="0.0005884170532226562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc7f2fbddd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;28]" time="0.0005309581756591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc7f2fb6b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;29]" time="0.0005307197570800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc81b2b8518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;30]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc7f2fa7710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;31]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc7f2faea58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;32]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc7f2fc29e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;33]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc7f2fc2470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;34]" time="0.0012059211730957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc7f2fcc358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;35]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc81b2b83c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;36]" time="0.0004887580871582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc81b398128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;37]" time="0.0004787445068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc7f2fc2b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;38]" time="0.0005223751068115234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc7f2fc2320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;39]" time="0.0005209445953369141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc7f2fbd8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;40]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc81b3103c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;41]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc7f2fb6e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;42]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7fc7f2fae358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;0]" time="0.0008213520050048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc7f2fb6588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;1]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc81b310b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;2]" time="0.0005419254302978516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc7f2fbdd68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;3]" time="0.00048804283142089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc7f2fc21d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;4]" time="0.0005180835723876953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc7f301d438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;5]" time="0.0005192756652832031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc81b26b668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;6]" time="0.0005099773406982422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc81b2b8518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;7]" time="0.0005273818969726562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc7f300da90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;8]" time="0.0008864402770996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc7f300da90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;9]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc7f2fa7fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;10]" time="0.0005326271057128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc81b3981d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;11]" time="0.0005071163177490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc7f2fc23c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;12]" time="0.0005114078521728516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc81b23a780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;13]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc7f2fbd898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;14]" time="0.0005512237548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc7f2fb69b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;15]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc7f2fcc860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;16]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc7f2fccda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;17]" time="0.000499725341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc7f2fbd6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;18]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc81b23ab70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;19]" time="0.0004887580871582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc7f2fc2278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;20]" time="0.0005464553833007812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc81b398128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;21]" time="0.0005300045013427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc81ae73390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;22]" time="0.0005164146423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc7f2fcc588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;23]" time="0.0005435943603515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc7f2fd4160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;24]" time="0.0008904933929443359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc7f2fd46a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;25]" time="0.0005085468292236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc7f2fcc9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;26]" time="0.0005021095275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc81b2b8710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;27]" time="0.00048160552978515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc7f2fc2748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;28]" time="0.0004906654357910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc81b23ac18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;29]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc7f2fbd470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;30]" time="0.0005075931549072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc7f2fb6ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;31]" time="0.0005099773406982422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc7f2fd4358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;32]" time="0.0008711814880371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc7f2fd4cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;33]" time="0.0005476474761962891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc81b243978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;34]" time="0.0004937648773193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc7f301d438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;35]" time="0.0005290508270263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc7f2fc2128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;36]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc7f2fa7c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;37]" time="0.0005204677581787109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc7f2fccef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;38]" time="0.0005548000335693359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc7f2fd4320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;39]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc7f2fd4518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;40]" time="0.0008227825164794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc7f2fdc320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;41]" time="0.0005083084106445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc7f2fd42b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;42]" time="0.0004954338073730469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7fc7f2fccef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;0]" time="0.0005087852478027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc81b2b89b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;1]" time="0.0005230903625488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc7f2fc2940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;2]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc81b243e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;3]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc7f2fbda90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;4]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc7f2fdc128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;5]" time="0.0008387565612792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc7f2fdc940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;6]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc81b243978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;7]" time="0.0005452632904052734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc81add8278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;8]" time="0.0005195140838623047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc7f2fc2470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;9]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc7f2fcc9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;10]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc7f2fd4780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;11]" time="0.0005173683166503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc7f2fdca20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;12]" time="0.00048160552978515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc7f2fdc438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;13]" time="0.0009427070617675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc7f2fdcf60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;14]" time="0.0005223751068115234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc7f2fdc6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;15]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc7f2fd4518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;16]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc81b26bfd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;17]" time="0.0005011558532714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc81b2b89b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;18]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc81b23ad68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;19]" time="0.0005466938018798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc7f2fbda90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;20]" time="0.0005214214324951172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc7f2fe3080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;21]" time="0.0008738040924072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc7f2fe35c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;22]" time="0.0005068778991699219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc81add8a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;23]" time="0.0004928112030029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc7f2fc2dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;24]" time="0.0005469322204589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc7f2fccf60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;25]" time="0.0005168914794921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc7f2fd4358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;26]" time="0.0005600452423095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc7f2fdc5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;27]" time="0.0005080699920654297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc7f2fdc4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;28]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc7f2fe3160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;29]" time="0.0008649826049804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc7f2fe3be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;30]" time="0.0004923343658447266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc81ae73630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;31]" time="0.000537872314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc7f2fd4320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;32]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc81ad60320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;33]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc7f2fbd6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;34]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc81b243390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;35]" time="0.0004923343658447266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc7f2fe38d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;36]" time="0.0004909038543701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc7f2fe3358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;37]" time="0.0008847713470458984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc7f2f68240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;38]" time="0.0005321502685546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc7f2fe3710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;39]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc81b243c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;40]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc7f2fbd6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;41]" time="0.0005154609680175781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc81b28fbe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;42]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7fc7f2fd4320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;0]" time="0.0005381107330322266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc7f2fdcc88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;1]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc7f2f68048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;2]" time="0.0012712478637695312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc7f2f68860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;3]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc81ad60908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;4]" time="0.000514984130859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc81add83c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;5]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc81b2438d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;6]" time="0.0005207061767578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc7f2fe3668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;7]" time="0.0005066394805908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc7f2fe3630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;8]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc7f2fdcfd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;9]" time="0.0005509853363037109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc7f2fd46a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;10]" time="0.0004937648773193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc7f2fccb70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;11]" time="0.00083160400390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc7f2fd41d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;12]" time="0.0004911422729492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc7f2fdc4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;13]" time="0.0004954338073730469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc7f2fe3ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;14]" time="0.0004892349243164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc81b243630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;15]" time="0.0005567073822021484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc7f2fc2748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;16]" time="0.000499725341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc81ad60668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;17]" time="0.0006232261657714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc7f2fccbe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;18]" time="0.0005328655242919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc7f305a4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;19]" time="0.0005328655242919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc7f305a9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;20]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc7f2fccc88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;21]" time="0.0005118846893310547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc81ad60908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;22]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc81ae6c6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;23]" time="0.0005195140838623047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc7f2fe3668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;24]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc81af06358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;25]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc7f2fd4908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;26]" time="0.0005252361297607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc7f2f68240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;27]" time="0.0008637905120849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc7f2f68f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;28]" time="0.0005173683166503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc7f2f68470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;29]" time="0.0005168914794921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc7f2fdcd68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;30]" time="0.0005202293395996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc81af065f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;31]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc7f2fe3208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;32]" time="0.0005269050598144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc7f2fc2320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;33]" time="0.0005533695220947266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc81b26bc50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;34]" time="0.0005257129669189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc7f300d8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;35]" time="0.0008525848388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc7f2f754a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;36]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc81ae73630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;37]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc81add8ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;38]" time="0.000507354736328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc7f2fe39e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;39]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc81af06a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;40]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc7f2f68c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;41]" time="0.0005152225494384766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc7f2f68e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;42]" time="0.0006015300750732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7fc7f2f75358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;0]" time="0.0008940696716308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc7f2f75ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;1]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc7f2fb6828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;2]" time="0.00055694580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc81af06fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;3]" time="0.0005681514739990234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc7f2fe3e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;4]" time="0.0005478858947753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc7f2fc2320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;5]" time="0.0005295276641845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc7f2fcce48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;6]" time="0.0005078315734863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc7f2f75c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;7]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc7f2f75128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;8]" time="0.0008602142333984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc7f2f7a128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;9]" time="0.0005340576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc7f2f75860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;10]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc81af0f400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;11]" time="0.0004775524139404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc81ad60cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;12]" time="0.0005402565002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc7f2fe3a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;13]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc81af06c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;14]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc7f2fd4e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;15]" time="0.0005435943603515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc7f2f7a240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;16]" time="0.0009453296661376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc7f2f7a748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;17]" time="0.0004820823669433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc81ae42c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;18]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc7f2fdc4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;19]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc81add8860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;20]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc81ad60b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;21]" time="0.0005559921264648438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc7f2f75c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;22]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc7f2f750b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;23]" time="0.0004906654357910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc7f2f7a2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;24]" time="0.0008912086486816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc7f2f7ad68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;25]" time="0.0005233287811279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc7f2f75f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;26]" time="0.0005068778991699219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc7f2fcc128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;27]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc7f2fe3e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;28]" time="0.000583648681640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc81ae42940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;29]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc7f2f686d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;30]" time="0.0005359649658203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc7f2f7aa58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;31]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc7f2f7a4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;32]" time="0.0009059906005859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc7f2f823c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;33]" time="0.0005087852478027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc7f2f7ac18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;34]" time="0.0005192756652832031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc81ae49b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;35]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc81af06e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;36]" time="0.0005030632019042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc81add8860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;37]" time="0.0005235671997070312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc81b243d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;38]" time="0.0005295276641845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc7f2f75ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;39]" time="0.0004985332489013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc7f2f821d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;40]" time="0.0010116100311279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc7f2f829e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;41]" time="0.0005297660827636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc7f2f75128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;42]" time="0.0005605220794677734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7fc81add8518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;0]" time="0.0005190372467041016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc81ae42fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;1]" time="0.0005147457122802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc81ae49b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;2]" time="0.0005466938018798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc7f2f7ac18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;3]" time="0.0005347728729248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc7f2f825c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;4]" time="0.0005106925964355469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc7f2f82550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;5]" time="0.0009288787841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc7f2f87048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;6]" time="0.0005300045013427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc7f2f82828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;7]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc7f2f7a7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;8]" time="0.0005419254302978516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc7f2f682b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;9]" time="0.0005249977111816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc81ae49898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;10]" time="0.00052642822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc7f2fdc4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;11]" time="0.0005381107330322266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc7f2f75e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;12]" time="0.0005364418029785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc7f2f87160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;13]" time="0.0013470649719238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc7f2f87668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;14]" time="0.0005724430084228516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc81ae49d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;15]" time="0.0005099773406982422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc81b1fd7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;16]" time="0.0006244182586669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc7f2f82048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;17]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc81af0f208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;18]" time="0.0005345344543457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc7f2f7a240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;19]" time="0.0005316734313964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc7f2f75198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;20]" time="0.00057220458984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc7f2f68cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;21]" time="0.0005309581756591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc7f2fae358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;22]" time="0.0009889602661132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc7f2f68b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;23]" time="0.0006051063537597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc7f2f75128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;24]" time="0.0005230903625488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc7f2f7af98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;25]" time="0.0005407333374023438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc7f2f82cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;26]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc81b1a9e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;27]" time="0.0005025863647460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc81add8518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;28]" time="0.0006380081176757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc7f2fe3cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;29]" time="0.0005326271057128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc7f2f87748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;30]" time="0.0009057521820068359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc7f2fd46d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;31]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc7f2fdc390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;32]" time="0.0005364418029785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc81b1a9ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;33]" time="0.0005815029144287109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc7f2f82828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;34]" time="0.0005006790161132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc7f2f7af60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;35]" time="0.0005381107330322266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc7f2f75828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;36]" time="0.00054168701171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc7f2f87780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;37]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc7f2f87b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;38]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc7f2f900f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;39]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc81aeffbe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;40]" time="0.0005276203155517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc7f2fccbe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;41]" time="0.0004992485046386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc7f2f82400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;42]" time="0.0004949569702148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7fc81b29deb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;0]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc81b1fd160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;1]" time="0.0004878044128417969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc81ae49d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;2]" time="0.0006687641143798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc7f2f90470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;3]" time="0.0008673667907714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc7f2f909b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;4]" time="0.0005495548248291016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc81b1a9ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;5]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc81b29d470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;6]" time="0.0005297660827636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc7f2f82be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;7]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc7f2f7a7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;8]" time="0.0005083084106445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc7f2f87080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;9]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc7f2f90588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;10]" time="0.000530242919921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc7f2f902e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;11]" time="0.0009198188781738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc7f2f98080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;12]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc7f2f90358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;13]" time="0.0004925727844238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc7f2f87c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;14]" time="0.0005362033843994141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc7f2f75518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;15]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc7f2f7aba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;16]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc81b2eaf98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;17]" time="0.0004851818084716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc81b1a9ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;18]" time="0.00055694580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc7f2f98128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;19]" time="0.0008778572082519531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc7f2f98630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;20]" time="0.0005207061767578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc81b1fd8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;21]" time="0.0004899501800537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc7f2f825f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;22]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc7f2f75908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;23]" time="0.0004982948303222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc7f2f878d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;24]" time="0.0005197525024414062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc7f2f90be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;25]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc7f2f90eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;26]" time="0.0008070468902587891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc7f2f981d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;27]" time="0.0008609294891357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc7f2f98c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;28]" time="0.0005280971527099609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc81b2eb0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;29]" time="0.0005123615264892578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc7f2f879e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;30]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc7f2f7add8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;31]" time="0.0004971027374267578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc7f2f82eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;32]" time="0.0005156993865966797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc7f2fdcd68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;33]" time="0.0004968643188476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc7f2f98940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;34]" time="0.0005617141723632812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc7f2f983c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;35]" time="0.0008780956268310547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc7f2f9f2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;36]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc7f2f98198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;37]" time="0.0005242824554443359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc7f2fdcd68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;38]" time="0.0004928112030029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc7f2f825f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;39]" time="0.0005195140838623047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc7f300d8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;40]" time="0.000507354736328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc81b2eb0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;41]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc7f2f90780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;42]" time="0.0005116462707519531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7fc7f2f9f0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;0]" time="0.0008873939514160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc7f2f9f8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;1]" time="0.0005464553833007812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc81b2eba90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;2]" time="0.0004994869232177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc7f300d8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;3]" time="0.0005292892456054688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc81b1a9ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;4]" time="0.0005135536193847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc7f2fdc4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;5]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc7f2f98da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;6]" time="0.0004851818084716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc7f2f9f5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;7]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc7f2f9f128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;8]" time="0.0008683204650878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc7f2f9fef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;9]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc7f2f9fa90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;10]" time="0.0005252361297607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc7f2f98fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;11]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc81b31f470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;12]" time="0.0005164146423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc81b1fda90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;13]" time="0.0005345344543457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc7f2f87780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;14]" time="0.0006251335144042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc81b283f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;15]" time="0.0005402565002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc7f2f26048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;16]" time="0.0008435249328613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc7f2f26550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;17]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc81b2eb7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;18]" time="0.0004775524139404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc81b2eae48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;19]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc7f2f827f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;20]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc7f2f987b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;21]" time="0.0005218982696533203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc7f2f9f630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;22]" time="0.0005066394805908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc7f2f9fac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;23]" time="0.0005035400390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc7f2f26438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;24]" time="0.001270294189453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc7f2f26b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;25]" time="0.0005230903625488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc81b1fd8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;26]" time="0.0005197525024414062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc81b2eb7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;27]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc7f2f9f550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;28]" time="0.0005192756652832031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc7f2f9ffd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;29]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc7f2f98a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;30]" time="0.0005137920379638672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc7f2f90860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;31]" time="0.0005297660827636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc7f2f87780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;32]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc7f2f874e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;33]" time="0.000820159912109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc7f2f87278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;34]" time="0.0005564689636230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc7f2f754e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;35]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc7f2f989e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;36]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc7f2f9f5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;37]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc81b283198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;38]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc81b1a7c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;39]" time="0.0004994869232177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc7f2f7a7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;40]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc7f2f26630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;41]" time="0.000499725341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc7f2f68f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;42]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7fc81b2eb4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;0]" time="0.0005331039428710938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fc81b2837f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;1]" time="0.0005075931549072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fc7f2f9f6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;2]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fc7f2f98fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;3]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fc7f2f90198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;4]" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fc7f2f26cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;5]" time="0.0005285739898681641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fc7f2f26550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;6]" time="0.0008881092071533203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fc7f2f2e278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;7]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fc7f2f26160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;8]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fc7f2f90eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;9]" time="0.0004928112030029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fc7f2f98da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;10]" time="0.0005166530609130859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fc7f2f9fbe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;11]" time="0.0005300045013427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fc81b1a7518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;12]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fc7f2f827f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;13]" time="0.0005214214324951172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fc7f2f2e080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;14]" time="0.0008783340454101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fc7f2f2e7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;15]" time="0.0005602836608886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fc81b31f1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;16]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fc7f2f9fc50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;17]" time="0.0004918575286865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fc81b22abe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;18]" time="0.0005280971527099609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fc7f2f98f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;19]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fc7f2f87860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;20]" time="0.0005085468292236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fc7f2f266d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;21]" time="0.0005006790161132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fc7f2f2e0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;22]" time="0.001012563705444336"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fc7f2f2edd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;23]" time="0.0005035400390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fc7f2f90b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;24]" time="0.0005052089691162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fc7f2f98ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;25]" time="0.0005383491516113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fc7f2f9f710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;26]" time="0.000518798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fc81b321438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;27]" time="0.0005104541778564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fc7f2f7a198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;28]" time="0.0005133152008056641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fc7f2f2eac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;29]" time="0.0004892349243164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fc7f2f2e588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;30]" time="0.0008599758148193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7fc7f2f35438&gt;</skipped></testcase><testcase classname="src.pymortests.gui" file="src/pymortests/gui.py" line="26" name="test_visualize_patch[backend_gridtype0]" time="0.0006220340728759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/gui.py:26: &lt;py._xmlgen.raw object at 0x7fc7f2f2eb70&gt;</skipped></testcase><testcase classname="src.pymortests.gui" file="src/pymortests/gui.py" line="26" name="test_visualize_patch[backend_gridtype1]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/gui.py:26: &lt;py._xmlgen.raw object at 0x7fc7f2f68550&gt;</skipped></testcase><testcase classname="src.pymortests.gui" file="src/pymortests/gui.py" line="26" name="test_visualize_patch[backend_gridtype2]" time="0.0005280971527099609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/gui.py:26: &lt;py._xmlgen.raw object at 0x7fc7f2f9f128&gt;</skipped></testcase><testcase classname="src.pymortests.la" file="src/pymortests/la.py" line="13" name="test_induced" time="0.0006597042083740234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/la.py:13: &lt;py._xmlgen.raw object at 0x7fc81b2317f0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[scipy-1-200]" time="0.0006632804870605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7fc7f2f87a58&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[scipy-1-300]" time="0.0004909038543701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7fc7f2f26d68&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[scipy-2-200]" time="0.0005202293395996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7fc7f2f35320&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[scipy-2-300]" time="0.000885009765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7fc7f2f35b38&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[slycot-1-200]" time="0.0005192756652832031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7fc7f2f87a58&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[slycot-1-300]" time="0.00048804283142089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7fc81b22add8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[slycot-2-200]" time="0.0005028247833251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7fc7f2f9f128&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[slycot-2-300]" time="0.0005376338958740234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7fc81ad7b940&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[pymess_lyap-1-200]" time="0.0005280971527099609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7fc7f2f2e5f8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[pymess_lyap-1-300]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7fc7f2f35828&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[pymess_lyap-2-200]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7fc7f2f35160&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[pymess_lyap-2-300]" time="0.0008490085601806641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7fc7f2f3a198&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[pymess_lradi-1-200]" time="0.0005095005035400391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7fc7f2f359b0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[pymess_lradi-1-300]" time="0.0005145072937011719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7fc7f2f2e978&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[pymess_lradi-2-200]" time="0.0014719963073730469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7fc7f2f2e9e8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[pymess_lradi-2-300]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7fc81b321588&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[lradi-1-200]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7fc81b231208&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[lradi-1-300]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7fc7f2f26d68&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[lradi-2-200]" time="0.0005104541778564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7fc7f2f3a2e8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[lradi-2-300]" time="0.0008554458618164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7fc7f2f3a7b8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[slycot-1-200]" time="0.000522613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7fc7f2f26e80&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[slycot-1-300]" time="0.0005125999450683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7fc81b22a6a0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[slycot-2-200]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7fc7f2f825f8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[slycot-2-300]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7fc7f2f2e5c0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[pymess_lyap-1-200]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7fc7f2f35860&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[pymess_lyap-1-300]" time="0.0005128383636474609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7fc7f2f35cf8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[pymess_lyap-2-200]" time="0.0005147457122802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7fc7f2f3a208&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[pymess_lyap-2-300]" time="0.0008904933929443359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7fc7f2f3add8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[pymess_lradi-1-200]" time="0.0005395412445068359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7fc7f2f35940&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[pymess_lradi-1-300]" time="0.0005137920379638672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7fc7f2f2e978&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[pymess_lradi-2-200]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7fc81b321588&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[pymess_lradi-2-300]" time="0.0005071163177490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7fc81b231748&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[lradi-1-200]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7fc7f2f87a58&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[lradi-1-300]" time="0.0005381107330322266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7fc7f2f3a438&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[lradi-2-200]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7fc7f2f3a550&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[lradi-2-300]" time="0.0009763240814208984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7fc7f2f42438&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[scipy-1-200]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7fc7f2f3a9b0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[scipy-1-300]" time="0.0005104541778564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7fc7f2f26d68&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[scipy-2-200]" time="0.0004982948303222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7fc81b231208&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[scipy-2-300]" time="0.0005090236663818359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7fc7f2f2e8d0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[slycot-1-200]" time="0.0005364418029785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7fc8178ca5f8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[slycot-1-300]" time="0.0005385875701904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7fc7f2f35e80&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[slycot-2-200]" time="0.0005199909210205078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7fc7f2f42240&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[slycot-2-300]" time="0.001180410385131836"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7fc7f2f42a58&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[pymess_lyap-1-200]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7fc7f3175828&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[pymess_lyap-1-300]" time="0.0005946159362792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7fc81b22a550&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[pymess_lyap-2-200]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7fc7f2f3aeb8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[pymess_lyap-2-300]" time="0.0005156993865966797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7fc7f2f3ae10&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[pymess_lradi-1-200]" time="0.0004963874816894531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7fc7f2f35fd0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[pymess_lradi-1-300]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7fc7f2f2ea20&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[pymess_lradi-2-200]" time="0.0005357265472412109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7fc7f2f26278&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[pymess_lradi-2-300]" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7fc7f2f87208&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[lradi-1-200]" time="0.0009181499481201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7fc81b1a7860&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[lradi-1-300]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7fc7f2f35d30&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[lradi-2-200]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7fc7f2f3a780&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[lradi-2-300]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7fc7f2f3a898&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[slycot-1-200]" time="0.0005207061767578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7fc81b2312b0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[slycot-1-300]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7fc8178d2438&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[slycot-2-200]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7fc8178ca4a8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[slycot-2-300]" time="0.0005254745483398438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7fc7f2f427b8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[pymess_lyap-1-200]" time="0.0008161067962646484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7fc7f2f87e80&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[pymess_lyap-1-300]" time="0.0005195140838623047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7fc8178d2438&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[pymess_lyap-2-200]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7fc8178c2b38&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[pymess_lyap-2-300]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7fc7f2f3ada0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[pymess_lradi-1-200]" time="0.0005047321319580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7fc7f2f35860&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[pymess_lradi-1-300]" time="0.0005869865417480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7fc7f2f2eba8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[pymess_lradi-2-200]" time="0.0005233287811279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7fc7f2f42630&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[pymess_lradi-2-300]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7fc7f2f42f60&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[lradi-1-200]" time="0.0005233287811279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7fc7f2f4d4e0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[lradi-1-300]" time="0.000484466552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7fc7f2f42860&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[lradi-2-200]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7fc7f2f35438&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[lradi-2-300]" time="0.0005347728729248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7fc7f2f3ae10&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[scipy-1-200]" time="0.0005440711975097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7fc81791afd0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[scipy-1-300]" time="0.0005354881286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7fc8178d20f0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[scipy-2-200]" time="0.0005464553833007812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7fc7f2f87208&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[scipy-2-300]" time="0.0005207061767578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7fc7f2f4d860&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[slycot-1-200]" time="0.0008823871612548828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7fc7f2f4dda0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[slycot-1-300]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7fc7f2f98c50&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[slycot-2-200]" time="0.0005121231079101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7fc81791af28&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[slycot-2-300]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7fc7f2f3a7f0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[pymess_lyap-1-200]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7fc7f2f2e470&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[pymess_lyap-1-300]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7fc7f2f42f60&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[pymess_lyap-2-200]" time="0.0005087852478027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7fc7f2f4d8d0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[pymess_lyap-2-300]" time="0.0005590915679931641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7fc7f2f4d6d8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[pymess_lradi-1-200]" time="0.0009400844573974609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7fc7f2f52400&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[pymess_lradi-1-300]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7fc7f2f4da90&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[pymess_lradi-2-200]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7fc7f2f42470&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[pymess_lradi-2-300]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7fc7f2f35630&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[lradi-1-200]" time="0.0005044937133789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7fc7f2f3ada0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[lradi-1-300]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7fc8179230b8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[lradi-2-200]" time="0.0005717277526855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7fc817931630&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[lradi-2-300]" time="0.0005102157592773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7fc7f2f52240&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[slycot-1-200]" time="0.00089263916015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7fc7f2f52a20&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[slycot-1-300]" time="0.000514984130859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7fc8178ba7b8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[slycot-2-200]" time="0.0005183219909667969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7fc8178c2fd0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[slycot-2-300]" time="0.0005080699920654297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7fc7f2f2e898&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[pymess_lyap-1-200]" time="0.0005040168762207031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7fc7f2f427f0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[pymess_lyap-1-300]" time="0.0005269050598144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7fc7f2f4da90&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[pymess_lyap-2-200]" time="0.0005059242248535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7fc7f2f52b70&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[pymess_lyap-2-300]" time="0.0005440711975097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7fc7f2f52470&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[pymess_lradi-1-200]" time="0.0009963512420654297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7fc7f2f58080&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[pymess_lradi-1-300]" time="0.0005176067352294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7fc7f2f52860&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[pymess_lradi-2-200]" time="0.0005450248718261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7fc7f2f4d048&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[pymess_lradi-2-300]" time="0.0004909038543701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7fc7f2f42dd8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[lradi-1-200]" time="0.0005664825439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7fc81792b668&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[lradi-1-300]" time="0.0005173683166503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7fc7f2f3a198&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[lradi-2-200]" time="0.0005564689636230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7fc817931da0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[lradi-2-300]" time="0.0005216598510742188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7fc7f2f58198&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[scipy-1-200]" time="0.0008602142333984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7fc7f2f586a0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[scipy-1-300]" time="0.0005097389221191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7fc817923a58&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[scipy-2-200]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7fc7f2f3af98&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[scipy-2-300]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7fc81b321438&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[slycot-1-200]" time="0.0005733966827392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7fc7f2f4db70&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[slycot-1-300]" time="0.0005135536193847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7fc7f2f527b8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[slycot-2-200]" time="0.000522613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7fc7f2f52550&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[slycot-2-300]" time="0.0005195140838623047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7fc7f2f581d0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[pymess_lyap-1-200]" time="0.0009112358093261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7fc7f2f58cc0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[pymess_lyap-1-300]" time="0.0005905628204345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7fc7f2f4db38&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[pymess_lyap-2-200]" time="0.0005645751953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7fc7f2f42630&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[pymess_lyap-2-300]" time="0.0005135536193847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7fc81792b5c0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[pymess_lradi-1-200]" time="0.0005412101745605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7fc8179234a8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[pymess_lradi-1-300]" time="0.0005469322204589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7fc8178db128&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[pymess_lradi-2-200]" time="0.0005078315734863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7fc7f2f58320&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[pymess_lradi-2-300]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7fc7f2f58438&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[lradi-1-200]" time="0.0008671283721923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7fc7f2f59320&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[lradi-1-300]" time="0.0005199909210205078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7fc7f2f58a20&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[lradi-2-200]" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7fc7f2f98048&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[lradi-2-300]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7fc817923a58&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[slycot-1-200]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7fc7f2f2e2e8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[slycot-1-300]" time="0.0005283355712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7fc7f2f427f0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[slycot-2-200]" time="0.0005745887756347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7fc7f2f52550&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[slycot-2-300]" time="0.0004992485046386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7fc7f2f59128&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[pymess_lyap-1-200]" time="0.0008685588836669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7fc7f2f59940&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[pymess_lyap-1-300]" time="0.0005376338958740234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7fc7f2f4db38&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[pymess_lyap-2-200]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7fc7f2f35e48&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[pymess_lyap-2-300]" time="0.0005059242248535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7fc817931978&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[pymess_lradi-1-200]" time="0.0005075931549072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7fc8178db9b0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[pymess_lradi-1-300]" time="0.0005118846893310547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7fc7f2f58ac8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[pymess_lradi-2-200]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7fc7f2f599e8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[pymess_lradi-2-300]" time="0.0005166530609130859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7fc7f2f59400&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[lradi-1-200]" time="0.0012624263763427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7fc7f2f59f60&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[lradi-1-300]" time="0.00048232078552246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7fc8178e1128&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[lradi-2-200]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7fc7f2f35860&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[lradi-2-300]" time="0.0005216598510742188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7fc7f2f59d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="21" name="test_selection_op" time="0.0006291866302490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:21: &lt;py._xmlgen.raw object at 0x7fc7f2f599e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="53" name="test_lincomb_op" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:53: &lt;py._xmlgen.raw object at 0x7fc7f2f58470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;0]" time="0.0005431175231933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc7f2f58c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;1]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc7f2f52a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;2]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc7f2f4d4a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;3]" time="0.0008301734924316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc7fca22cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;4]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc7f2f58e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;5]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc7f2f59940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;6]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc7f2f59ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;7]" time="0.0005147457122802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc7f2f3a2e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;8]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc8178eb0f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;9]" time="0.0005228519439697266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc7f2f4df60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;10]" time="0.0005147457122802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc7f2f427f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;11]" time="0.0005221366882324219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc7f2f422e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;12]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc7f2f4dfd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;13]" time="0.0005106925964355469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc8178e1e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;14]" time="0.0005328655242919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc7f2f596a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;15]" time="0.0005164146423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc7f2f59550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;16]" time="0.0005292892456054688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc7f2f58cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;17]" time="0.0005135536193847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc8178bab00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;18]" time="0.0005168914794921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc7f2eea160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;19]" time="0.0008554458618164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc7f2eea6a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;20]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc7fca2bbe0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;21]" time="0.00054168701171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc7f2f58dd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;22]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc7f2f59748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;23]" time="0.0004968643188476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc817923400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;24]" time="0.0005784034729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc8178dbfd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;25]" time="0.0005166530609130859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc7f2ff17b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;26]" time="0.0005393028259277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc7f2eea198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;27]" time="0.0008537769317626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc7f2eeabe0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;28]" time="0.0005147457122802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc8178db908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;29]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc81792b470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;30]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc7f2f58a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;31]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc7fca345f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;32]" time="0.0005125999450683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc7f2f269e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;33]" time="0.0005185604095458984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc7f2eea898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;34]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc7f2eea400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;35]" time="0.0008440017700195312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc7f2eee240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;36]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc7f2eea3c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;37]" time="0.0005192756652832031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc7f2f26d68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;38]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc7fca34208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;39]" time="0.0004918575286865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc7f2f58780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;40]" time="0.0005590915679931641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7fc81792b5c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;0]" time="0.0005319118499755859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc7f2f4d240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;1]" time="0.0005698204040527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc7f2eee048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;2]" time="0.0008740425109863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc7f2eee860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;3]" time="0.0005123615264892578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc8178e1e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;4]" time="0.0004985332489013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc7f2f595f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;5]" time="0.0005249977111816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc7fca34550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;6]" time="0.0005152225494384766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc7fca2bbe0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;7]" time="0.0005204677581787109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc7f2eea780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;8]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc7fca22cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;9]" time="0.0005104541778564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc7f2eee048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;10]" time="0.0008778572082519531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc7f2eeee80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;11]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc7f2eeea20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;12]" time="0.0005257129669189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc7f2eea7f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;13]" time="0.0005121231079101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc7f2eea940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;14]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc7fca34160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;15]" time="0.0004889965057373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc8178d2828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;16]" time="0.0005648136138916016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc8178e1a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;17]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc7f2f4ddd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;18]" time="0.0008625984191894531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc7f2ef34e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;19]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc7f2f59780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;20]" time="0.0004968643188476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc7f2f58198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;21]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc7f2f26da0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;22]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc7f2eea9e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;23]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc7f2eee9e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;24]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc7f2eeeba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;25]" time="0.000522613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc7f2ef3358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;26]" time="0.0008924007415771484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc7f2ef3b00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;27]" time="0.00048804283142089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc7f2eee470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;28]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc7f2eea128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;29]" time="0.0005543231964111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc7fca34940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;30]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc81792b668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;31]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc7f2f4db70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;32]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc7f2ef37b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;33]" time="0.0005207061767578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc7f2ef3198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;34]" time="0.0008385181427001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc7f2efb160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;35]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc7f2ef3208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;36]" time="0.0005125999450683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc7f2ef3be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;37]" time="0.0005099773406982422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc7fca3a0b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;38]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc7fca34d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;39]" time="0.0005295276641845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7fc81b1a7860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;0]" time="0.0004947185516357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7fc962fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;1]" time="0.0005152225494384766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7f2efb278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;2]" time="0.0008187294006347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7f2efb780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;3]" time="0.0004820823669433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7f2eeebe0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;4]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7f2eeaa90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;5]" time="0.0005271434783935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7fca34160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;6]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7fc959b00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;7]" time="0.0005044937133789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7f2ef3c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;8]" time="0.0005197525024414062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7fc96a1d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;9]" time="0.0005466938018798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7f2efb2b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;10]" time="0.0012154579162597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7f2efbda0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;11]" time="0.0004878044128417969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc81792b3c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;12]" time="0.0004966259002685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7fc962320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;13]" time="0.0005173683166503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7f2ef3e48&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;14]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7f2ef35c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;15]" time="0.0005285739898681641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7f2eeebe0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;16]" time="0.0004949569702148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7f2eea3c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;17]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7f2f424a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;18]" time="0.0005297660827636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7fca2b748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;19]" time="0.0009696483612060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7f2f4db00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;20]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7f2eeaa90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;21]" time="0.0005269050598144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7f2eeeac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;22]" time="0.0005285739898681641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7f2ef3c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;23]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7fc983e80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;24]" time="0.0005257129669189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7fc9623c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;25]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7fca34e80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;26]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7f2efbc50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;27]" time="0.0008213520050048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7fc959b00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;28]" time="0.0005297660827636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7fc983a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;29]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7f2ef3dd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;30]" time="0.0005495548248291016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7fc90b160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;31]" time="0.0005147457122802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7f2eee908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;32]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7f2f4d358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;33]" time="0.0005993843078613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7f2efbb00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;34]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7f2f062e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;35]" time="0.0005156993865966797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7f2f06828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;36]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc81ae42a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;37]" time="0.0005326271057128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7f2eeeac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;38]" time="0.000530242919921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7fc90b208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;39]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7f2ef3160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;40]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7fc7fc9623c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;0]" time="0.000530242919921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7f2f062e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;1]" time="0.0004913806915283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7f2f06ba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;2]" time="0.0008718967437744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7f2f0a128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;3]" time="0.0004870891571044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7f2f068d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;4]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7fca34d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;5]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7fc983a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;6]" time="0.0005006790161132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7fc90b400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;7]" time="0.0005211830139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7f2f427f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;8]" time="0.0005266666412353516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7f2f4d358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;9]" time="0.0005247592926025391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7f2f0a240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;10]" time="0.0009801387786865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7f2f0a748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;11]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7f2eeeac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;12]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7fc90bc88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;13]" time="0.0005245208740234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7f2ef3898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;14]" time="0.0004858970642089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7f2f581d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;15]" time="0.0004966259002685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7f2f06a58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;16]" time="0.0005116462707519531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7f2f06b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;17]" time="0.0005197525024414062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7f2f0a240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;18]" time="0.0008835792541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7f2f0ad68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;19]" time="0.0005099773406982422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7f2f06908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;20]" time="0.0005512237548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7fc983f28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;21]" time="0.0005252361297607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7f2ef3e48&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;22]" time="0.0005447864532470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7fc90b2b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;23]" time="0.0005242824554443359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7f2efbc18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;24]" time="0.0005078315734863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7f2f0a208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;25]" time="0.0005230903625488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7f2f0a518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;26]" time="0.0008831024169921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7f2f133c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;27]" time="0.0005471706390380859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7f2f0abe0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;28]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7f2eeeeb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;29]" time="0.0005383491516113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7fc90b9e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;30]" time="0.0004923343658447266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7f2ef3e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;31]" time="0.0005075931549072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7f2f06940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;32]" time="0.0005450248718261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7fcab16a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;33]" time="0.0005323886871337891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7f2f131d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;34]" time="0.0009021759033203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7f2f139e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;35]" time="0.0004990100860595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7fc983940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;36]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7fc962e48&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;37]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7f2eeaef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;38]" time="0.0005183219909667969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7f2efbc50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;39]" time="0.0005717277526855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7f2f0abe0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;40]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7fc7f2f135c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;0]" time="0.0005350112915039062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7f2f13438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;1]" time="0.0008723735809326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7f2f19048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;2]" time="0.0005307197570800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7f2f136a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;3]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7f2f0a898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;4]" time="0.0005466938018798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7fcabe5f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;5]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7f2efb2b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;6]" time="0.0004925727844238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7f2f3a2e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;7]" time="0.0005338191986083984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc817923400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;8]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7f2f19160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;9]" time="0.0008323192596435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7f2f19668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;10]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7f2f06128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;11]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7f2ef3b00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;12]" time="0.0005135536193847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7fcabe748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;13]" time="0.0005142688751220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7f2f0a198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;14]" time="0.0005075931549072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7f2f13080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;15]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7f2f13550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;16]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7f2f19198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;17]" time="0.0008592605590820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7f2f19c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;18]" time="0.0004961490631103516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7fca1ba90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;19]" time="0.0005204677581787109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7f2f0a828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;20]" time="0.0004906654357910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7f2efbb00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;21]" time="0.0005025863647460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7f2f427f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;22]" time="0.0005354881286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7f2f3a2e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;23]" time="0.0005357265472412109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7f2f192e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;24]" time="0.0005106925964355469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7f2f19400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;25]" time="0.0011682510375976562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7f2f1f2e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;26]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7fcabe550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;27]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7fca1b208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;28]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7f2f19400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;29]" time="0.0005245208740234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7f2f19d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;30]" time="0.0005168914794921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7f2f13ba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;31]" time="0.0005075931549072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7fcab1dd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;32]" time="0.0004985332489013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7f2f0ac18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;33]" time="0.0005259513854980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7f2f067f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;34]" time="0.0007836818695068359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7f2f0abe0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;35]" time="0.0005438327789306641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7f2f13780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;36]" time="0.0005090236663818359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7f2f19080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;37]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7f2f19e80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;38]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7fca1b550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;39]" time="0.0004918575286865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7f2ef3898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;40]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7fc7f2f06668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;0]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7f2efb908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;1]" time="0.0005025863647460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7f2efb908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;2]" time="0.0005037784576416016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7f2f06a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;3]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7fca224a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;4]" time="0.0005364418029785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7fca1bfd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;5]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7f2f198d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;6]" time="0.0004916191101074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7f2f13ba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;7]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7f2f0af60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;8]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7f2f1f198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;9]" time="0.0008754730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7f2f1f9b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;10]" time="0.0004887580871582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7f2f139b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;11]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7f2f19978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;12]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7fca1b550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;13]" time="0.0004913806915283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7fca22400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;14]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7fc94acc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;15]" time="0.0004990100860595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7f2f1f6a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;16]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7f2f1f438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;17]" time="0.0009839534759521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7f2f1fef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;18]" time="0.0005388259887695312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7f2f1f400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;19]" time="0.0005106925964355469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7fc94afd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;20]" time="0.0005316734313964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7fcabe748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;21]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7fca22400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;22]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7f2f196d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;23]" time="0.0004878044128417969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7f2f528d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;24]" time="0.0005195140838623047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7fca2b9e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;25]" time="0.0008323192596435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7f2ea9550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;26]" time="0.0005292892456054688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7fca1b550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;27]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7f2f191d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;28]" time="0.0004992485046386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7f2f065c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;29]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7fc94afd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;30]" time="0.0005207061767578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7f2f1f828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;31]" time="0.0005123615264892578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7f2f1fd30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;32]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7f2ea9400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;33]" time="0.001051187515258789"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7f2ea9b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;34]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7f2f1fcf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;35]" time="0.0005595684051513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7f2efb438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;36]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7fca224a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;37]" time="0.0004932880401611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7f2f19278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;38]" time="0.0005271434783935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7f2f52c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;39]" time="0.0005044937133789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7f2ea9240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;40]" time="0.0005257129669189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7fc7f2ea90f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;0]" time="0.0009784698486328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7f2eaf1d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;1]" time="0.0005183219909667969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7f2ea99b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;2]" time="0.0005118846893310547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7f2f520f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;3]" time="0.0005223751068115234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7f2ef3b00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;4]" time="0.0005097389221191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7fca22400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;5]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7f2f1f5f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;6]" time="0.0005245208740234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7fc951d68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;7]" time="0.0004820823669433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7f2eaf240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;8]" time="0.00079345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7f2eaf7f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;9]" time="0.0005168914794921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7f2f1f7f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;10]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7fc94acc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;11]" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7f2ef3b00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;12]" time="0.0005218982696533203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7fca1b898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;13]" time="0.0005431175231933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7f2ea9860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;14]" time="0.0004990100860595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7f2ea9198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;15]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7f2eaf358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;16]" time="0.0008797645568847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7f2eafe10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;17]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7f2ea97b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;18]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7f2f13208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;19]" time="0.0005228519439697266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7fca22400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;20]" time="0.0005233287811279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7fc94ae10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;21]" time="0.0005114078521728516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7fc9518d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;22]" time="0.0005035400390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7f2eaf470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;23]" time="0.000484466552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7f2eaf588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;24]" time="0.0008404254913330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7f2eb7470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;25]" time="0.0005171298980712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7f2eaf8d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;26]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7f2f1f5f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;27]" time="0.0004832744598388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7f2f19a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;28]" time="0.0005273818969726562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7f2f596a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;29]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7f2ea9668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;30]" time="0.0005242824554443359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7fc9a84e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;31]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7f2eb7278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;32]" time="0.0008032321929931641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7f2eb7a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;33]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7fc9a1cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;34]" time="0.0005228519439697266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7f2f13ba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;35]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7f2f19278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;36]" time="0.0005025863647460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7f2f1fcf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;37]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7f2eaf358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;38]" time="0.0005097389221191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7f2eb7c18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;39]" time="0.0005354881286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7f2eb74e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;40]" time="0.0011806488037109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7fc7f2ebb0f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;0]" time="0.0004990100860595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7f2f13630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;1]" time="0.0004980564117431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7fc9a8438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;2]" time="0.0004928112030029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7f2eb7ef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;3]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7f2eb7898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;4]" time="0.0004994869232177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7fc9518d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;5]" time="0.0005238056182861328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7f2eafbe0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;6]" time="0.0005280971527099609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7f2ea9668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;7]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7f2f1fef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;8]" time="0.0007674694061279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7f2ea9518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;9]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7f2eaf828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;10]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7fc951240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;11]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7f2eb75f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;12]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7f2eb7dd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;13]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7fc9a1fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;14]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7fc9af198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;15]" time="0.0004899501800537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7f2f52438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;16]" time="0.0007467269897460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7f2f06940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;17]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7fca1b6a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;18]" time="0.0004937648773193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7fc9a8d68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;19]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7f2eb75c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;20]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7f2eafa58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;21]" time="0.0004868507385253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7fc9ff860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;22]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7f2ea9518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;23]" time="0.0005090236663818359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7f2ebb5f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;24]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7f2ebbb38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;25]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7f2eaf358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;26]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7fc9512e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;27]" time="0.0005104541778564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7f2eb7ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;28]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7fc9a8438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;29]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7f2f13ba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;30]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7f2ebb320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;31]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7f2ebbeb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;32]" time="0.0008969306945800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7f2ec4438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;33]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7f2ebbcc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;34]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc8178e1e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;35]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7fc9a8cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;36]" time="0.0004923343658447266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7f2eb7438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;37]" time="0.0005400180816650391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7f2eafa58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;38]" time="0.0005135536193847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7f2ea9e80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;39]" time="0.0005190372467041016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7f2ec42b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;40]" time="0.0008466243743896484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7fc7f2ec4a58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;0]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7f2eaf358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;1]" time="0.0004940032958984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7f2eb7a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;2]" time="0.0005331039428710938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7f2f523c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;3]" time="0.0006251335144042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7f2ebb358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;4]" time="0.0004982948303222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7f2ebb400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;5]" time="0.0005099773406982422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7f2ec4ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;6]" time="0.0005433559417724609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7f2ec4048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;7]" time="0.0008244514465332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7f2ecd0b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;8]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7f2ec40f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;9]" time="0.0005218982696533203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7fc9877b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;10]" time="0.0005557537078857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7f2ebb748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;11]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7f2f523c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;12]" time="0.0005321502685546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7f2eb7cf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;13]" time="0.0005223751068115234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7f2eaf978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;14]" time="0.0005185604095458984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7f2ecd1d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;15]" time="0.0008757114410400391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7f2ecd6d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;16]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7f2eaf7b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;17]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7f2eb75f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;18]" time="0.0005054473876953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7f2efb358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;19]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7f2ebbcf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;20]" time="0.0005042552947998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7f2ec4710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;21]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7f2ec4c18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;22]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7f2ecd208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;23]" time="0.0008654594421386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7f2ecdcf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;24]" time="0.0004870891571044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7f2ec4e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;25]" time="0.0005083084106445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7f2ebb2e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;26]" time="0.0005681514739990234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7f2f19278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;27]" time="0.00048804283142089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7fca719e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;28]" time="0.0005190372467041016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7f2eaf7b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;29]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7f2ecd358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;30]" time="0.0005066394805908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7f2ecd470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;31]" time="0.0008206367492675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7f2ed4358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;32]" time="0.0004711151123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7f2ecd828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;33]" time="0.0004918575286865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7fc9fffd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;34]" time="0.0005435943603515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7f2eb75c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;35]" time="0.0005223751068115234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7f2f52438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;36]" time="0.0004935264587402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7f2ec4710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;37]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7fca7a400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;38]" time="0.0004937648773193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7f2ed4160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;39]" time="0.0008265972137451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7f2ed4978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;40]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7fc7f2ec4dd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;0]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7f2ebb400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;1]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7f2eb7438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;2]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7f2eaf978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;3]" time="0.0005543231964111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7f2ecda58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;4]" time="0.0005269050598144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7f2ed4a58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;5]" time="0.0005061626434326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7f2ed4470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;6]" time="0.0009019374847412109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7f2ed4f98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;7]" time="0.0005106925964355469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7f2ed4710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;8]" time="0.0005025863647460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7f2ecdba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;9]" time="0.0005164146423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7f2eaf978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;10]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7f2eb7cf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;11]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7f2ebb320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;12]" time="0.0005290508270263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7fca7a7f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;13]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7f2ed70b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;14]" time="0.0012133121490478516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7f2ed75f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;15]" time="0.0005235671997070312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7fc9a84e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;16]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7fc9512e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;17]" time="0.0005815029144287109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7f2ed4710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;18]" time="0.0005147457122802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7f2ed4f60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;19]" time="0.0005693435668945312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7f2ecd908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;20]" time="0.0005035400390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7fc9875c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;21]" time="0.0005147457122802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7f2ea9b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;22]" time="0.0005538463592529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7f2ebb9e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;23]" time="0.0008776187896728516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7f2ebb668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;24]" time="0.0005202293395996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7fc9877b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;25]" time="0.0005185604095458984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7f2ecd2e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;26]" time="0.0005066394805908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7f2ed44a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;27]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7fca609e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;28]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7fca71c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;29]" time="0.0005714893341064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7fca7a400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;30]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7f2f1fef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;31]" time="0.0004947185516357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7f2f1f048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;32]" time="0.00048732757568359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7fca57240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;33]" time="0.0005104541778564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7fca602b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;34]" time="0.000598907470703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7f2ed4198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;35]" time="0.0005180835723876953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7f2f066a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;36]" time="0.0004820823669433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7f2ecd438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;37]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7f2ebb668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;38]" time="0.00052642822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7f2ed7080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;39]" time="0.0008866786956787109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7f2ed7cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;40]" time="0.0005679130554199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7fc7f2ecdac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;0]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7f2ed4470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;1]" time="0.0005133152008056641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7f2ed47b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;2]" time="0.0005125999450683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7fca60160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;3]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7f2f0ab70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;4]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7f2ed77f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;5]" time="0.00048470497131347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7f2ed7438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;6]" time="0.0008769035339355469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7f2ee2240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;7]" time="0.0004971027374267578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7f2ed7b00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;8]" time="0.00048232078552246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7f2f0a710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;9]" time="0.0005388259887695312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7fca714a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;10]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7fca9f7f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;11]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7f2ed44a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;12]" time="0.0005042552947998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7f2ecdcf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;13]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7f2ee2080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;14]" time="0.0008947849273681641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7f2ee2860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;15]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7f2ec4c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;16]" time="0.0006074905395507812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7f2ed4dd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;17]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7fca60d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;18]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7fca57f28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;19]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7f2ed79b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;20]" time="0.0005750656127929688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7f2f1f748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;21]" time="0.0005426406860351562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7f2ee2080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;22]" time="0.0008561611175537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7f2ee2e80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;23]" time="0.0005054473876953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7f2ee22e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;24]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7f2f0ab70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;25]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7f2ed7eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;26]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7fca60e80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;27]" time="0.00051116943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7f2ed4748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;28]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7fcaa6898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;29]" time="0.0005166530609130859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7f2ecd358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;30]" time="0.0009119510650634766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7f2e694e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;31]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7f2eaff60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;32]" time="0.0004775524139404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7fca9ff28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;33]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7f2eb7cf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;34]" time="0.0004935264587402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7f2ed7f60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;35]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7f2ee24a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;36]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7f2ee2c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;37]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7f2e69358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;38]" time="0.0008745193481445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7f2e69b00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;39]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7f2ee25f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;40]" time="0.0005414485931396484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7fc7f2ed7198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;0]" time="0.0004711151123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7fca57f28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;1]" time="0.0005054473876953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7f2ed4c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;2]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7fcaa6160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;3]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7f2e697b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;4]" time="0.0005083084106445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7f2e69198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;5]" time="0.0008220672607421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7f2e6f160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;6]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7f2e69cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;7]" time="0.0005178451538085938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7f2e69710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;8]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7fcaf5d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;9]" time="0.0004971027374267578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7f2ed4390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;10]" time="0.0005121231079101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7f2f0a240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;11]" time="0.0004940032958984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7fcaae0b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;12]" time="0.0005373954772949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7f2e6f278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;13]" time="0.0008635520935058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7f2e6f780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;14]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7f2ed7ef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;15]" time="0.0005476474761962891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7fca60898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;16]" time="0.0004928112030029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7f2ed4390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;17]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7fcaa6dd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;18]" time="0.0005152225494384766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7f2e69748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;19]" time="0.0005395412445068359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7f2ecd6d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;20]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7f2e6f2b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;21]" time="0.0008451938629150391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7f2e6fda0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;22]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7f2e69ba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;23]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7fcaf5d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;24]" time="0.0006008148193359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7fca9fb38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;25]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7f2ed7b00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;26]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7f2ee2080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;27]" time="0.0005393028259277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7f2e6f400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;28]" time="0.0005006790161132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7f2e6f518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;29]" time="0.0011796951293945312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7f2e71400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;30]" time="0.0005993843078613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7fca7aa90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;31]" time="0.00047898292541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7fcaf5a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;32]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7f2e6ff60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;33]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7f2e6fe80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;34]" time="0.000537872314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7f2e691d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;35]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7f2e69518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;36]" time="0.0004889965057373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7f2ee2240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;37]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7f2ed7278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;38]" time="0.0009310245513916016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7f2ee2048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;39]" time="0.0004954338073730469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7f2e69d68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;40]" time="0.0004928112030029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7fc7fcaebfd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;0]" time="0.0005385875701904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7f2e6fbe0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;1]" time="0.0005125999450683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7fcaa6be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;2]" time="0.0005269050598144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7fcaae0b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;3]" time="0.0005440711975097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7fcafbbe0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;4]" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7f2ebb208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;5]" time="0.0007750988006591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7f2f1fda0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;6]" time="0.0005080699920654297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7fcafb748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;7]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7fca7abe0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;8]" time="0.0005419254302978516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7f2e6f4e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;9]" time="0.0004932880401611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7fcaebfd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;10]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7fc9ff3c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;11]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7f2ee2240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;12]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7f2e71908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;13]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7f2e71e48&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;14]" time="0.0005075931549072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7f2e69358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;15]" time="0.0005059242248535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7f2e6ffd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;16]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7fca48e80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;17]" time="0.000507354736328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7fcaf5f28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;18]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7fcafbbe0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;19]" time="0.0005266666412353516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7f2e71630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;20]" time="0.0005104541778564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7f2e80208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;21]" time="0.0007951259613037109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7f2e80748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;22]" time="0.0004975795745849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7f2e715f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;23]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7fcafbc88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;24]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7fca48550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;25]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7f2e6f518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;26]" time="0.0024747848510742188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7f2e697f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;27]" time="0.0005006790161132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7f2e80438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;28]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7f2e80080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;29]" time="0.0008399486541748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7f2e80d68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;30]" time="0.0004820823669433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7f2e6f4e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;31]" time="0.00047898292541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7fcabeb70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;32]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7fca4e940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;33]" time="0.0005650520324707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7fcafbc88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;34]" time="0.0005137920379638672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7f2e71f98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;35]" time="0.0005300045013427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7f2e80ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;36]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7f2e80358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;37]" time="0.0008175373077392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7f2e883c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;38]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7f2e80b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;39]" time="0.000518798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7f2e71780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;40]" time="0.0005371570587158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7fc7f2ed7c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;0]" time="0.0005297660827636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7fca487f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;1]" time="0.0004711151123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7fcaa6160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;2]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2e6f4e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;3]" time="0.0005199909210205078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2e881d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;4]" time="0.0008845329284667969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2e889e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;5]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2e69128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;6]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7fca48550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;7]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7fca4ec88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;8]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2e71a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;9]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2e80b00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;10]" time="0.0004992485046386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2e885c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;11]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2e88438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;12]" time="0.0008680820465087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2e8d048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;13]" time="0.0005059242248535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2e887f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;14]" time="0.0004975795745849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2e80390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;15]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2ed79b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;16]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7fca4ebe0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;17]" time="0.0005135536193847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7fc9749e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;18]" time="0.0005199909210205078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2e6f940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;19]" time="0.000514984130859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2e8d160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;20]" time="0.0007970333099365234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2e8d668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;21]" time="0.0004837512969970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7fc9746a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;22]" time="0.0005180835723876953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7fca4e5f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;23]" time="0.0005381107330322266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2e71eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;24]" time="0.0005364418029785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2e80e80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;25]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2e88860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;26]" time="0.0005090236663818359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2e88518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;27]" time="0.0005280971527099609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2e8d198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;28]" time="0.0008635520935058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2e8dc88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;29]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7fc97a208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;30]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2e80978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;31]" time="0.0005257129669189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7fca4e4a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;32]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7fc974400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;33]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7fca60fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;34]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2e8d2e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;35]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2e8d400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;36]" time="0.0008409023284912109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2e952e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;37]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2e8d198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;38]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2ee2208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;39]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7fc9749e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;40]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2e716d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;0]" time="0.0005142688751220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7f2e80438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;1]" time="0.0005161762237548828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7f2e88e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;2]" time="0.000507354736328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7f2e950f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;3]" time="0.0014147758483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7f2e95908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;4]" time="0.0005059242248535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7fca4e160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;5]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7fc9746a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;6]" time="0.0005342960357666016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7f2e8da90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;7]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7f2e8d438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;8]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7f2e88be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;9]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7f2e80e80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;10]" time="0.0004963874816894531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7f2eb7828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;11]" time="0.0005104541778564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7f2e71c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;12]" time="0.0007894039154052734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7f2e80780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;13]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7f2e88748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;14]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7f2e8dc50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;15]" time="0.0004982948303222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7f2e8d978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;16]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7fc9749e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;17]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7fc97a4a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;18]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7f2e715f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;19]" time="0.0005197525024414062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7fca609e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;20]" time="0.0004968643188476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7fca60fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;21]" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7fc97ab38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;22]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7fca4e160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;23]" time="0.0005080699920654297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7fc9b82e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;24]" time="0.0005176067352294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7f2e8d400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;25]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7f2e88748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;26]" time="0.0005319118499755859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7f2e80780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;27]" time="0.0005288124084472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7f2e952b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;28]" time="0.0008931159973144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7f2e95fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;29]" time="0.0005726814270019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7f2e95780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;30]" time="0.0005054473876953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7f2e887b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;31]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7f2e8d748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;32]" time="0.0005669593811035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7fc9b8f60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;33]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7fc974dd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;34]" time="0.0005438327789306641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7fc97aa90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;35]" time="0.0005025863647460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7fca60fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;36]" time="0.0008540153503417969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7f2ea0550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;37]" time="0.000530242919921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7fca4e160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;38]" time="0.0005059242248535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7fc9b8a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;39]" time="0.0004937648773193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7f2e8d3c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;40]" time="0.0005154609680175781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7fc7f2e80438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;0]" time="0.0005137920379638672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fc7f2e95ba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;1]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fc7f2e95b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;2]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fc7f2ea0400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;3]" time="0.0008153915405273438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fc7f2ea0b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;4]" time="0.0005812644958496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fc7f2e950b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;5]" time="0.0004985332489013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fc7f2e6f470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;6]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fc7f2e8d278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;7]" time="0.0004911422729492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fc7fc9b8828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;8]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fc7f2e71e80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;9]" time="0.0004851818084716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fc7f2ea0828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;10]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fc7f2ea00f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;11]" time="0.000835418701171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fc7f2ea41d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;12]" time="0.0005135536193847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fc7f2ea00b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;13]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fc7f2e71160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;14]" time="0.0005223751068115234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fc7fc9b8828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;15]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fc7f2e8dcc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;16]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fc7f2e883c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;17]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fc7f2e95630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;18]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fc7f2ea4240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;19]" time="0.0008151531219482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fc7f2ea47f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;20]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fc7fc990b00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;21]" time="0.0004975795745849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fc7f2e6ffd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;22]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fc7f2e80b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;23]" time="0.0004916191101074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fc7fc9b8ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;24]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fc7f2ea0278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;25]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fc7f2ea0898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;26]" time="0.0005762577056884766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fc7f2ea4358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;27]" time="0.0008792877197265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fc7f2ea4e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;28]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fc7f2ea0f28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;29]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fc7fc9b8b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;30]" time="0.0005230903625488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fc7fc974dd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;31]" time="0.0004956722259521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fc7fc9c0588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;32]" time="0.0005450248718261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fc7f2e95da0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;33]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fc7f2ea4470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;34]" time="0.0005173683166503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fc7f2ea4588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;35]" time="0.0010623931884765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fc7f2e2b470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;36]" time="0.0005850791931152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7fc7f2ea48d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;0]" time="0.0004909038543701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fc7fc990a58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;1]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fc7fc998a58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;2]" time="0.0005047321319580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fc7f2e80390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;3]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fc7fc9b8ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;4]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fc7f2e71128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;5]" time="0.0005123615264892578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fc7f2e2b278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;6]" time="0.0008180141448974609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fc7f2e2ba90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;7]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fc7fc9b8ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;8]" time="0.0004868507385253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fc7fc974dd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;9]" time="0.00048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fc7f2e88c50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;10]" time="0.0005304813385009766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fc7fc990b00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;11]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fc7f2ea4358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;12]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fc7f2e2bc18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;13]" time="0.0005638599395751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fc7f2e2b4e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;14]" time="0.0008280277252197266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fc7f2e330f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;15]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fc7f2e2b940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;16]" time="0.0004937648773193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fc7fca3a320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;17]" time="0.0004932880401611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fc7f2e956a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;18]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fc7f2e883c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;19]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fc7fc998470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;20]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fc7fc97a9e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;21]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fc7f2e33208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;22]" time="0.0011463165283203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fc7f2e33710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;23]" time="0.0005257129669189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fc7fca43940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;24]" time="0.00048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fc7fc9909b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;25]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fc7f2e2bb00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;26]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fc7f2e2b0f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;27]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fc7f2ea4be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;28]" time="0.0005249977111816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fc7f2ea06d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;29]" time="0.0005433559417724609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fc7fc97aa90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;30]" time="0.0005047321319580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fc7f2e95978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;31]" time="0.0007817745208740234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fc7f2e95518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;32]" time="0.0005600452423095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fc7f2ea09e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;33]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fc7f2ea49b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;34]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fc7f2e2b5c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;35]" time="0.0005283355712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fc7f2e2bc18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;36]" time="0.0004982948303222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7fc7fca43748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;0]" time="0.00048232078552246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7fc998470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;1]" time="0.0005028247833251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7f2e337f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;2]" time="0.0008876323699951172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7f2ee2208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;3]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7f2e88c50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;4]" time="0.0005300045013427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7fca3a320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;5]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7f2e2b278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;6]" time="0.0005145072937011719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7f2ea4908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;7]" time="0.0005605220794677734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7f2ea0b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;8]" time="0.0004968643188476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7f2e337f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;9]" time="0.0005626678466796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7f2e33c18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;10]" time="0.0005695819854736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7f2e3a198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;11]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7fc97aa90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;12]" time="0.0005028247833251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7f2ea41d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;13]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7f2e2b828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;14]" time="0.0004971027374267578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7fca3afd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;15]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7fc990ef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;16]" time="0.0004940032958984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7fca81be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;17]" time="0.0004870891571044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7f2e3a518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;18]" time="0.0008087158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7f2e3aa58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;19]" time="0.0005269050598144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7fc990da0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;20]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7f2e2be80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;21]" time="0.000499725341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7fc9ca2b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;22]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7f2ea4908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;23]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7f2e33128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;24]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7f2e3aac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;25]" time="0.000514984130859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7f2e3a390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;26]" time="0.0008080005645751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7f2e420b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;27]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7f2e3a908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;28]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7f2e33208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;29]" time="0.0005319118499755859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7f2ea4be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;30]" time="0.0005068778991699219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7fca0a160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;31]" time="0.000522613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7f2e2b7f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;32]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7fc9affd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;33]" time="0.0005614757537841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7f2e421d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;34]" time="0.0008738040924072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7f2e426d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;35]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7fca43358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;36]" time="0.0004980564117431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7f2e2beb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;37]" time="0.0005211830139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7fca0a400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;38]" time="0.0004975795745849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7f2ea4dd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;39]" time="0.0005164146423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7f2e3a860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;40]" time="0.0005166530609130859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7fc7f2e3a358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;0]" time="0.0005025863647460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7f2e42208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;1]" time="0.0008432865142822266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7f2e42cf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;2]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7f2e33ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;3]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7f2ea4e48&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;4]" time="0.0005011558532714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7fca0a748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;5]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7f2e2b278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;6]" time="0.0005178451538085938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7fc9affd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;7]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7f2e42358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;8]" time="0.0004878044128417969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7f2e42470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;9]" time="0.0008718967437744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7f2e48358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;10]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7f2e42240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;11]" time="0.0005066394805908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7f2e715f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;12]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7f2e2b5c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;13]" time="0.0005125999450683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7fca0a2b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;14]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7f2e33940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;15]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7f2e3a358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;16]" time="0.0005230903625488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7f2e48160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;17]" time="0.0008769035339355469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7f2e48978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;18]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7f2e3acc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;19]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7f2e33208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;20]" time="0.0004837512969970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7f2e2b940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;21]" time="0.0005247592926025391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7f2ee2c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;22]" time="0.0005161762237548828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7f2e42860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;23]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7f2e48a58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;24]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7f2e48470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;25]" time="0.0008597373962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7f2e48f98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;26]" time="0.0004899501800537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7f2e48710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;27]" time="0.0004858970642089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7f2e42470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;28]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7f2ee2208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;29]" time="0.0005457401275634766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7f2e2b438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;30]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7f2ea4a58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;31]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7f2e3aba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;32]" time="0.0005383491516113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7f2e520b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;33]" time="0.0009355545043945312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7f2e525f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;34]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7f2e3a550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;35]" time="0.0005121231079101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7fca0a748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;36]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7f2ee2208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;37]" time="0.0005242824554443359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7f2e42470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;38]" time="0.0005483627319335938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7f2e48ba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;39]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7f2e484e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;40]" time="0.0005047321319580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7fc7f2e520f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;0]" time="0.0012710094451904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7f2e52c18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;1]" time="0.000484466552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7f2ea4908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;2]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7fc9ce518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;3]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7f2e48518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;4]" time="0.0005171298980712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7f2e48390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;5]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7f2e42f28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;6]" time="0.0004923343658447266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7f2e3a518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;7]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7f2e331d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;8]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7f2e33240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;9]" time="0.0008161067962646484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7f2e33e48&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;10]" time="0.00048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7f2ea0748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;11]" time="0.0005390644073486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7f2e423c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;12]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7f2e48748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;13]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7fca0abe0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;14]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7f2e2b5c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;15]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7fc9dc9b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;16]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7f2e52cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;17]" time="0.0005097389221191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7f2e956a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;18]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7fc9e5860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;19]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7fc9ce710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;20]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7f2e48fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;21]" time="0.0005044937133789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7f2e424a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;22]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7f2e3a1d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;23]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7f2e52cf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;24]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7f2e525c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;25]" time="0.0008487701416015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7f2e5b320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;26]" time="0.0004711151123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7f2e52828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;27]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7f2e3a1d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;28]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7f2e42cf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;29]" time="0.0004968643188476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7f2e48518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;30]" time="0.0005297660827636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7fc9ce278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;31]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7fc9eb668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;32]" time="0.0004870891571044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7f2e5b128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;33]" time="0.0008370876312255859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7f2e5b860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;34]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7fc9e5ef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;35]" time="0.0005185604095458984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7fc9ce278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;36]" time="0.0004913806915283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7f2e48a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;37]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7f2e42f28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;38]" time="0.0005323886871337891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7f2ea0048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;39]" time="0.0005176067352294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7f2e52eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;40]" time="0.0005083084106445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7fc7f2e5b4e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;0]" time="0.0008399486541748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2e5be80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;1]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2e5b0f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;2]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2e52240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;3]" time="0.0004947185516357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2e33e48&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;4]" time="0.0004994869232177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2e42ef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;5]" time="0.0004992485046386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2e48390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;6]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7fc9ebda0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;7]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2e95da0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;8]" time="0.0008916854858398438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2e624e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;9]" time="0.0004956722259521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7fca120b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;10]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2e48d68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;11]" time="0.0005617141723632812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2e42860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;12]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2e52e80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;13]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2e5ba90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;14]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2e5bbe0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;15]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2e62358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;16]" time="0.0009453296661376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2e62b00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;17]" time="0.0004887580871582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2e5ba90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;18]" time="0.0005688667297363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2e52828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;19]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7fca43358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;20]" time="0.0005972385406494141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2e48320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;21]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7fc9ebb00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;22]" time="0.0005419254302978516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2e627b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;23]" time="0.0006341934204101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2e62198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;24]" time="0.0008935928344726562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2de7160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;25]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2e62208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;26]" time="0.0005011558532714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2e62be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;27]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7fc9dc5c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;28]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2e427f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;29]" time="0.00047898292541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7fc915208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;30]" time="0.0005841255187988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7fc9ca550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;31]" time="0.0005240440368652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2de7278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;32]" time="0.0009596347808837891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2de7780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;33]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2e52cf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;34]" time="0.0005075931549072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7fc915358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;35]" time="0.0005469322204589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7fc9ce3c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;36]" time="0.0005557537078857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7fc9ebba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;37]" time="0.0005121231079101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2e62390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;38]" time="0.0005259513854980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2e62f98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;39]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2de72b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;40]" time="0.000946044921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7fc7f2de7da0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;0]" time="0.0005514621734619141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7f2e629b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;1]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7fc9dc3c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;2]" time="0.0005445480346679688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7fca43358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;3]" time="0.0004832744598388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7fc9158d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;4]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7f2e5b0f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;5]" time="0.0005147457122802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7f2de7400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;6]" time="0.0005128383636474609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7f2de7518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;7]" time="0.0009202957153320312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7f2def400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;8]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7f2de7a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;9]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7f2e52cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;10]" time="0.0005452632904052734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7fc915780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;11]" time="0.0005290508270263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7fca8e5f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;12]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7fc9ebba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;13]" time="0.0005548000335693359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7f2e62828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;14]" time="0.0005249977111816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7f2def208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;15]" time="0.0015687942504882812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7f2defa20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;16]" time="0.0005333423614501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7fca0a550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;17]" time="0.0005307197570800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc8134bbb38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;18]" time="0.0005214214324951172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7f2de7b38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;19]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7f2e62cf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;20]" time="0.0005083084106445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7f2e62518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;21]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7f2e5b860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;22]" time="0.00052642822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7f2e52908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;23]" time="0.0005147457122802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7f2e33278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;24]" time="0.0008230209350585938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7fc9e5fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;25]" time="0.0005233287811279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7f2e5b128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;26]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7f2e62160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;27]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7f2de7da0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;28]" time="0.0005092620849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc8134bbb38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;29]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7fca8ee80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;30]" time="0.0004870891571044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7f2e48c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;31]" time="0.0005280971527099609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7f2def748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;32]" time="0.0008637905120849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7f2e33f98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;33]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7f2e42ef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;34]" time="0.0004775524139404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7f2de7860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;35]" time="0.0005702972412109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7f2e62d68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;36]" time="0.0004868507385253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7fca95400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;37]" time="0.0005197525024414062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7f2e52a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;38]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7f2defb38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;39]" time="0.0005259513854980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7f2deff28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;40]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7fc7f2df94a8&gt;</skipped></testcase><testcase classname="src.pymortests.parameters" file="src/pymortests/parameters.py" line="18" name="test_uniform" time="0.0006096363067626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/parameters.py:18: &lt;py._xmlgen.raw object at 0x7fc7f2def7f0&gt;</skipped></testcase><testcase classname="src.pymortests.parameters" file="src/pymortests/parameters.py" line="25" name="test_randomly" time="0.0005300045013427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/parameters.py:25: &lt;py._xmlgen.raw object at 0x7fc7f2e5b828&gt;</skipped></testcase><testcase classname="src.pymortests.playground" file="src/pymortests/playground.py" line="12" name="test_eval" time="0.0006809234619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/playground.py:12: &lt;py._xmlgen.raw object at 0x7fc7f2e62518&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="49" name="test_scipy[1-1-10]" time="0.0005934238433837891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:49: &lt;py._xmlgen.raw object at 0x7fc7f2de7a90&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="49" name="test_scipy[1-1-100]" time="0.0005521774291992188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:49: &lt;py._xmlgen.raw object at 0x7fc7f2e42710&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="49" name="test_scipy[1-2-10]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:49: &lt;py._xmlgen.raw object at 0x7fc7f2e33d30&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="49" name="test_scipy[1-2-100]" time="0.0005061626434326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:49: &lt;py._xmlgen.raw object at 0x7fc7f2df98d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="49" name="test_scipy[2-1-10]" time="0.0009372234344482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:49: &lt;py._xmlgen.raw object at 0x7fc7f2df9e10&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="49" name="test_scipy[2-1-100]" time="0.0005247592926025391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:49: &lt;py._xmlgen.raw object at 0x7fc7f2e42710&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="49" name="test_scipy[2-2-10]" time="0.0005025863647460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:49: &lt;py._xmlgen.raw object at 0x7fc7fc9154a8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="49" name="test_scipy[2-2-100]" time="0.0005249977111816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:49: &lt;py._xmlgen.raw object at 0x7fc7f2e626d8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="78" name="test_scipy_trans[1-1-10]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:78: &lt;py._xmlgen.raw object at 0x7fc7fc93a160&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="78" name="test_scipy_trans[1-1-100]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:78: &lt;py._xmlgen.raw object at 0x7fc7f2defd30&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="78" name="test_scipy_trans[1-2-10]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:78: &lt;py._xmlgen.raw object at 0x7fc7f2df9b70&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="78" name="test_scipy_trans[1-2-100]" time="0.0005695819854736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:78: &lt;py._xmlgen.raw object at 0x7fc7f2df9550&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="78" name="test_scipy_trans[2-1-10]" time="0.0009188652038574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:78: &lt;py._xmlgen.raw object at 0x7fc7f2dfd470&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="78" name="test_scipy_trans[2-1-100]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:78: &lt;py._xmlgen.raw object at 0x7fc7f2df9128&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="78" name="test_scipy_trans[2-2-10]" time="0.0004787445068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:78: &lt;py._xmlgen.raw object at 0x7fc7f2def748&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="78" name="test_scipy_trans[2-2-100]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:78: &lt;py._xmlgen.raw object at 0x7fc7f2e5b630&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="107" name="test_pymess[pymess_care-1-1-1000]" time="0.0005457401275634766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:107: &lt;py._xmlgen.raw object at 0x7fc7f2e62ac8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="107" name="test_pymess[pymess_care-1-2-1000]" time="0.0005557537078857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:107: &lt;py._xmlgen.raw object at 0x7fc7f2de7e48&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="107" name="test_pymess[pymess_care-2-1-1000]" time="0.0005221366882324219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:107: &lt;py._xmlgen.raw object at 0x7fc7fca8ec88&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="107" name="test_pymess[pymess_care-2-2-1000]" time="0.0005266666412353516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:107: &lt;py._xmlgen.raw object at 0x7fc7f2dfd2b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="107" name="test_pymess[pymess_lrnm-1-1-1000]" time="0.0009086132049560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:107: &lt;py._xmlgen.raw object at 0x7fc7f2dfda90&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="107" name="test_pymess[pymess_lrnm-1-2-1000]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:107: &lt;py._xmlgen.raw object at 0x7fc7fc915eb8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="107" name="test_pymess[pymess_lrnm-2-1-1000]" time="0.0005218982696533203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:107: &lt;py._xmlgen.raw object at 0x7fc7fca95940&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="107" name="test_pymess[pymess_lrnm-2-2-1000]" time="0.0005431175231933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:107: &lt;py._xmlgen.raw object at 0x7fc7f2e5b358&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="133" name="test_pymess_trans[pymess_care-1-1-1000]" time="0.0005176067352294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:133: &lt;py._xmlgen.raw object at 0x7fc7f2def400&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="133" name="test_pymess_trans[pymess_care-1-2-1000]" time="0.0005140304565429688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:133: &lt;py._xmlgen.raw object at 0x7fc7f2df99e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="133" name="test_pymess_trans[pymess_care-2-1-1000]" time="0.0005383491516113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:133: &lt;py._xmlgen.raw object at 0x7fc7f2dfdc18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="133" name="test_pymess_trans[pymess_care-2-2-1000]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:133: &lt;py._xmlgen.raw object at 0x7fc7f2dfd4e0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="133" name="test_pymess_trans[pymess_lrnm-1-1-1000]" time="0.0009145736694335938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:133: &lt;py._xmlgen.raw object at 0x7fc7f2e050f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="133" name="test_pymess_trans[pymess_lrnm-1-2-1000]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:133: &lt;py._xmlgen.raw object at 0x7fc7f2dfd7b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="133" name="test_pymess_trans[pymess_lrnm-2-1-1000]" time="0.0005099773406982422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:133: &lt;py._xmlgen.raw object at 0x7fc7f2df9630&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="133" name="test_pymess_trans[pymess_lrnm-2-2-1000]" time="0.0005071163177490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:133: &lt;py._xmlgen.raw object at 0x7fc7f2defd68&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="159" name="test_pymess_E[pymess_care-1-1-1000]" time="0.0005171298980712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:159: &lt;py._xmlgen.raw object at 0x7fc7f2f59588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="159" name="test_pymess_E[pymess_care-1-2-1000]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:159: &lt;py._xmlgen.raw object at 0x7fc7fca95940&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="159" name="test_pymess_E[pymess_care-2-1-1000]" time="0.0004968643188476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:159: &lt;py._xmlgen.raw object at 0x7fc7fc862198&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="159" name="test_pymess_E[pymess_care-2-2-1000]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:159: &lt;py._xmlgen.raw object at 0x7fc7f2e05208&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="159" name="test_pymess_E[pymess_lrnm-1-1-1000]" time="0.0009200572967529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:159: &lt;py._xmlgen.raw object at 0x7fc7f2e05710&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="159" name="test_pymess_E[pymess_lrnm-1-2-1000]" time="0.0005338191986083984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:159: &lt;py._xmlgen.raw object at 0x7fc7fc915400&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="159" name="test_pymess_E[pymess_lrnm-2-1-1000]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:159: &lt;py._xmlgen.raw object at 0x7fc7f2e626d8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="159" name="test_pymess_E[pymess_lrnm-2-2-1000]" time="0.0004906654357910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:159: &lt;py._xmlgen.raw object at 0x7fc7f2def780&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="189" name="test_pymess_E_trans[pymess_care-1-1-1000]" time="0.0005395412445068359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:189: &lt;py._xmlgen.raw object at 0x7fc7f2df9978&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="189" name="test_pymess_E_trans[pymess_care-1-2-1000]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:189: &lt;py._xmlgen.raw object at 0x7fc7f2dfd278&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="189" name="test_pymess_E_trans[pymess_care-2-1-1000]" time="0.0005061626434326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:189: &lt;py._xmlgen.raw object at 0x7fc7f2dfd128&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="189" name="test_pymess_E_trans[pymess_care-2-2-1000]" time="0.0004909038543701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:189: &lt;py._xmlgen.raw object at 0x7fc7f2e05240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="189" name="test_pymess_E_trans[pymess_lrnm-1-1-1000]" time="0.0009465217590332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:189: &lt;py._xmlgen.raw object at 0x7fc7f2e05d30&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="189" name="test_pymess_E_trans[pymess_lrnm-1-2-1000]" time="0.000835418701171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:189: &lt;py._xmlgen.raw object at 0x7fc7f2dfd278&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="189" name="test_pymess_E_trans[pymess_lrnm-2-1-1000]" time="0.0007078647613525391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:189: &lt;py._xmlgen.raw object at 0x7fc7f2df9b70&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="189" name="test_pymess_E_trans[pymess_lrnm-2-2-1000]" time="0.0005195140838623047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:189: &lt;py._xmlgen.raw object at 0x7fc7f2e529e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[False-1-1-10]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7fc7f2de7eb8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[False-1-1-100]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7fc7fc862d68&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[False-1-2-10]" time="0.0005083084106445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7fc7f2e05390&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[False-1-2-100]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7fc7f2e054a8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[False-2-1-10]" time="0.0008802413940429688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7fc7f2e0b390&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[False-2-1-100]" time="0.0005166530609130859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7fc7f2e05860&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[False-2-2-10]" time="0.0005183219909667969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7fc7fca8e2b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[False-2-2-100]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7fc7fca952b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[True-1-1-10]" time="0.0005555152893066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7fc7f2defb38&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[True-1-1-100]" time="0.0004949569702148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7fc7fc933320&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[True-1-2-10]" time="0.0005357265472412109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7fc7f2dfd828&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[True-1-2-100]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7fc7f2e0b198&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[True-2-1-10]" time="0.0009336471557617188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7fc7f2e0b9b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[True-2-1-100]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7fc7f2dfd5f8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[True-2-2-10]" time="0.0004899501800537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7fc7fc926390&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[True-2-2-100]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7fc7f2e62e48&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[False-1-1-10]" time="0.000530242919921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7fc7fc915828&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[False-1-1-100]" time="0.0004858970642089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7fc7f2e05320&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[False-1-2-10]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7fc7f2e0bac8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[False-1-2-100]" time="0.0005385875701904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7fc7f2e0b4e0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[False-2-1-10]" time="0.0013151168823242188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7fc7f2e0bfd0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[False-2-1-100]" time="0.0005307197570800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7fc7f2e5bcc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[False-2-2-10]" time="0.0005450248718261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7fc7f2e0bcf8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[False-2-2-100]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7fc7f2e0b1d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[True-1-1-10]" time="0.0005347728729248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7fc7fc86c4a8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[True-1-1-100]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7fc7f2e058d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[True-1-2-10]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7fc7f2dfd5f8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[True-1-2-100]" time="0.0005464553833007812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7fc7f2df9080&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[True-2-1-10]" time="0.0005230903625488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7fc7f2df92e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[True-2-1-100]" time="0.0008592605590820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7fc7f2df90f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[True-2-2-10]" time="0.0005364418029785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7fc7f2dfd6a0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[True-2-2-100]" time="0.0005369186401367188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7fc7f2e05f98&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[False-1-1-10]" time="0.0005071163177490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7fc7fc933320&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[False-1-1-100]" time="0.0005235671997070312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7fc7f2e0b710&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[False-1-2-10]" time="0.00048160552978515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7fc7fc926438&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[False-1-2-100]" time="0.00048041343688964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7fc7fc9459e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[False-2-1-10]" time="0.0005297660827636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7fc7f2defbe0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[False-2-1-100]" time="0.00055694580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7fc7fca8ec88&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[False-2-2-10]" time="0.0005576610565185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7fc7fc945470&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[False-2-2-100]" time="0.0004975795745849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7fc7f2e0ba20&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[True-1-1-10]" time="0.0005204677581787109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7fc7f2e0b358&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[True-1-1-100]" time="0.0006206035614013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7fc7f2e05320&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[True-1-2-10]" time="0.0005257129669189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7fc7f2e05940&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[True-1-2-100]" time="0.0005407333374023438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7fc7f2df90f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[True-2-1-10]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7fc7f2e11198&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[True-2-1-100]" time="0.0008716583251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7fc7f2e116d8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[True-2-2-10]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7fc7f2dfd7f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[True-2-2-100]" time="0.0005123615264892578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7fc7f2e05d30&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[False-1-1-10]" time="0.0005269050598144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7fc7fc937828&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[False-1-1-100]" time="0.0005593299865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7fc7f2e0b4a8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[False-1-2-10]" time="0.0005452632904052734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7fc7fc8692b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[False-1-2-100]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7fc7f2deff98&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[False-2-1-10]" time="0.0005147457122802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7fc7f2e111d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[False-2-1-100]" time="0.0008628368377685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7fc7f2e11c18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[False-2-2-10]" time="0.0005033016204833984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7fc7fc926438&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[False-2-2-100]" time="0.0005340576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7fc7f2e0b358&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[True-1-1-10]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7fc7fc937dd8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[True-1-1-100]" time="0.0005123615264892578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7fc7f2e05be0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[True-1-2-10]" time="0.0005345344543457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7fc7fc86bbe0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[True-1-2-100]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7fc7f2e118d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[True-2-1-10]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7fc7f2e11438&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[True-2-1-100]" time="0.0009136199951171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7fc7f2e1c278&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[True-2-2-10]" time="0.0005209445953369141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7fc7f2e11da0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[True-2-2-100]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7fc7fc86bc88&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="48" name="test_generic_solvers[generic_lgmres]" time="0.0006396770477294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:48: &lt;py._xmlgen.raw object at 0x7fc7f2e05940&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="48" name="test_generic_solvers[generic_least_squares_lsqr]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:48: &lt;py._xmlgen.raw object at 0x7fc7f2e0bac8&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="48" name="test_generic_solvers[generic_least_squares_lsmr]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:48: &lt;py._xmlgen.raw object at 0x7fc7fc85afd0&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="55" name="test_numpy_dense_solvers" time="0.00048041343688964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:55: &lt;py._xmlgen.raw object at 0x7fc7fc945b00&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[generic_least_squares_lsqr]" time="0.0005171298980712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7fc7f2e1c0b8&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[scipy_least_squares_lsmr]" time="0.0008792877197265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7fc7f2e1c8d0&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[scipy_spsolve]" time="0.0005240440368652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7fc7fc85a898&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[scipy_lgmres]" time="0.0005068778991699219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7fc7f2e0b668&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[scipy_bicgstab_spilu]" time="0.0005438327789306641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7fc7f2dfd860&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[scipy_least_squares_lsqr]" time="0.0005276203155517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7fc7f2e05f98&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[pyamg_rs]" time="0.0005612373352050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7fc7f2e117b8&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[pyamg_solve]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7fc7f2e1c5c0&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[generic_lgmres]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7fc7f2e1c320&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[generic_least_squares_lsmr]" time="0.0008580684661865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7fc7f2e1cef0&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[pyamg_sa]" time="0.0005545616149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7fc7f2e1c470&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[scipy_bicgstab]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7fc7fc9dca58&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[1-1-100]" time="0.0006296634674072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7fc7f2e111d0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[1-1-1000]" time="0.0005371570587158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7fc7f2dfd7f0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[1-10-100]" time="0.0005228519439697266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7fc7f2e0b780&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[1-10-1000]" time="0.0004956722259521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7fc7fc85ae80&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[1-20-100]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7fc7f2e22048&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[1-20-1000]" time="0.0010066032409667969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7fc7f2e22588&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[2-1-100]" time="0.0005221366882324219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7fc7fc933320&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[2-1-1000]" time="0.0005195140838623047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7fc7fc89e518&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[2-10-100]" time="0.0005092620849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7fc7f2e05978&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[2-10-1000]" time="0.0005037784576416016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7fc7f2e11f28&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[2-20-100]" time="0.000530242919921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7fc7f2e1c940&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[2-20-1000]" time="0.0005340576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7fc7f2e1ca90&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[1-1-100]" time="0.0005292892456054688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7fc7f2e22080&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[1-1-1000]" time="0.0008866786956787109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7fc7f2e22ba8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[1-10-100]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7fc7f2df9c18&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[1-10-1000]" time="0.0005502700805664062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7fc7f2e11f28&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[1-20-100]" time="0.0005156993865966797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7fc7f2dfdac8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[1-20-1000]" time="0.0005397796630859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7fc7f2e0b7b8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[2-1-100]" time="0.0005664825439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7fc7fc8690f0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[2-1-1000]" time="0.0005106925964355469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7fc7f2e22898&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[2-10-100]" time="0.0005500316619873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7fc7f2e222e8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[2-10-1000]" time="0.0009217262268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7fc7f2da8208&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[2-20-100]" time="0.0005173683166503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7fc7f2e22748&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[2-20-1000]" time="0.0004956722259521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7fc7fc812208&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[1-1-100]" time="0.0005006790161132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7fc7fc85a898&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[1-1-1000]" time="0.0005242824554443359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7fc7f2dfd470&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[1-10-100]" time="0.0005304813385009766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7fc7f2e11898&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[1-10-1000]" time="0.0015385150909423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7fc7f2e1c4e0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[1-20-100]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7fc7f2da8390&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[1-20-1000]" time="0.0009489059448242188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7fc7f2da8828&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[2-1-100]" time="0.0005154609680175781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7fc7fc817fd0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[2-1-1000]" time="0.0005323886871337891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7fc7fcb04828&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[2-10-100]" time="0.0005114078521728516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7fc7f2e0b4e0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[2-10-1000]" time="0.0005211830139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7fc7fc8a5ef0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[2-20-100]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7fc7f2e22780&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[2-20-1000]" time="0.0005164146423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7fc7f2e226a0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[1-1-100]" time="0.0005025863647460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7fc7f2da8048&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[1-1-1000]" time="0.0012214183807373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7fc7f2da8e48&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[1-10-100]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7fc7fc85a7f0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[1-10-1000]" time="0.0005104541778564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7fc7f2e05978&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[1-20-100]" time="0.00057220458984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7fc7f2da8898&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[1-20-1000]" time="0.0005545616149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7fc7f2da8978&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[2-1-100]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7fc7f2e22a58&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[2-1-1000]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7fc7f2e22160&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[2-10-100]" time="0.0006108283996582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7fc7f2e1c4e0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[2-10-1000]" time="0.0005254745483398438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7fc7f2e11400&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[2-20-100]" time="0.0008745193481445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7fc7f2e1ceb8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[2-20-1000]" time="0.0005519390106201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7fc7f2e22940&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="34" name="test_to_matrix_NumpyMatrixOperator" time="0.0006561279296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:34: &lt;py._xmlgen.raw object at 0x7fc7f2da8b38&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="45" name="test_to_matrix_BlockOperator" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:45: &lt;py._xmlgen.raw object at 0x7fc7f2da8c18&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="68" name="test_to_matrix_BlockDiagonalOperator" time="0.000514984130859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:68: &lt;py._xmlgen.raw object at 0x7fc7fc89e208&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="86" name="test_to_matrix_AdjointOperator" time="0.0005168914794921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:86: &lt;py._xmlgen.raw object at 0x7fc7fc869c18&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="127" name="test_to_matrix_ComponentProjection" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:127: &lt;py._xmlgen.raw object at 0x7fc7f2e118d0&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="138" name="test_to_matrix_Concatenation" time="0.0005538463592529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:138: &lt;py._xmlgen.raw object at 0x7fc7f2e529b0&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="165" name="test_to_matrix_IdentityOperator" time="0.0008037090301513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2de7da0&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="173" name="test_to_matrix_LincombOperator" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:173: &lt;py._xmlgen.raw object at 0x7fc7fc8a5eb8&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="202" name="test_to_matrix_VectorArrayOperator" time="0.0005562305450439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:202: &lt;py._xmlgen.raw object at 0x7fc7fc894e80&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="214" name="test_to_matrix_ZeroOperator" time="0.0005369186401367188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:214: &lt;py._xmlgen.raw object at 0x7fc7f2da8fd0&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestGaussQuadrature" file="src/pymortests/tools.py" line="27" name="test_polynomials" time="0.0006928443908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:27: &lt;py._xmlgen.raw object at 0x7fc7fc8172b0&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestGaussQuadrature" file="src/pymortests/tools.py" line="38" name="test_other_functions" time="0.0005147457122802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:38: &lt;py._xmlgen.raw object at 0x7fc7f2e225c0&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestGaussQuadrature" file="src/pymortests/tools.py" line="46" name="test_weights" time="0.00048232078552246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:46: &lt;py._xmlgen.raw object at 0x7fc7f2df94e0&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestGaussQuadrature" file="src/pymortests/tools.py" line="51" name="test_points" time="0.0005109310150146484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:51: &lt;py._xmlgen.raw object at 0x7fc7f2db44e0&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestCmp" file="src/pymortests/tools.py" line="61" name="test_props" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:61: &lt;py._xmlgen.raw object at 0x7fc7f2db49e8&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;0]" time="0.0005161762237548828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fc7f2e222e8&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;1]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fc7f2da8a58&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;2]" time="0.0005371570587158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fc7f2e05940&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;3]" time="0.0005154609680175781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fc7fc82be80&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;4]" time="0.0005464553833007812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fc7f2e11ef0&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;5]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fc7f2db4198&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;6]" time="0.0005128383636474609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fc7f2db4cc0&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;7]" time="0.0008704662322998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fc7f2db8240&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;8]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fc7f2db4240&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;9]" time="0.0005557537078857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fc7fc8a55c0&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;10]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fc7fc82be80&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;11]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fc7fc89e518&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;12]" time="0.0005247592926025391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fc7f2da8400&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;13]" time="0.0004994869232177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fc7f2e22ba8&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;14]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fc7f2db8080&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;15]" time="0.0008511543273925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fc7f2db8860&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;16]" time="0.0005199909210205078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fc7f2da81d0&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;17]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fc7fc7e5198&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;18]" time="0.000522613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fc7fc8892e8&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;19]" time="0.0005316734313964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fc7f2e116d8&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;20]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fc7f2db44a8&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;21]" time="0.0005300045013427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fc7f2de7e48&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;22]" time="0.0005176067352294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fc7f2db84e0&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;23]" time="0.0008649826049804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7fc7f2db8e80&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestTiming" file="src/pymortests/tools.py" line="102" name="testTimingContext" time="0.0005156993865966797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:102: &lt;py._xmlgen.raw object at 0x7fc7f2db8048&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestTiming" file="src/pymortests/tools.py" line="112" name="testTimingDecorator" time="0.0005414485931396484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:112: &lt;py._xmlgen.raw object at 0x7fc7fc8a55c0&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestTiming" file="src/pymortests/tools.py" line="115" name="testTiming" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:115: &lt;py._xmlgen.raw object at 0x7fc7f2db4e10&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="123" name="testDeprecated" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:123: &lt;py._xmlgen.raw object at 0x7fc7f2e11da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;0]" time="0.0006282329559326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7fc7e5d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;1]" time="0.000560760498046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2e22ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;2]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2e1cb38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;3]" time="0.0008542537689208984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2dbe518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;4]" time="0.00048470497131347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7fc7e5278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;5]" time="0.0005238056182861328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7fc89e518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;6]" time="0.0004940032958984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7fc894e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;7]" time="0.0005266666412353516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2db4f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;8]" time="0.0005097389221191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2db8f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;9]" time="0.0004975795745849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2db8be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;10]" time="0.0005409717559814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2dbe3c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;11]" time="0.0009107589721679688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2dbeb38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;12]" time="0.0005209445953369141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2db8ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;13]" time="0.0005271434783935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2db4048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;14]" time="0.000514984130859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7fc8895f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;15]" time="0.0005190372467041016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7fc7e5080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;16]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7fb77d128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;17]" time="0.0005078315734863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2dbe7f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;18]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2dbe0b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;19]" time="0.0008993148803710938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2dc6198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;20]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2dbe9e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;21]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2da8940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;22]" time="0.0005376338958740234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7fb77d7b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;23]" time="0.0005180835723876953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7fc89e470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;24]" time="0.0005390644073486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2db4e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;25]" time="0.0005183219909667969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2db88d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;26]" time="0.0005271434783935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2dc62e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;0]" time="0.0009570121765136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2dc67b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;1]" time="0.0005242824554443359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2db4358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;2]" time="0.00054168701171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2e11c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;3]" time="0.0005080699920654297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7fc7e5f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;4]" time="0.0005292892456054688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7fb77db00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;5]" time="0.0005369186401367188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2dbe828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;6]" time="0.0004947185516357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2dbe278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;7]" time="0.0005440711975097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2dc6208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;8]" time="0.0008983612060546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2dc6dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;9]" time="0.00052642822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2dbe5f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;10]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7fb77df98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;11]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7fc7e5400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;12]" time="0.0005309581756591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2db45f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;13]" time="0.0005371570587158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2db86a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;14]" time="0.0005395412445068359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2dc6438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;15]" time="0.0006222724914550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2dc6550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;16]" time="0.001219034194946289"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2dcc438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;17]" time="0.0005393028259277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7fc8895f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;18]" time="0.0005171298980712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7fb77d860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;19]" time="0.0005156993865966797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2dc6588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;20]" time="0.0005357265472412109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2dc69e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;21]" time="0.0004906654357910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2dbed68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;22]" time="0.0005061626434326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2dbe4e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;23]" time="0.000492095947265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2db8240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;24]" time="0.0005581378936767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2db4748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;25]" time="0.0008473396301269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2db46d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;26]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2db8f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;0]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2dbe240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;1]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2dc6dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;2]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2dc6208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;3]" time="0.0004963874816894531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7fc89e518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;4]" time="0.0005326271057128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7fb787b00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;5]" time="0.0005278587341308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2e52978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;6]" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7fc9dcd30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;7]" time="0.0005166530609130859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7fb787518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;8]" time="0.000499725341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7fb77d860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;9]" time="0.0005145072937011719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2dc6c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;10]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2dbed68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;11]" time="0.0005533695220947266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2db88d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;12]" time="0.0005085468292236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2db4860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;13]" time="0.0005166530609130859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2dcc2e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;14]" time="0.0008924007415771484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2dccb00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;15]" time="0.0005097389221191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2db86a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;16]" time="0.0005173683166503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2dbe898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;17]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2dc6048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;18]" time="0.0005028247833251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7fc889080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;19]" time="0.0005617141723632812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7fb7875c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;20]" time="0.0005257129669189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2dcc7b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;21]" time="0.0004961490631103516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2dcc048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;22]" time="0.0008752346038818359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2dd4080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;23]" time="0.0005095005035400391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2dccef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;24]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2dcc6d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;25]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2df9c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;26]" time="0.0005304813385009766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7fc7f2dc6208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;0]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2dbe898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;1]" time="0.0005156993865966797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7fb78fef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;2]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2dd4198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;3]" time="0.0008578300476074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2dd46a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;4]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2db8048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;5]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2da8c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;6]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2dc62b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;7]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7fb787278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;8]" time="0.0005934238433837891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2dcc518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;9]" time="0.0006444454193115234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7fb797278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;10]" time="0.00051116943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2dd41d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;11]" time="0.0008606910705566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2dd4cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;12]" time="0.0004954338073730469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2dcc2b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;13]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7fb787ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;14]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2dc6780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;15]" time="0.0005307197570800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2db8668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;16]" time="0.0005216598510742188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7fb78f5c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;17]" time="0.0004899501800537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2dd4320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;18]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2dd4438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;19]" time="0.0008604526519775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2ddb320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;20]" time="0.0005314350128173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2dd4a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;21]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7fb78f668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;22]" time="0.0005307197570800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2db8048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;23]" time="0.0004775524139404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7fb77d860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;24]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2df9c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;25]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2dcc8d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;26]" time="0.0005540847778320312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2ddb128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;0]" time="0.0011241436004638672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2ddb940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;1]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2dcc0f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;2]" time="0.0005202293395996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2dc69e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;3]" time="0.0004966259002685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2db8048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;4]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7fb30d320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;5]" time="0.0005292892456054688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2dd4e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;6]" time="0.0005826950073242188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2ddb9e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;7]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2ddb400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;8]" time="0.0008935928344726562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2ddbf60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;9]" time="0.0005235671997070312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2ddb5f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;10]" time="0.0005555152893066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2dd4b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;11]" time="0.0005078315734863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7fb78f518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;12]" time="0.0005099773406982422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2db8e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;13]" time="0.0005104541778564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2df9fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;14]" time="0.0005662441253662109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2dcc860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;15]" time="0.0005445480346679688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2de2080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;16]" time="0.0009601116180419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2de25c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;17]" time="0.0005230903625488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2dcc978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;18]" time="0.0005784034729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7fc7e54e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;19]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7fb30d710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;20]" time="0.0005347728729248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2dd41d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;21]" time="0.0005457401275634766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2ddb9e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;22]" time="0.0005335807800292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2ddb390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;23]" time="0.0005834102630615234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2de20b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;24]" time="0.0009446144104003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2de2be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;25]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2ddb7b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;26]" time="0.0005280971527099609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7fb78fe48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;0]" time="0.0005235671997070312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7fc7e5e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;1]" time="0.0005702972412109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2dc68d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;2]" time="0.0005242824554443359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7fb315c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;3]" time="0.0005664825439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2de2240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;4]" time="0.0005247592926025391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2de2358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;5]" time="0.001276254653930664"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2d6b240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;6]" time="0.0005071163177490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2db8ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;7]" time="0.0005660057067871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7fb31e128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;8]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2de29b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;9]" time="0.0005550384521484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2de26d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;10]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2ddb710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;11]" time="0.0005230903625488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2ddbf28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;12]" time="0.0005028247833251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2dd4b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;13]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2e52a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;14]" time="0.0008990764617919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2dd4048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;15]" time="0.0005915164947509766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2ddb7b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;16]" time="0.0005116462707519531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2de2940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;17]" time="0.0005233287811279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2de2080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;18]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7fb31eef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;19]" time="0.0005946159362792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7fb30db00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;20]" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2dbe6a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;21]" time="0.0005409717559814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2db4668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;22]" time="0.0007612705230712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2db4358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;23]" time="0.0005116462707519531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2dc6780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;24]" time="0.0005125999450683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7fb31ea58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;25]" time="0.0004899501800537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7fb315f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;26]" time="0.0005087852478027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7fc7f2de2f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;0]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2ddb7b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;1]" time="0.0005247592926025391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2dd4048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;2]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d6b748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;3]" time="0.0005037784576416016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d6bc88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;4]" time="0.0005061626434326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2ddbd68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;5]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2de2390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;6]" time="0.0005314350128173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2dbe6a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;7]" time="0.0005197525024414062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7fb31efd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;8]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7fb2a7278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;9]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d6b470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;10]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d72048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;11]" time="0.0009126663208007812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d72588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;12]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d6b780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;13]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2e1c278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;14]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7fb30d668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;15]" time="0.0005280971527099609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2de2d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;16]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7fb0eb160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;17]" time="0.0005106925964355469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2dd46a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;18]" time="0.0004954338073730469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d72048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;19]" time="0.0009353160858154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d72ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;20]" time="0.0005052089691162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7fb0eb160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;21]" time="0.0005583763122558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2de2048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;22]" time="0.0005145072937011719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7fb31efd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;23]" time="0.0004980564117431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2e1c2b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;24]" time="0.0006237030029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d6b5c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;25]" time="0.00052642822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d726d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;26]" time="0.0005548000335693359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d72358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;0]" time="0.0009481906890869141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d78208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;1]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d72080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;2]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2db4390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;3]" time="0.0005245208740234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2e1cf28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;4]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7fb31ee48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;5]" time="0.0005075931549072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2de2198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;6]" time="0.0005509853363037109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7fb0eb6a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;7]" time="0.0005624294281005859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d78390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;8]" time="0.0008704662322998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d78828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;9]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7fb0eba90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;10]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2de27b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;11]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2dc63c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;12]" time="0.0005278587341308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2db4390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;13]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d726d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;14]" time="0.0005500316619873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d72940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;15]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d78048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;16]" time="0.000934600830078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d78e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;17]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d78048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;18]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d72240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;19]" time="0.0005376338958740234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7fb0ff940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;20]" time="0.0005133152008056641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d6be10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;21]" time="0.0005583763122558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7fb31e7b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;22]" time="0.0005598068237304688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2de29e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;23]" time="0.0005609989166259766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2ddbb70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;24]" time="0.0008654594421386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d7f4a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;25]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7fb30d908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;26]" time="0.0005424022674560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7fb2a71d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;0]" time="0.0005445480346679688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7fb0ff358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;1]" time="0.0005333423614501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d72978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;2]" time="0.0005185604095458984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d784e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;3]" time="0.0005106925964355469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d78be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;4]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d7f2e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;5]" time="0.0009319782257080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d7fac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;6]" time="0.0005097389221191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d78550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;7]" time="0.0004992485046386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7fb0ff160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;8]" time="0.0005438327789306641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d6b0f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;9]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7fb1074a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;10]" time="0.0005211830139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7fb0eba90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;11]" time="0.0005095005035400391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d7fc50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;12]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d7f630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;13]" time="0.0009255409240722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d86128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;14]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d7ff98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;15]" time="0.0005197525024414062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d7f0b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;16]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7fb107940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;17]" time="0.0005314350128173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7fb31e7b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;18]" time="0.0005731582641601562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7fb0ff940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;19]" time="0.000522613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d78ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;20]" time="0.0005767345428466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d86240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;21]" time="0.00128173828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d86748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;22]" time="0.0005059242248535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7fb107e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;23]" time="0.0005514621734619141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7fb30d668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;24]" time="0.0004911422729492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d7f978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;25]" time="0.0005106925964355469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d7fe10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;26]" time="0.0005054473876953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7fc7f2d78eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;0]" time="0.0005254745483398438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d725f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;1]" time="0.0005123615264892578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2db8e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;2]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d6bc88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;3]" time="0.0008783340454101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d72978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;4]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d78240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;5]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d7f710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;6]" time="0.0004923343658447266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d7f2e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;7]" time="0.0005247592926025391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2de2c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;8]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2db48d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;9]" time="0.0005619525909423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d6ba58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;10]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2dd49b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;11]" time="0.00048470497131347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2dd4048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;12]" time="0.0005028247833251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d6ba58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;13]" time="0.0005140304565429688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7fb107e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;14]" time="0.0005304813385009766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7fc8af0b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;15]" time="0.0005881786346435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d7f940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;16]" time="0.0005433559417724609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d78208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;17]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d72978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;18]" time="0.0005104541778564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d860f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;19]" time="0.0009019374847412109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d86e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;20]" time="0.0005085468292236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d78c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;21]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d7f7f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;22]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7fc8af9e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;23]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7fb31e5c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;24]" time="0.0005621910095214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d6b2e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;25]" time="0.0005209445953369141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d86940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;26]" time="0.0005297660827636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d862b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;0]" time="0.0009181499481201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d8f390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;1]" time="0.0005040168762207031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d86908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;2]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d6bd68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;3]" time="0.000499725341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7fb10f358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;4]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7fb0ebdd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;5]" time="0.0005612373352050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d7fb00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;6]" time="0.0004932880401611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d787f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;7]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d8f1d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;8]" time="0.0009608268737792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d8f9b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;9]" time="0.0005176067352294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7fb30d7b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;10]" time="0.0005450248718261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7fb0eb7f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;11]" time="0.0005042552947998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7fb1079e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;12]" time="0.0005538463592529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7fc8b5400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;13]" time="0.0005469322204589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d86c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;14]" time="0.0005145072937011719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d8fac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;15]" time="0.0005373954772949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d8f4e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;16]" time="0.0009274482727050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d8ffd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;17]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d8f780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;18]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d862e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;19]" time="0.0005457401275634766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7fc8b5940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;20]" time="0.0007102489471435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d6bc88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;21]" time="0.0005483627319335938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7fc8af0b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;22]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d7feb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;23]" time="0.0005412101745605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d97128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;24]" time="0.0009608268737792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d97630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;25]" time="0.0005166530609130859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d7f4e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;26]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7fb107e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;0]" time="0.0005266666412353516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7fc8b57f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;1]" time="0.0004711151123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d86470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;2]" time="0.0005128383636474609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d8f7f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;3]" time="0.0005624294281005859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d8f4a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;4]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d97160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;5]" time="0.0009529590606689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d97c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;6]" time="0.000492095947265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d8f6d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;7]" time="0.000514984130859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7fb797320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;8]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7fc8b5fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;9]" time="0.0005145072937011719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2db48d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;10]" time="0.0005068778991699219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d7feb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;11]" time="0.0005495548248291016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d972b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;12]" time="0.0005235671997070312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d973c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;13]" time="0.0008940696716308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d9d2b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;14]" time="0.0004949569702148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d97748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;15]" time="0.0005843639373779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d72748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;16]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7fb107dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;17]" time="0.0005176067352294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7fc7fb208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;18]" time="0.0005488395690917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2dccda0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;19]" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d8f828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;20]" time="0.0004992485046386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d9d0b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;21]" time="0.0009112358093261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d9d8d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;22]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d869e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;23]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7fc8b54a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;24]" time="0.0005393028259277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7fc7fb400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;25]" time="0.0005640983581542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2de2c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;26]" time="0.0005371570587158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7fc7f2d97d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;0]" time="0.0005450248718261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d9d5c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;1]" time="0.00051116943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d9d080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;2]" time="0.0010068416595458984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d9def0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;3]" time="0.0005135536193847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d9d550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;4]" time="0.0005385875701904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d78eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;5]" time="0.0005443096160888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d97d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;6]" time="0.0006368160247802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d7fac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;7]" time="0.0006000995635986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7fb0ebdd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;8]" time="0.0005238056182861328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d8f5f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;9]" time="0.0004923343658447266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7fb0ff2b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;10]" time="0.0012450218200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2da3550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;11]" time="0.0005309581756591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7fc7fbe80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;12]" time="0.0005233287811279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7fb475dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;13]" time="0.0004909038543701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d9d518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;14]" time="0.0005509853363037109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d9df98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;15]" time="0.0005202293395996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d97ac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;16]" time="0.0005521774291992188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7fb0ffe80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;17]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d72588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;18]" time="0.00052642822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d86320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;19]" time="0.0008499622344970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d86e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;20]" time="0.0004937648773193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7fb0ff748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;21]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d97d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;22]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d9dc50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;23]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7fb4806a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;24]" time="0.000537872314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d7fac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;25]" time="0.0005412101745605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7fc7fb6a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;26]" time="0.0005517005920410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7fc899dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;0]" time="0.0008912086486816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7fb78f1d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;1]" time="0.0005507469177246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7fc8af898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;2]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7fb4800b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;3]" time="0.0005104541778564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d9d710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;4]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d97a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;5]" time="0.0005364418029785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d8fd30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;6]" time="0.0004892349243164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2da36d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;7]" time="0.0005257129669189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2da3a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;8]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2da3f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;9]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d72588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;10]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d979e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;11]" time="0.0005075931549072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d9d390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;12]" time="0.0005295276641845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7fb31e5c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;13]" time="0.0004954338073730469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7fb480748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;14]" time="0.0005042552947998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7fc7fb6a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;15]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d2e358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;16]" time="0.0008418560028076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d2e898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;17]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7fb480b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;18]" time="0.0005147457122802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2db8e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;19]" time="0.0004906654357910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d97668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;20]" time="0.0005228519439697266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d8fd30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;21]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2da30b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;22]" time="0.0005097389221191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d2e908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;23]" time="0.0005331039428710938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d2e1d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;24]" time="0.0008969306945800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d2eeb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;25]" time="0.0005338191986083984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d2e208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;26]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2da3b00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;0]" time="0.0005340576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7fb4877f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;1]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d97a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;2]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d9dd30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;3]" time="0.0005300045013427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7fb480be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;4]" time="0.0005328655242919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7fb78fe48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;5]" time="0.0008695125579833984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d29518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;6]" time="0.0005316734313964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7fc7fba90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;7]" time="0.0005207061767578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d979e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;8]" time="0.0005078315734863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d6bcc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;9]" time="0.0005099773406982422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2da3a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;10]" time="0.0004928112030029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d2e390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;11]" time="0.0004837512969970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d2ec18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;12]" time="0.0005071163177490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d29390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;13]" time="0.0009701251983642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d29b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;14]" time="0.0005116462707519531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d2ef98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;15]" time="0.000553131103515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7fb487dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;16]" time="0.0005171298980712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d97668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;17]" time="0.0005719661712646484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7fb48f748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;18]" time="0.0005259513854980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7fc8af898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;19]" time="0.0005109310150146484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d297f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;20]" time="0.0005006790161132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d291d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;21]" time="0.0009982585906982422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d3b198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;22]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d29860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;23]" time="0.0005123615264892578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7fb480b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;24]" time="0.0006115436553955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7fb48f9e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;25]" time="0.0005171298980712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7f2d97c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;26]" time="0.0005421638488769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7fc7fb487e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;0]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d2ec18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;1]" time="0.0005459785461425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d3b2e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;2]" time="0.0011856555938720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d3b7b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;3]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2da3a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;4]" time="0.0004925727844238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7fb487d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;5]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7fb475a90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;6]" time="0.0005331039428710938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7fb48fb38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;7]" time="0.0004892349243164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d29940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;8]" time="0.000522613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d290b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;9]" time="0.0005536079406738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d3b208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;10]" time="0.0008804798126220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d3bdd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;11]" time="0.0005230903625488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d297b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;12]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7fb48fc88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;13]" time="0.0004925727844238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d979e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;14]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2da3828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;15]" time="0.0005385875701904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d2e710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;16]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d3b438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;17]" time="0.0005435943603515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d3b550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;18]" time="0.0009303092956542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d40438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;19]" time="0.0005221366882324219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d3b9b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;20]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7fb015a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;21]" time="0.0005135536193847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7fb487940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;22]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d9df98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;23]" time="0.0004892349243164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7fb48f160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;24]" time="0.0005230903625488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d29d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;25]" time="0.0006003379821777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d40240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;26]" time="0.0013148784637451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d40a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;0]" time="0.0005688667297363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d9dc88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;1]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7fb015d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;2]" time="0.0005657672882080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d3bc88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;3]" time="0.000553131103515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d3bba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;4]" time="0.000545501708984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d29cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;5]" time="0.0005178451538085938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d2e1d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;6]" time="0.0005397796630859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2da3400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;7]" time="0.0005388259887695312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2da3278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;8]" time="0.0009694099426269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2da3e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;9]" time="0.0005300045013427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d2e1d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;10]" time="0.0004940032958984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d29eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;11]" time="0.0005204677581787109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2de2e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;12]" time="0.0005266666412353516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d3b940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;13]" time="0.0005640983581542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7fb015780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;14]" time="0.0005192756652832031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7fb48f160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;15]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2dccda0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;16]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d8fa90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;17]" time="0.0005257129669189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7fb480f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;18]" time="0.0005905628204345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d3b160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;19]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7fb01ef60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;20]" time="0.0005486011505126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d29d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;21]" time="0.0005383491516113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d2ea90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;22]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d40ac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;23]" time="0.0005147457122802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d40400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;24]" time="0.0009009838104248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d4b160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;25]" time="0.0005300045013427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d40208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;26]" time="0.0005276203155517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d2eeb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;0]" time="0.0005977153778076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d29da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;1]" time="0.000530242919921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d78eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;2]" time="0.0005393028259277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7fb0156d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;3]" time="0.0005543231964111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7fb480f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;4]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d8fa90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;5]" time="0.0011453628540039062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d4b6a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;6]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7fafa7780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;7]" time="0.0005426406860351562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d3b898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;8]" time="0.0005133152008056641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7fb01e978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;9]" time="0.0005340576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d29c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;10]" time="0.0004949569702148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d40c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;11]" time="0.0005466938018798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d40c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;12]" time="0.000522613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d4b550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;13]" time="0.0008804798126220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d4bcc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;14]" time="0.0005350112915039062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d2e470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;15]" time="0.0005979537963867188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d29da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;16]" time="0.0004925727844238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d3bc18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;17]" time="0.0005090236663818359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7fafa7eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;18]" time="0.0005197525024414062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d97c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;19]" time="0.0005457401275634766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d4b978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;20]" time="0.0004837512969970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d4b240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;21]" time="0.0008816719055175781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d51320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;22]" time="0.000507354736328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d4b828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;23]" time="0.0005555152893066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d97630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;24]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7fb015e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;25]" time="0.0004916191101074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d3b8d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;26]" time="0.0005350112915039062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7fc7f2d2e1d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;0]" time="0.0004911422729492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d40278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;1]" time="0.0005035400390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d51128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;2]" time="0.0011227130889892578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d51940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;3]" time="0.0005445480346679688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d40278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;4]" time="0.0005500316619873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d29eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;5]" time="0.0005357265472412109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7fb01e6d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;6]" time="0.0005316734313964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7fafa7198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;7]" time="0.0005445480346679688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d4b518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;8]" time="0.0005230903625488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d519e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;9]" time="0.0005128383636474609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d51400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;10]" time="0.0011463165283203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d51f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;11]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d515f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;12]" time="0.0005240440368652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d4bb70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;13]" time="0.00051116943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d4b898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;14]" time="0.0005347728729248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7fb01ec18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;15]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d2e908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;16]" time="0.0005040168762207031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d40e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;17]" time="0.0005164146423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d59080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;18]" time="0.0009171962738037109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d595c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;19]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d40208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;20]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7fb01e630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;21]" time="0.0005297660827636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7fafa72e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;22]" time="0.0005419254302978516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d4b550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;23]" time="0.0005450248718261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d516d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;24]" time="0.0005514621734619141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d51390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;25]" time="0.0005199909210205078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d590b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;26]" time="0.0008912086486816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d59be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;0]" time="0.0005176067352294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d517b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;1]" time="0.0005261898040771484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d4bb70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;2]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7fafa7d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;3]" time="0.0005459785461425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d2e908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;4]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d29358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;5]" time="0.0005121231079101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d59240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;6]" time="0.0005285739898681641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d59358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;7]" time="0.0009245872497558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d5e240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;8]" time="0.0004906654357910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d59080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;9]" time="0.0005033016204833984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d408d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;10]" time="0.0005331039428710938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d2e898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;11]" time="0.0004956722259521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7fafa7780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;12]" time="0.0004968643188476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7fb65df60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;13]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d514e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;14]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d5e048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;15]" time="0.0014734268188476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d5e860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;16]" time="0.0005381107330322266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7fb01ea20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;17]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7fb655d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;18]" time="0.0005147457122802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d598d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;19]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d59da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;20]" time="0.0005137920379638672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d516a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;21]" time="0.0005719661712646484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d512e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;22]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d3bfd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;23]" time="0.0005457401275634766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d40828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;24]" time="0.0008871555328369141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d3b518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;25]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7fafaf588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;26]" time="0.0004980564117431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d51b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;0]" time="0.0005247592926025391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d59ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;1]" time="0.0005154609680175781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7fb6668d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;2]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7fb655a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;3]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7fb65dc18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;4]" time="0.0005757808685302734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d5e978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;5]" time="0.0008189678192138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2da3320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;6]" time="0.0005459785461425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7fb01e630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;7]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7fb666240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;8]" time="0.0005152225494384766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d59048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;9]" time="0.0005252361297607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d51470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;10]" time="0.0004932880401611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d4b908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;11]" time="0.0005328655242919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d5e978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;12]" time="0.0004909038543701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d5ed68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;13]" time="0.0005152225494384766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2ce82e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;14]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d3bb70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;15]" time="0.0005896091461181641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d51390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;16]" time="0.0005202293395996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d59fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;17]" time="0.0005292892456054688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d2e908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;18]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7fb5ee2e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;19]" time="0.0004918575286865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7fb65d240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;20]" time="0.0005338191986083984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2ce8668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;21]" time="0.0008664131164550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2ce8ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;22]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7fb5eea20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;23]" time="0.000507354736328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7fb666630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;24]" time="0.0005221366882324219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d59630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;25]" time="0.00048232078552246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d51a90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;26]" time="0.0005259513854980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7fc7f2d5ee48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;0]" time="0.0005145072937011719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2ce8c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;1]" time="0.0005125999450683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2ce84e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;2]" time="0.0009074211120605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2cf0208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;3]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2ce86a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;4]" time="0.0004820823669433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2d5ec18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;5]" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2d40710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;6]" time="0.0005428791046142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2d59c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;7]" time="0.0005640983581542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7fb666630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;8]" time="0.0005214214324951172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7fb5ee828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;9]" time="0.0005896091461181641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2cf0048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;10]" time="0.0008668899536132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2cf0828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;11]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7fb5ee978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;12]" time="0.0004937648773193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2d592b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;13]" time="0.0005035400390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2d51320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;14]" time="0.0005571842193603516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2d5ec18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;15]" time="0.0005006790161132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2ce89b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;16]" time="0.0005309581756591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2ce89e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;17]" time="0.00054168701171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2cf0080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;18]" time="0.0008456707000732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2cf0e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;19]" time="0.0005366802215576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2cf0080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;20]" time="0.0005085468292236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2ce8390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;21]" time="0.0005869865417480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7fae8a8d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;22]" time="0.0005307197570800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2d5eac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;23]" time="0.0005578994750976562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2d2e898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;24]" time="0.0005352497100830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7fb666828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;25]" time="0.0005211830139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7fb5eec18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;26]" time="0.0008575916290283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2cf74a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;0]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7fafaf630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;1]" time="0.0005724430084228516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2d512e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;2]" time="0.0004971027374267578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2d5ea90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;3]" time="0.0005083084106445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2ce8da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;4]" time="0.0005500316619873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2cf04e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;5]" time="0.0004837512969970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2cf0be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;6]" time="0.0005426406860351562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2cf72e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;7]" time="0.0009090900421142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2cf7ac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;8]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2cf0550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;9]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7fae8a438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;10]" time="0.0005474090576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2d4b6d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;11]" time="0.0005099773406982422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2d59f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;12]" time="0.0005939006805419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7fae9c8d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;13]" time="0.00048422813415527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2cf7c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;14]" time="0.0005471706390380859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2cf7630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;15]" time="0.0008907318115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2cfd128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;16]" time="0.0005123615264892578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2cf77f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;17]" time="0.0005154609680175781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7fae9c588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;18]" time="0.0005054473876953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7fb65d240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;19]" time="0.0005817413330078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2d599e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;20]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7fae8a198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;21]" time="0.0005290508270263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2cf0ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;22]" time="0.0005443096160888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2cfd240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;23]" time="0.0009300708770751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2cfd748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;24]" time="0.0005712509155273438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2ce8f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;25]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7fae8a8d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;26]" time="0.0005214214324951172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2d59080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;0]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7fae9c828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;1]" time="0.0004963874816894531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2cf78d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;2]" time="0.0005025863647460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2cf7160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;3]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2cfd278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;4]" time="0.001177072525024414"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2cfdd68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;5]" time="0.0005600452423095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7fb5eec18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;6]" time="0.0005166530609130859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7fae8a780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;7]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2cf7e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;8]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2cf74e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;9]" time="0.0004994869232177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2cf0e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;10]" time="0.0005185604095458984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2ce8940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;11]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2d5e240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;12]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2da3ac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;13]" time="0.0008745193481445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2d5eb70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;14]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2ce8390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;15]" time="0.000492095947265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2cf0978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;16]" time="0.0005195140838623047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2cf7710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;17]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7faea68d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;18]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7fae8a780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;19]" time="0.0005035400390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7fae9c198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;20]" time="0.0005352497100830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2cfd7b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;21]" time="0.0005228519439697266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2d40128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;22]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2d2ec88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;23]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7faea6240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;24]" time="0.0005309581756591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2cf7908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;25]" time="0.0005042552947998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2cf07f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;26]" time="0.0005614757537841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7fc7f2ce8b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cfd7b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0005342960357666016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cfd0f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.0008826255798339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d08470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.0005030632019042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cfd4a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.0005595684051513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2ce82b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.0005328655242919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cf0be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0005214214324951172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cf7160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0005142688751220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d59588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.0005283355712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fae2f438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.0005471706390380859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d08278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.0009369850158691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d089b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.0004887580871582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d59320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.0005156993865966797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cf74a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.0005519390106201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cf0e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.0005290508270263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d4b6d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.0005114078521728516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cfdf60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d08ac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.0005519390106201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d08518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.0008509159088134766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d08fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d087b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.00054931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cfd128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.0005595684051513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2ce8f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.0005135536193847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb61c0f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cf7a90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.000499725341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d59f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d0e128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.0008726119995117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d0e630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7faea6438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.0005207061767578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cf0400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.0004935264587402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb61c828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cfdf28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d08828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.0005476474761962891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d084e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.0005440711975097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d0e160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.0008547306060791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d0ec50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.00048732757568359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d08710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cfd9b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0005364418029785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb61ca20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.0005290508270263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cf78d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.0005424022674560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d59320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d0e2b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d0e3c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.0008599758148193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d152b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d0e780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7faea64e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cf0240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb625630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2ce80b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.0004870891571044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d08630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d150b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.0009286403656005859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d158d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.0005290508270263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cfd128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.000530242919921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb61c978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb6258d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.0005042552947998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5eecc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.0004990100860595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d0ed30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.0005095005035400391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d155c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d15080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.0009412765502929688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d15ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.0004980564117431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d15588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d0efd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7faea6828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.0004982948303222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb625eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5ae2e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.0004911422729492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d08d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d5e6a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.0009431838989257812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d19550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0005028247833251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2ce80b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5eecc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cf78d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d0eda0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.0005314350128173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d15940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.0005550384521484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d15da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.0004932880401611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d19400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.0011527538299560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d19b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.0004889965057373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb625e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5ae390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d159e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.0004966259002685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d158d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.00048422813415527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d0ee10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d08d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cfda90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.0005106925964355469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d5efd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.0008680820465087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cfdb00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.0004971027374267578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d08c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.0005431175231933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d0ecf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d15550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5b7438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5aeac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.0005033016204833984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb625cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d19908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0008187294006347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cf7cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.0004947185516357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5aef60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d156a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.0005362033843994141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d15898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.0005021095275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d0ec18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0005161762237548828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cfdba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d19cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.0005481243133544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2ca60b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.0005223751068115234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2ca65f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.0005376338958740234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d19c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7faea6828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d159e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5b7fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb625c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.000728607177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cf78d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.0005245208740234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2ca6978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.0009062290191650391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2ca6eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2ca6a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.0005078315734863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb61c6d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5b7390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d15ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d08588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.0005271434783935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5c12e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0005373954772949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d19908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.0008184909820556641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cac518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5c1a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.0005173683166503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d0e898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.0005128383636474609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d15278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5b7ac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2ca6ac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.0004820823669433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2ca6c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.0004935264587402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cac3c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.0008676052093505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cacb38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cf7cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5b7c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d0ecf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5c1fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.0005197525024414062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d19c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cac7f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cac0b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.0008652210235595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cb3198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cac6a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.0005791187286376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d19748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.0005238056182861328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5c1eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d15f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb625c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.0005309581756591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2ca6278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.0004870891571044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cb32e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.0008640289306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cb37b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5c9ac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.0004711151123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5aee10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.0005478858947753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d0e898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.0005087852478027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5c1978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cac7f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.0005192756652832031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cac978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.0005085468292236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cb3208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.0008640289306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cb3dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.0004911422729492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cacd68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.0006039142608642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5c1b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d15f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.0005068778991699219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5c9d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.0005021095275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2ca6a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.0004858970642089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cb3438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cb3550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.0008971691131591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cbb438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.0004906654357910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cb39b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0004992485046386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2ce8da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5c9780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d08c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.0004994869232177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d19e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.0005557537078857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cacda0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cbb240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.0008625984191894531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cbba58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d19e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5c1fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.0005173683166503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5b7ac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cf7cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.0005629062652587891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cb3ac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cbbac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.0004899501800537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cbb4a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.0012619495391845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cc10b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d0ec88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.0005216598510742188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5d4f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cbb7b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.0005335807800292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cbb6a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cbb400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cb39e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.0005214214324951172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cac6a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2ca6e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.0008842945098876953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cb37f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cb3940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.0004916191101074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cbb908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5d40f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.0005075931549072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5c1b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.0004858970642089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5c9c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.0005156993865966797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2ca6160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0005176067352294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d19c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5b70f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5c98d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.0004711151123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5dd978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.0005133152008056641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5d40f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.0005381107330322266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cbb780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cb3b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.000518798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d19588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.0005309581756591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cc1240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.0009372234344482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cc1780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cb39e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.0005061626434326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cbb748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.0005202293395996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cbbd30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5c1b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.0005025863647460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d0e630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.0005259513854980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2ca65c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cc1278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.000873565673828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cc1cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.0004982948303222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d0e630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.0005309581756591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5d40f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cbb6d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.0005176067352294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d19588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb567588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cc1978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0005278587341308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cc14e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.0009050369262695312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2ccb320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.0005347728729248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cc1278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.0004956722259521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb567a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.0005621910095214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d19eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cbb5f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5ddcc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.0005476474761962891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2ca6cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.0004975795745849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2ccb128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.0009677410125732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2ccb940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5ddfd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.0005629062652587891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cbb780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d19eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.0005099773406982422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5676d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.0005106925964355469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cc1d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2ccb9e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.000522613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2ccb400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.0009105205535888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2ccbf60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.000530242919921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2ccb5f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.0004994869232177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cc14e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.0005469322204589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb567b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d19eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.0005033016204833984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5d46d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.0005223751068115234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5ddb70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.0005040168762207031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cd1080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.0008428096771240234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cd15c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.0005307197570800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d0e630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.0005033016204833984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cbb668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.0004940032958984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cb3780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.0004899501800537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cc1f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.000499725341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2ccb9e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.0005342960357666016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2ccb390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.0004954338073730469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cd10b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.0008499622344970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cd1be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2d5ec18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.0005652904510498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb567f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0005087852478027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cbb780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.0005102157592773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2ca6438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.0005197525024414062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb570d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.0005147457122802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cd1240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.0005290508270263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cd1358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.0009021759033203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cdb240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.0005135536193847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cd1710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.0005066394805908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb5ddeb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2ca6b00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.00051116943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cb3780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cc1d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.0005831718444824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2ccbc18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.0005364418029785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cdb048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.0008730888366699219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cdb860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb578588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cc1278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.00055694580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cbbeb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.0005109310150146484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7fb570780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.0005536079406738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cd1c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.0005164146423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cd1dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.0004935264587402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cdb048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.001194000244140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cdbe80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7fc7f2cbbd30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;0]" time="0.0005114078521728516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7fb578390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;1]" time="0.0005333423614501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2cdb3c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;2]" time="0.0005033016204833984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2cdb5c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;3]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7fb570a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;4]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2cd19e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;5]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2ccbc18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;6]" time="0.0005145072937011719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2cc1b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;7]" time="0.0009064674377441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2ccb470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;8]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2cd1da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;9]" time="0.0005350112915039062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7fac33a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;10]" time="0.0005154609680175781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2cdb048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;11]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2d0e198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;12]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7fb567cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;13]" time="0.000492095947265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7fb5dd6d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;14]" time="0.0004975795745849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2d199e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;15]" time="0.0008168220520019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2d19668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;16]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2cb37f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;17]" time="0.0005311965942382812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7fb578b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;18]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2cdba90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;19]" time="0.0004968643188476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7fb570438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;20]" time="0.0005083084106445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2cd1f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;21]" time="0.0004963874816894531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2ccb470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;22]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2ce43c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;23]" time="0.0005879402160644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2ce4908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;24]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2cd1828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;25]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2cdb048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;26]" time="0.0005071163177490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7fb5676d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;0]" time="0.000484466552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2cbb780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;1]" time="0.000484466552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7fac3c4e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;2]" time="0.000484466552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2ce40b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;3]" time="0.0004911422729492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2ce4c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;4]" time="0.0008673667907714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2c69208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;5]" time="0.0004992485046386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2ce4fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;6]" time="0.0005114078521728516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2ce44e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;7]" time="0.0005021095275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7fac3c4e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;8]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2cbbd68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;9]" time="0.0005047321319580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2cdb978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;10]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2cd1f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;11]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2c69080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;12]" time="0.0008833408355712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2c69828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;13]" time="0.0005249977111816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7fac33a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;14]" time="0.0005025863647460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2cdb9b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;15]" time="0.0005052089691162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7fb578b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;16]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7fac3cd68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;17]" time="0.0005235671997070312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2ce4a90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;18]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2ca6080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;19]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2c69080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;20]" time="0.0008847713470458984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2c69e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;21]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2c69cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;22]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2d195f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;23]" time="0.00048232078552246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2ce4c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;24]" time="0.0004940032958984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2cc12e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;25]" time="0.0005567073822021484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2cdb470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;26]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2cd1080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;0]" time="0.0005602836608886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7fac45240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;1]" time="0.0008332729339599609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2c724a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;2]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2cacfd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;3]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2cbbd68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;4]" time="0.0005021095275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7fac3cb70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;5]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2ce40b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;6]" time="0.0005490779876708984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2c694a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;7]" time="0.0005724430084228516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2c69048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;8]" time="0.0005061626434326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2c722e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;9]" time="0.0008897781372070312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2c72ac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;10]" time="0.00051116943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2c69cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;11]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2ce4da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;12]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2cc1748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;13]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2cdb668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;14]" time="0.0004889965057373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7fac45d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;15]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2c72c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;16]" time="0.0004775524139404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2c72630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;17]" time="0.0009102821350097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2c78128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;18]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2c72978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;19]" time="0.0004928112030029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7fac45780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;20]" time="0.0005097389221191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2cd1588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;21]" time="0.0004870891571044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7fac3c438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;22]" time="0.0008776187896728516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2ce4a90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;23]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2c69b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;24]" time="0.0005509853363037109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2c78240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;25]" time="0.0009067058563232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2c78748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;26]" time="0.0005185604095458984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7fc7f2c69b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;0]" time="0.00048160552978515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2ce4518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;1]" time="0.0005199909210205078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7fb5786d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;2]" time="0.0005309581756591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2cd1630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;3]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c72b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;4]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c72518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;5]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c78278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;6]" time="0.0008387565612792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c78d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;7]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c72e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;8]" time="0.0005500316619873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2cd1d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;9]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7fac3cfd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;10]" time="0.0005156993865966797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7faee02b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;11]" time="0.0005519390106201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7fac4d390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;12]" time="0.0005190372467041016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c783c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;13]" time="0.0005190372467041016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c784e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;14]" time="0.0012483596801757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c7f3c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;15]" time="0.0005030632019042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7fae6a8d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;16]" time="0.0005147457122802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7fac4d438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;17]" time="0.0005080699920654297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c78b00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;18]" time="0.0005085468292236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c78eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;19]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c72d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;20]" time="0.000522613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7fb5c9588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;21]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c69240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;22]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2ce4780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;23]" time="0.0010616779327392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2cd19b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;24]" time="0.0005190372467041016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7fae722e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;25]" time="0.0005319118499755859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c722e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;26]" time="0.0005290508270263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c78d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;0]" time="0.0005445480346679688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c78f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;1]" time="0.0005183219909667969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7fac45828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;2]" time="0.0005688667297363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7fae6ac18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;3]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2cacda0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;4]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2cb3b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;5]" time="0.0005199909210205078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7fae6afd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;6]" time="0.0005061626434326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7fac4db70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;7]" time="0.0004980564117431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c78d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;8]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c72f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;9]" time="0.00048470497131347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7fae722e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;10]" time="0.0005276203155517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2ce4fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;11]" time="0.0005314350128173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c7f278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;12]" time="0.00089263916015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c7fa90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;13]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7fae72e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;14]" time="0.0005171298980712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c72b00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;15]" time="0.0004985332489013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c78748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;16]" time="0.0005376338958740234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7fb567b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;17]" time="0.0005135536193847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7fae6af60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;18]" time="0.0005102157592773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c7fb38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;19]" time="0.0005311965942382812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c7f0b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;20]" time="0.0008928775787353516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c7ffd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;21]" time="0.0005283355712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c7f940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;22]" time="0.0004937648773193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7fac3c588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;23]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7fb567b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;24]" time="0.0005633831024169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c78e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;25]" time="0.000499725341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c72128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;26]" time="0.0005257129669189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7fae72e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;0]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c88128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;1]" time="0.0008153915405273438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c88630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;2]" time="0.0004963874816894531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7fae72978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;3]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c78748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;4]" time="0.0005314350128173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7fae7a2e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;5]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7fb570438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;6]" time="0.0005495548248291016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c7f4e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;7]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c7f080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;8]" time="0.0005266666412353516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c88160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;9]" time="0.0009515285491943359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c88c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;10]" time="0.0005257129669189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c7fd68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;11]" time="0.0005028247833251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7fac4db70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;12]" time="0.0005202293395996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7fae7a8d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;13]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c78358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;14]" time="0.0005080699920654297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7fae72828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;15]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c882b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;16]" time="0.0005536079406738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c883c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;17]" time="0.0008566379547119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c902b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;18]" time="0.0005252361297607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c88780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;19]" time="0.0005135536193847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7fae72828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;20]" time="0.0005011558532714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c78278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;21]" time="0.0005102157592773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7fac33fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;22]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7fb570438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;23]" time="0.0005288124084472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c7f710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;24]" time="0.0005421638488769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c900b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;25]" time="0.0010154247283935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c908d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;26]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7fc7f2c7f4e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;0]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7fae7afd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;1]" time="0.0004985332489013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c72b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;2]" time="0.00048804283142089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c69c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;3]" time="0.0005183219909667969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c88d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;4]" time="0.0005359649658203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c905c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;5]" time="0.0005211830139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c90080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;6]" time="0.0008473396301269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c90ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;7]" time="0.0004949569702148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c90588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;8]" time="0.0005311965942382812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c88780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;9]" time="0.0005147457122802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c88320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;10]" time="0.0005414485931396484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c69470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;11]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7fae84588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;12]" time="0.00054168701171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7fae7a198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;13]" time="0.0005097389221191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2cacb38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;14]" time="0.0008165836334228516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c93550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;15]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7fae7a390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;16]" time="0.0005235671997070312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7fae84630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;17]" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7fb7a1f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;18]" time="0.0005400180816650391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c883c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;19]" time="0.0005385875701904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c90940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;20]" time="0.0005083084106445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c90da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;21]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c93400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;22]" time="0.0008890628814697266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c93b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;23]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c90710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;24]" time="0.0005173683166503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c88e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;25]" time="0.0004992485046386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c78f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;26]" time="0.0005137920379638672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c727b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;0]" time="0.0005335807800292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c7f4e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;1]" time="0.0005443096160888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c93240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;2]" time="0.0005564689636230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c930f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;3]" time="0.0011377334594726562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c9d1d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;4]" time="0.0005452632904052734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c69c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;5]" time="0.0005235671997070312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7fb7294a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;6]" time="0.0005383491516113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7fae72a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;7]" time="0.0004887580871582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c939b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;8]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c93ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;9]" time="0.0005383491516113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c90550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;10]" time="0.0005252361297607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c88d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;11]" time="0.0005540847778320312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c7ffd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;12]" time="0.0008985996246337891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c88668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;13]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c90908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;14]" time="0.0005052089691162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c93c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;15]" time="0.000606536865234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c93ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;16]" time="0.0005424022674560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7fb729160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;17]" time="0.0005273818969726562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c78ac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;18]" time="0.0005097389221191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7fae842e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;19]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2ccb358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;20]" time="0.0008156299591064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2cdb978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;21]" time="0.0005178451538085938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2cb3780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;22]" time="0.0005254745483398438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7fb7294a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;23]" time="0.0004911422729492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7fb732208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;24]" time="0.0005106925964355469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c93a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;25]" time="0.0005109310150146484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c90908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;26]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c88668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;0]" time="0.0005166530609130859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c9d6d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;1]" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c9dc18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;2]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7fb570438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;3]" time="0.0005712509155273438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c93f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;4]" time="0.0005352497100830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7fb732940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;5]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7fb729c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;6]" time="0.0005307197570800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7fac33fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;7]" time="0.0005323886871337891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c9d400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;8]" time="0.0005929470062255859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c9df98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;9]" time="0.0008509159088134766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c27518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;10]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c9d400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;11]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2ccbc88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;12]" time="0.0005061626434326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7fae72a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;13]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7fb73a4a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;14]" time="0.0005087852478027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c93208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;15]" time="0.0005183219909667969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c887f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;16]" time="0.0004906654357910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c27080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;17]" time="0.0008745193481445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c27b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;18]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c93668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;19]" time="0.0005095005035400391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7fb73a160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;20]" time="0.0005292892456054688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7fb7a1d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;21]" time="0.0004916191101074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7fae7aeb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;22]" time="0.0005102157592773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c9d080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;23]" time="0.0005164146423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c27828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;24]" time="0.0005125999450683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c27240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;25]" time="0.0008633136749267578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c2e198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;26]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7fc7f2c27940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.0005483627319335938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c9dcc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0005097389221191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2ccbc88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.0005478858947753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7fb7a1d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7fb73abe0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.0005216598510742188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c93940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.0005090236663818359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c2e2e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0008931159973144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c2e7b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c90a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.0005421638488769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7fb732dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.0005655288696289062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c694a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.0005259513854980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c9dfd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.0005252361297607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c27978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.0005218982696533203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c27240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.0005364418029785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c2e208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.0009987354278564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c2edd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.0005114078521728516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c27978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.000499725341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c9d4e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.0005352497100830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7fb7329e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.0005357265472412109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c90358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.0005319118499755859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c93978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.0005278587341308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c2e438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.0005748271942138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c2e550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.0008416175842285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c33438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.0004966259002685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c2e9b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0005204677581787109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7fb275b00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.0005555152893066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7fb73aa90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.0005528926849365234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c69fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.0005252361297607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c9dd68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c27eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c33240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.0008957386016845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c33a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0005047321319580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7fb729fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7fb732dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.0006048679351806641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7fb27d3c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.0005209445953369141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7fb275da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.0005421638488769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c2eac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0005035400390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c33ac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0005922317504882812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c334a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.0008783340454101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c390b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c338d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.0005037784576416016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c2eb38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.0005273818969726562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c939b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.0005054473876953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7fb27d860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.0005245208740234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7fb732208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.0005300045013427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7fb729fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.000553131103515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c391d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.0014443397521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c396d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.0005202293395996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7fb27d518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.0005071163177490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7fb275710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.0005209445953369141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c33e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.0004966259002685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c33400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.0005381107330322266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c2efd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.0005869865417480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c27da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.0005102157592773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7fb7290b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.0005207061767578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c9d8d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.0008749961853027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c275f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.0005195140838623047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c2e198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c93400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.0006256103515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c33c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.0005335807800292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7fb275860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.0005102157592773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7fb27d320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0005300045013427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c9dc50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.0005044937133789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c88668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c883c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.0005161762237548828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7fb73a9e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.0005235671997070312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7fb275da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.0005328655242919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c33c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0005283355712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7fb2881d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.0005261898040771484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c2e198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.000522613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c275f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.0005426406860351562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c39080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.0008723735809326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c39da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.0005071163177490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c2e7f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.0005321502685546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7fb288ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.0005369186401367188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c33dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.0005288124084472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7fb2757b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.0005180835723876953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c9da90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.0004990100860595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c398d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.0005145072937011719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c39240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.0008900165557861328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c47320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.0005502700805664062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c39748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c9d278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.0005166530609130859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7fb27d470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.0005214214324951172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c33ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.0005233287811279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7fb288f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.0005283355712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c2e7f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c47160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.0008349418640136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c47940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.0005307197570800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c2eda0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.0005466938018798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7fb291278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.0005242824554443359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c335c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0005156993865966797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7fb7329e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.00055694580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c39f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.0005102157592773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c479e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c47400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.00084686279296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c47f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0004980564117431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c475f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0005354881286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c39f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.000530242919921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c9d080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.0005176067352294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7fb27dfd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.0005044937133789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7fb291cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.0005276203155517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7fb288a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.0005099773406982422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c4b080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.0008754730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c4b5c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.0005147457122802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7fb291a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.0005521774291992188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c33ac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.0005335807800292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7fb732be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.0005357265472412109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c39f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.0005309581756591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c476d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.0005319118499755859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c47390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.0004923343658447266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c4b0b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.0008466243743896484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c4bbe0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.0005066394805908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c47fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.0005152225494384766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c39240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0005357265472412109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7fb73a400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.0005481243133544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c33be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.0005400180816650391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c93400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.0005319118499755859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c4b240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.0005598068237304688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7fc7f2c4b358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.0987701416015625"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.018082857131958008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.004962444305419922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.02719259262084961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.029483318328857422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.030620098114013672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.042395591735839844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.015031576156616211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.004587888717651367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.06767416000366211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.11420655250549316"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.2962808609008789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.048836708068847656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.03390145301818848"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.009189844131469727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.04060697555541992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.07081222534179688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.07682561874389648"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.07833981513977051"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.046552181243896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.008350133895874023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.23592233657836914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.20700550079345703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.5330212116241455"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.09985804557800293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.017050743103027344"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.006181478500366211"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.20219683647155762"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.3460688591003418"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="1.0595417022705078"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.09953737258911133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.019113779067993164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.005186319351196289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.027514934539794922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.030492067337036133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.030788183212280273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.043215274810791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.015184640884399414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.004815578460693359"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.0680546760559082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.11471891403198242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.2981858253479004"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.049990177154541016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.03421592712402344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.009172201156616211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.039252281188964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.0700674057006836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.07587814331054688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.0795297622680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.046640872955322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.008463144302368164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.23083877563476562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.20650362968444824"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.5238351821899414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.09873795509338379"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.016602039337158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.005837440490722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.2294001579284668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.3933730125427246"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="1.1922791004180908"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.10516238212585449"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.01949167251586914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.005382061004638672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.027781009674072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.02973175048828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.03049921989440918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.04276013374328613"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.015324115753173828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0049228668212890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.06804037094116211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.11706066131591797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.29308080673217773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.04858970642089844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.03450632095336914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.009486913681030273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.040755510330200195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.07062435150146484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.07547569274902344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.07940793037414551"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.045725107192993164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.008265972137451172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.2334613800048828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.21146106719970703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.5289547443389893"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.09902501106262207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.01731276512145996"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.006833314895629883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.25882840156555176"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.42754507064819336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="1.3367385864257812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.11102914810180664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.01898336410522461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0050084590911865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.03290152549743652"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.03000330924987793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.031034231185913086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.04336118698120117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.01556849479675293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.005006074905395508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.06956982612609863"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.11567378044128418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.2939581871032715"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.049386024475097656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.03440356254577637"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.009398460388183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.04118204116821289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.07192707061767578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.07574939727783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.07955265045166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.04624533653259277"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.008510112762451172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.23420119285583496"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.20737338066101074"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.5265963077545166"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.10032057762145996"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.01709294319152832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.006262540817260742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.28264379501342773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.4759821891784668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="1.4819445610046387"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.12029504776000977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.019374608993530273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.005397796630859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.027843713760375977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.030387163162231445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.031029701232910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.043621063232421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.015099048614501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.004744768142700195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.06902790069580078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.11916780471801758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.3054628372192383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.04972243309020996"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.03463149070739746"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.009434700012207031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.040192604064941406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.07213377952575684"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.07654619216918945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.07939457893371582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.045659542083740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.008433818817138672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.23792409896850586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.21849274635314941"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.5374391078948975"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.09968996047973633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.01662445068359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.006132841110229492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.3092780113220215"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.5166916847229004"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="1.6241726875305176"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.12627768516540527"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.053211212158203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.14139413833618164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.10721182823181152"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.12264776229858398"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.1296830177307129"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.1071159839630127"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.04159688949584961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.12402129173278809"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.29383254051208496"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.5664229393005371"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="1.5869476795196533"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.1218259334564209"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.1005852222442627"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.2970561981201172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.16220879554748535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.291583776473999"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.33223867416381836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.35289502143859863"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.13475322723388672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.2957282066345215"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.9216649532318115"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.9592013359069824"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="2.711643695831299"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.25211334228515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.04526233673095703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.20438671112060547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="1.497936725616455"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="2.876728057861328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="11.966889142990112"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.4190070629119873"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.051496028900146484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.1381523609161377"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.10737442970275879"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.12284350395202637"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.1275017261505127"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.10333704948425293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.04078030586242676"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.12465119361877441"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.2943434715270996"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.5574274063110352"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="1.5789425373077393"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.12150430679321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.10089397430419922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.2913661003112793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.15991783142089844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.2864797115325928"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.3333723545074463"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.3547248840332031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.13198471069335938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.29421019554138184"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.9485476016998291"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.9772379398345947"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="2.8276569843292236"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.2523362636566162"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.04606032371520996"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.23540782928466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="2.2308902740478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="4.014453887939453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="16.051461219787598"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.5049822330474854"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.05741286277770996"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.1505112648010254"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.11810684204101562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.13283514976501465"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.13832783699035645"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.11383247375488281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.056777000427246094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.16706323623657227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.4184873104095459"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.6409354209899902"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="1.718824863433838"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.13391804695129395"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.10652303695678711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.3281128406524658"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.17659878730773926"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.31362438201904297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.35843324661254883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.3795793056488037"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.14083576202392578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.3217458724975586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="1.0550248622894287"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="1.0826709270477295"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="3.096238613128662"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.25345802307128906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.0438387393951416"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.2489781379699707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="2.8230855464935303"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="5.00037956237793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="18.96501588821411"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.5319669246673584"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.05311894416809082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.14253926277160645"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.10695505142211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.1220557689666748"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.12874484062194824"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.10495471954345703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.04137229919433594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.12498593330383301"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.29596376419067383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.5668818950653076"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="1.5793957710266113"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.12378978729248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.10064339637756348"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.29251933097839355"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.16305780410766602"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.2863471508026123"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.32571840286254883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.35433268547058105"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.12967705726623535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.29067444801330566"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.9469318389892578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.9828386306762695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="2.8115878105163574"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.24772310256958008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.04617905616760254"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.2721123695373535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="3.371743679046631"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="5.889623165130615"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="22.364604473114014"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.5874066352844238"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.05233311653137207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.1375727653503418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.10706949234008789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.12113618850708008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.12641382217407227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.10355257987976074"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.04098176956176758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.1250615119934082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.29720020294189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.5553255081176758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="1.555593490600586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.12321829795837402"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.0980837345123291"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.29401087760925293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.1622157096862793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.2897922992706299"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.3227884769439697"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.35315418243408203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.13020706176757812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.29300451278686523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.9313440322875977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.9419782161712646"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="2.682955741882324"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.24422216415405273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.04490804672241211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.28692626953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="3.885058641433716"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="6.7668986320495605"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="25.21658158302307"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.6504762172698975"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.05179786682128906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.13913989067077637"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.10689902305603027"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.11959552764892578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.12562918663024902"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.10312318801879883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.041539907455444336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.12270545959472656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.29085397720336914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.5536813735961914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="1.5601575374603271"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.12221169471740723"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.09881997108459473"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.2910022735595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.15855669975280762"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.2817575931549072"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.3227825164794922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.34601449966430664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.1276693344116211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.28375840187072754"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.8941781520843506"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.9169104099273682"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="2.66196608543396"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.2445363998413086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.04556775093078613"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.30624842643737793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="4.379353761672974"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="7.583794355392456"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="28.449479579925537"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.7131173610687256"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.05197596549987793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.13706493377685547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.10548663139343262"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.12380075454711914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.12737607955932617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.10314655303955078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.039649248123168945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.12168169021606445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.29483604431152344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.5556919574737549"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="1.5449399948120117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.12242960929870605"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.09783744812011719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.28970909118652344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.1585533618927002"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.282820463180542"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.32166409492492676"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.35094261169433594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.12779951095581055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.28861570358276367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.9566540718078613"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.9226517677307129"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="2.711277961730957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.24024581909179688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.046056509017944336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.32273030281066895"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="4.87434720993042"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="8.476460218429565"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="31.40804648399353"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.7783279418945312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.051325321197509766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.13614606857299805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.10530257225036621"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.12186861038208008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.1266486644744873"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.10091423988342285"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.039201974868774414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.12075090408325195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.288693904876709"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.5446655750274658"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="1.531167984008789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.11995935440063477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.09897303581237793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.290661096572876"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.16019630432128906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.2869870662689209"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.3215806484222412"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.35056257247924805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.12722516059875488"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.2839779853820801"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.9686996936798096"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.9490659236907959"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="2.6894736289978027"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.24127674102783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.044931650161743164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.3395998477935791"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="5.466471433639526"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="9.34497594833374"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="34.84692621231079"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.8426461219787598"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.05216240882873535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.1356794834136963"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.10597825050354004"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.12024331092834473"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.12833213806152344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.10261774063110352"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.03955221176147461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.11973714828491211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.2875385284423828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.5479254722595215"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="1.541062593460083"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.12213897705078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.09877467155456543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.2909400463104248"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.15810728073120117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.2867305278778076"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.3323519229888916"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.35512518882751465"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.12695622444152832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.2825813293457031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.896925687789917"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.9410974979400635"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="2.7045738697052"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.2400362491607666"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.0445096492767334"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.36519646644592285"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="6.16424822807312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="10.988381624221802"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="38.05510115623474"><system-err>no more timer available, reusing last one
</system-err></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.8820624351501465"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;0]" time="0.018364667892456055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;1]" time="0.018969058990478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;2]" time="0.03731250762939453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;3]" time="0.040136098861694336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;4]" time="0.039179325103759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;5]" time="0.014924049377441406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;6]" time="0.014860391616821289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;7]" time="0.03893923759460449"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;8]" time="0.23204731941223145"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;9]" time="0.42608165740966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;10]" time="0.03336358070373535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;11]" time="0.06866955757141113"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;12]" time="0.06691575050354004"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;13]" time="0.054570674896240234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;14]" time="0.07248592376708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;15]" time="0.10563540458679199"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;16]" time="0.11455702781677246"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;17]" time="0.04547572135925293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;18]" time="0.046362876892089844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;19]" time="0.13885807991027832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;20]" time="0.40188050270080566"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;21]" time="0.8702437877655029"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;22]" time="0.01769733428955078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;23]" time="0.01758122444152832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;24]" time="0.1708378791809082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;25]" time="4.5467634201049805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;26]" time="10.549182176589966"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;0]" time="0.02032017707824707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;1]" time="0.020682811737060547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;2]" time="0.03965878486633301"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;3]" time="0.04111361503601074"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;4]" time="0.04190182685852051"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;5]" time="0.016765832901000977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;6]" time="0.01675105094909668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;7]" time="0.04081916809082031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;8]" time="0.22840070724487305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;9]" time="0.4352872371673584"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;10]" time="0.035237789154052734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;11]" time="0.06956243515014648"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;12]" time="0.0692453384399414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;13]" time="0.05680537223815918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;14]" time="0.07451033592224121"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;15]" time="0.10502743721008301"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;16]" time="0.11585736274719238"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;17]" time="0.046031951904296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;18]" time="0.04621171951293945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;19]" time="0.14113831520080566"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;20]" time="0.3981211185455322"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;21]" time="0.8841166496276855"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;22]" time="0.017597198486328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;23]" time="0.018009185791015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;24]" time="0.17017030715942383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;25]" time="4.535512447357178"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;26]" time="10.552577257156372"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;0]" time="0.019043445587158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;1]" time="0.020555973052978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;2]" time="0.03983259201049805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;3]" time="0.04130244255065918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;4]" time="0.04081439971923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;5]" time="0.01667475700378418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;6]" time="0.016516447067260742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;7]" time="0.041068315505981445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;8]" time="0.23025226593017578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;9]" time="0.42828989028930664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;10]" time="0.03502631187438965"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;11]" time="0.0689234733581543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;12]" time="0.06932830810546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;13]" time="0.056020498275756836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;14]" time="0.07465362548828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;15]" time="0.10743165016174316"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;16]" time="0.11457443237304688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;17]" time="0.04585838317871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;18]" time="0.04639625549316406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;19]" time="0.14136695861816406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;20]" time="0.3968346118927002"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;21]" time="0.8821630477905273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;22]" time="0.017577171325683594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;23]" time="0.01776266098022461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;24]" time="0.1695103645324707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;25]" time="4.533180236816406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;26]" time="10.578552484512329"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.0035598278045654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.001687765121459961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.004275083541870117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.0045392513275146484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.006288290023803711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.0053844451904296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.002545595169067383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0016052722930908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.005989789962768555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.008290529251098633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.022489309310913086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.0068759918212890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.004851818084716797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.002399921417236328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.005529642105102539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.009157896041870117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.009847402572631836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.015575408935546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.007907867431640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.0026214122772216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.05728936195373535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.021591663360595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.07329130172729492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.008633852005004883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0027191638946533203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.002875804901123047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.02867746353149414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.036986589431762695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.13094592094421387"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.009170293807983398"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.003051280975341797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0016720294952392578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.004289388656616211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.004511117935180664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.006159067153930664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.005211591720581055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0024406909942626953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.001474618911743164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.006068706512451172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.007355451583862305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.022090673446655273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.005766153335571289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.004676342010498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.0023865699768066406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.005343198776245117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.008991479873657227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.009502172470092773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.0148773193359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.0070226192474365234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.0024962425231933594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.048589468002319336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.021392345428466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.07263755798339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.009489774703979492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.0027284622192382812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.003649473190307617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.045775413513183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.04119563102722168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.18519306182861328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.010426998138427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.003137826919555664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.001707315444946289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.0042688846588134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.004439830780029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.0063631534576416016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.00561833381652832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.002656698226928711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0016946792602539062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.006276607513427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.007767677307128906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.022818803787231445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.006621599197387695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.004788398742675781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.002475261688232422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.0067594051361083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.009107351303100586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.00968790054321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.01518392562866211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.007273674011230469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.002718687057495117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.0457758903503418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.022228240966796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.07244133949279785"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.008740663528442383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.002854585647583008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.0037872791290283203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.04807233810424805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.04196524620056152"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.18297982215881348"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.010428667068481445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.0029976367950439453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0016748905181884766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.004347324371337891"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.004586219787597656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.006287813186645508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.005345821380615234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0025606155395507812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0016198158264160156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.0061681270599365234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.007993698120117188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.022374391555786133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.006755828857421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.004924297332763672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.0025529861450195312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.0055773258209228516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.009129047393798828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.009819984436035156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.01504373550415039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.0070841312408447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.0026323795318603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.04435276985168457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.022077322006225586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.0708780288696289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.008657217025756836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.002833127975463867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.002808809280395508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.0283811092376709"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.06134748458862305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.18399906158447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.010575294494628906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.0030717849731445312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.0017769336700439453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.0044918060302734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.0046863555908203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.006573200225830078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.005496025085449219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.0025916099548339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0016384124755859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.0062677860260009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.007948160171508789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.022894620895385742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.006525993347167969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.004989147186279297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.002530813217163086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.005686521530151367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.009317398071289062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.009939908981323242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.01514291763305664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.007122516632080078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.0027921199798583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.04452061653137207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.02186131477355957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.06930422782897949"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.008607149124145508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.0027265548706054688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.003450632095336914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.04758095741271973"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.06389904022216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.23586559295654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.011693000793457031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.0040264129638671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.0017893314361572266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.004456043243408203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.004763126373291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.006747722625732422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.005696296691894531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.002735137939453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0017571449279785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.0065135955810546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.008528947830200195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.023383378982543945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.006608724594116211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.004995822906494141"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.0024890899658203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.00560307502746582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.00947260856628418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.009986162185668945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.015157938003540039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.007176399230957031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.002732515335083008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.046391963958740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.02239370346069336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.07111930847167969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.008924722671508789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.0028600692749023438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.003766775131225586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.04812479019165039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.06426763534545898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.2346789836883545"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.011403799057006836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.004014253616333008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.0017104148864746094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.004468679428100586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.004791259765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.006550788879394531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.005777597427368164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.002633810043334961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0016453266143798828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.006150007247924805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.007815837860107422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.022513628005981445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.006753444671630859"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.00486302375793457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.0024695396423339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.005553483963012695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.009132623672485352"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.009961843490600586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.015097856521606445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.0070476531982421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.0026543140411376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.043654680252075195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.02236485481262207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.06970787048339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.008716583251953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.0028111934661865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.0027446746826171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.028639554977416992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.06169772148132324"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.1824498176574707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.010538339614868164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.00301361083984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0017032623291015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.004333972930908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.0045318603515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.006481647491455078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.005399465560913086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.0025196075439453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0016045570373535156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.006266355514526367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.007974386215209961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.02276468276977539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.006474971771240234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.004762172698974609"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.002464771270751953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.0056133270263671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.008977651596069336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.009629487991333008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.01489114761352539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.006808757781982422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.0025415420532226562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.04440665245056152"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.021706342697143555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.06997561454772949"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.008600473403930664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.002810955047607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.0036001205444335938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.04784560203552246"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.06432819366455078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.23722505569458008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.011334657669067383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.004109621047973633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0017368793487548828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.004362344741821289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.004519939422607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.006318092346191406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.005531787872314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.002683877944946289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0016965866088867188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.0063893795013427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.007924556732177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.022760868072509766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.006506443023681641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.004822254180908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.002439737319946289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.0055141448974609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.008922576904296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.009666681289672852"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.015673160552978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.007408857345581055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.002599477767944336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.04358625411987305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.02203822135925293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.0702824592590332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.00876617431640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.002755880355834961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.0034608840942382812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.04690384864807129"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.06364059448242188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.23522567749023438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.011813163757324219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;0]" time="0.005755901336669922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;1]" time="0.004782676696777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;2]" time="0.00807332992553711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;3]" time="0.009999990463256836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;4]" time="0.011615276336669922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;5]" time="0.0051441192626953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;6]" time="0.004180908203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;7]" time="0.00833582878112793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;8]" time="0.02848196029663086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;9]" time="0.0539400577545166"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;10]" time="0.008512020111083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;11]" time="0.014058589935302734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;12]" time="0.014994621276855469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;13]" time="0.011867523193359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;14]" time="0.014281034469604492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;15]" time="0.023100614547729492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;16]" time="0.027355670928955078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;17]" time="0.009233951568603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;18]" time="0.008129358291625977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;19]" time="0.01168966293334961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;20]" time="0.04135870933532715"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;21]" time="0.0892333984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;22]" time="0.004773616790771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;23]" time="0.004195690155029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;24]" time="0.009658336639404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;25]" time="0.050145864486694336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;26]" time="0.1052851676940918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;0]" time="0.00564265251159668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;1]" time="0.004749298095703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;2]" time="0.008205652236938477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;3]" time="0.010193109512329102"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;4]" time="0.01164865493774414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;5]" time="0.005172014236450195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;6]" time="0.004167079925537109"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;7]" time="0.008502721786499023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;8]" time="0.02878856658935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;9]" time="0.052625417709350586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;10]" time="0.008274316787719727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;11]" time="0.01447153091430664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;12]" time="0.01498723030090332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;13]" time="0.011804819107055664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;14]" time="0.014240264892578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;15]" time="0.022684574127197266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;16]" time="0.027574777603149414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;17]" time="0.009233713150024414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;18]" time="0.008232355117797852"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;19]" time="0.01197052001953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;20]" time="0.04198884963989258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;21]" time="0.08559298515319824"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;22]" time="0.00466609001159668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;23]" time="0.004045009613037109"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;24]" time="0.010241031646728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;25]" time="0.07166171073913574"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;26]" time="0.15723538398742676"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;0]" time="0.005368947982788086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;1]" time="0.004626274108886719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;2]" time="0.008254051208496094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;3]" time="0.010138750076293945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;4]" time="0.01163625717163086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;5]" time="0.005089759826660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;6]" time="0.003979682922363281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;7]" time="0.008228778839111328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;8]" time="0.028577089309692383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;9]" time="0.05303382873535156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;10]" time="0.008234500885009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;11]" time="0.0143890380859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;12]" time="0.015247821807861328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;13]" time="0.011663675308227539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;14]" time="0.014084577560424805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;15]" time="0.02325296401977539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;16]" time="0.027426481246948242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;17]" time="0.009389162063598633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;18]" time="0.008191823959350586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;19]" time="0.011873245239257812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;20]" time="0.04148745536804199"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;21]" time="0.08635449409484863"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;22]" time="0.004747152328491211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;23]" time="0.004182577133178711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;24]" time="0.011094093322753906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;25]" time="0.07271814346313477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;26]" time="0.1572434902191162"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.0038573741912841797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0023555755615234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.007608652114868164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.009643316268920898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.014228105545043945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.010083436965942383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0030481815338134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0022389888763427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.03467965126037598"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.06702160835266113"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.934422492980957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.010919332504272461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.005018949508666992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.0036673545837402344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.010852575302124023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.018255233764648438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.021140336990356445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.031812429428100586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.008417129516601562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.0035867691040039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.08791589736938477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.06987404823303223"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.7880933284759521"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.013893604278564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.004456996917724609"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.003583192825317383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.04608893394470215"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.07541227340698242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.6426734924316406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.014552593231201172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.004373788833618164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0024394989013671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.007667064666748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.010058164596557617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.014793157577514648"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.010225057601928711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0031621456146240234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.002329587936401367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.034559011459350586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.06912899017333984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.9149477481842041"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.010921716690063477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.00603175163269043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.0037260055541992188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.010768413543701172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.015202999114990234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.021111488342285156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.03223013877868652"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.008328437805175781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.0035741329193115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.08661937713623047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.07155823707580566"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.7972598075866699"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.0137786865234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.004224061965942383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.004302024841308594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.0643613338470459"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.07891654968261719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.6973671913146973"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.015224456787109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.004441499710083008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.002396106719970703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.007700443267822266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.009761571884155273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.014486551284790039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.010449886322021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.0040667057037353516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.002325296401977539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.034594058990478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.06765007972717285"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.9195938110351562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.011332273483276367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.006160736083984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.003937482833862305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.010817766189575195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.015550374984741211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.022372007369995117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.032949209213256836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.008494853973388672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.004636287689208984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.0852348804473877"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.07017016410827637"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.7964160442352295"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.013982772827148438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.004312753677368164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.004640340805053711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.06634855270385742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.0789797306060791"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.7004165649414062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.017421960830688477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.004507541656494141"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0024232864379882812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.007756471633911133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.009969949722290039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.014437198638916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.010370731353759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0040683746337890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0022897720336914062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.034415245056152344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.06699252128601074"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.9144067764282227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.011513948440551758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.006264686584472656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.003876209259033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.011009454727172852"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.01671576499938965"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.023184537887573242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.03195786476135254"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.008527278900146484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.004596710205078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.08639717102050781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.06933975219726562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.7959742546081543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.013949394226074219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0043485164642333984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.0035865306854248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.04690814018249512"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.09652495384216309"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.6954998970031738"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.015297412872314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.004459381103515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.0023870468139648438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.007676601409912109"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.010035276412963867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.015653133392333984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.01036834716796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.004300117492675781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.002476930618286133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.036270856857299805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.06853175163269043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.9224944114685059"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.011160850524902344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.00615692138671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.0038483142852783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.010815143585205078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.01619434356689453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.02203369140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.03266191482543945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.008437395095825195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.004537820816040039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.08630585670471191"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.06945252418518066"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.7938840389251709"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.013548135757446289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.004317522048950195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.004320621490478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.06433773040771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.10012674331665039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.7518913745880127"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.016227006912231445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.0044515132904052734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.0025200843811035156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.00788116455078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.01454305648803711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.016290903091430664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.01048898696899414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.00408625602722168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0023398399353027344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.03466796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.06804847717285156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.9229528903961182"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.010671854019165039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.006127119064331055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.003885030746459961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.01081395149230957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.015398263931274414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.021731853485107422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.03162264823913574"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.008410453796386719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.004552602767944336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.08800959587097168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.06910586357116699"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.7912938594818115"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.014039993286132812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.0043182373046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.00441431999206543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.06575250625610352"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.09922432899475098"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.7494702339172363"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.01585078239440918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.004456043243408203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.002421855926513672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.007909059524536133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.010119199752807617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.014451980590820312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.01066136360168457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.0040493011474609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0022454261779785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.03426694869995117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.0682222843170166"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.9190163612365723"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.011045455932617188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.006209611892700195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.0038633346557617188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.010792732238769531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.015424489974975586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.021317481994628906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.03204488754272461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.008326530456542969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.004448652267456055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.08781719207763672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.06912755966186523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.7959418296813965"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.013662338256835938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.0042667388916015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.003305673599243164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.04526209831237793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.09520792961120605"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.6968188285827637"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.015181541442871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.0044591426849365234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0023546218872070312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.007811307907104492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.010351181030273438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.0146331787109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.010791301727294922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.004233598709106445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0023822784423828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.035531044006347656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.06778812408447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.9140207767486572"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.010715484619140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.00619816780090332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.003895282745361328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.010834217071533203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.01667928695678711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.021520614624023438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.03197026252746582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.008298873901367188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.0037009716033935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.08594059944152832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.0693049430847168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.7938857078552246"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.01361536979675293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.004248380661010742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.0045244693756103516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.0648338794708252"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.10016655921936035"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.7509686946868896"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.015942096710205078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.004307270050048828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0023152828216552734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.007445096969604492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.010188817977905273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.014557123184204102"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.010338068008422852"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.004024028778076172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0023276805877685547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.0347743034362793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.06861567497253418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.9194526672363281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.010956048965454102"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.005347013473510742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.004236698150634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.011184453964233398"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.016356229782104492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.022037744522094727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.031829833984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.008318901062011719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.0036978721618652344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.08685636520385742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.06929755210876465"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.7999849319458008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.013988256454467773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.004263401031494141"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.004343271255493164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.06597065925598145"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.10201263427734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.750617504119873"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.016041040420532227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;0]" time="0.0051882266998291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;1]" time="0.004255771636962891"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;2]" time="0.007878780364990234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;3]" time="0.015075445175170898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;4]" time="0.01843118667602539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;5]" time="0.004900455474853516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;6]" time="0.003738880157470703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;7]" time="0.016411304473876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;8]" time="0.4430418014526367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;9]" time="2.2378594875335693"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;10]" time="0.007704496383666992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;11]" time="0.0181729793548584"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;12]" time="0.0186917781829834"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;13]" time="0.011727333068847656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;14]" time="0.019692420959472656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;15]" time="0.03194832801818848"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;16]" time="0.040976524353027344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;17]" time="0.00924539566040039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;18]" time="0.009115457534790039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;19]" time="0.02059483528137207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;20]" time="0.3460958003997803"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;21]" time="1.7505135536193848"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;22]" time="0.004435300827026367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;23]" time="0.0038836002349853516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;24]" time="0.01287388801574707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;25]" time="0.270953893661499"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;26]" time="1.2801833152770996"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;0]" time="0.005104541778564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;1]" time="0.00410008430480957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;2]" time="0.007853031158447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;3]" time="0.01479029655456543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;4]" time="0.01866602897644043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;5]" time="0.004952192306518555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;6]" time="0.0038383007049560547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;7]" time="0.01646709442138672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;8]" time="0.4436345100402832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;9]" time="2.0895769596099854"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;10]" time="0.007379770278930664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;11]" time="0.017755985260009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;12]" time="0.018391847610473633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;13]" time="0.01140594482421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;14]" time="0.018805503845214844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;15]" time="0.03155112266540527"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;16]" time="0.040816307067871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;17]" time="0.009588479995727539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;18]" time="0.009074687957763672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;19]" time="0.020475149154663086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;20]" time="0.3423881530761719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;21]" time="1.7501459121704102"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;22]" time="0.004784107208251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;23]" time="0.0038034915924072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;24]" time="0.014294147491455078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;25]" time="0.2913222312927246"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;26]" time="1.3383114337921143"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;0]" time="0.004914522171020508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;1]" time="0.0040361881256103516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;2]" time="0.007813453674316406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;3]" time="0.014594554901123047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;4]" time="0.01843714714050293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;5]" time="0.0049326419830322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;6]" time="0.0037331581115722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;7]" time="0.016306161880493164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;8]" time="0.4414184093475342"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;9]" time="2.1200969219207764"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;10]" time="0.008107185363769531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;11]" time="0.01992964744567871"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;12]" time="0.019800424575805664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;13]" time="0.012357711791992188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;14]" time="0.020508766174316406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;15]" time="0.03270411491394043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;16]" time="0.041858673095703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;17]" time="0.009951114654541016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;18]" time="0.009474039077758789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;19]" time="0.021883249282836914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;20]" time="0.35228586196899414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;21]" time="1.7895832061767578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;22]" time="0.004731178283691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;23]" time="0.00423121452331543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;24]" time="0.015012502670288086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;25]" time="0.2993786334991455"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;26]" time="1.345893383026123"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;0]" time="0.0035219192504882812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;1]" time="0.0029616355895996094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;2]" time="0.004144191741943359"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;3]" time="0.011486530303955078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;4]" time="0.020731449127197266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;5]" time="0.00430607795715332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;6]" time="0.0032570362091064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;7]" time="0.005500316619873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;8]" time="0.019807815551757812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;9]" time="0.03872847557067871"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;10]" time="0.00593876838684082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;11]" time="0.009736299514770508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;12]" time="0.008785009384155273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;13]" time="0.006071805953979492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;14]" time="0.009038448333740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;15]" time="0.037378549575805664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;16]" time="0.07721924781799316"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;17]" time="0.009043693542480469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;18]" time="0.009311914443969727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;19]" time="0.02385401725769043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;20]" time="0.0400853157043457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;21]" time="0.07620382308959961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;22]" time="0.02386474609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;23]" time="0.02446746826171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;24]" time="0.031032323837280273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;25]" time="0.07561421394348145"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;26]" time="0.1340620517730713"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;0]" time="0.0037147998809814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;1]" time="0.0027658939361572266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;2]" time="0.004042625427246094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;3]" time="0.01134037971496582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;4]" time="0.021656036376953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;5]" time="0.004293203353881836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;6]" time="0.0031044483184814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;7]" time="0.005323171615600586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;8]" time="0.019646406173706055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;9]" time="0.038237810134887695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;10]" time="0.005833148956298828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;11]" time="0.009489774703979492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;12]" time="0.008703470230102539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;13]" time="0.005957365036010742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;14]" time="0.009018898010253906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;15]" time="0.03744363784790039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;16]" time="0.07785511016845703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;17]" time="0.009527206420898438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;18]" time="0.00960087776184082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;19]" time="0.024499893188476562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;20]" time="0.040465593338012695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;21]" time="0.07738661766052246"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;22]" time="0.024695873260498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;23]" time="0.02640056610107422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;24]" time="0.031236648559570312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;25]" time="0.07632875442504883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;26]" time="0.14295578002929688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;0]" time="0.003749370574951172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;1]" time="0.0028493404388427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;2]" time="0.004556894302368164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;3]" time="0.012895345687866211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;4]" time="0.02339458465576172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;5]" time="0.004830837249755859"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;6]" time="0.003506898880004883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;7]" time="0.006099700927734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;8]" time="0.02213263511657715"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;9]" time="0.043143510818481445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;10]" time="0.00640416145324707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;11]" time="0.010520458221435547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;12]" time="0.009694337844848633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;13]" time="0.006727695465087891"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;14]" time="0.010010719299316406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;15]" time="0.042122602462768555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;16]" time="0.07699227333068848"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;17]" time="0.009528636932373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;18]" time="0.009401798248291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;19]" time="0.024260520935058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;20]" time="0.04046273231506348"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;21]" time="0.07487154006958008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;22]" time="0.023558378219604492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;23]" time="0.023688554763793945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;24]" time="0.03132057189941406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;25]" time="0.07558512687683105"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;26]" time="0.13505315780639648"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;0]" time="0.0077342987060546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;1]" time="0.007977485656738281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;2]" time="0.008780717849731445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;3]" time="0.010783672332763672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;4]" time="0.010688543319702148"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;5]" time="0.008967161178588867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;6]" time="0.00893712043762207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;7]" time="0.014815092086791992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;8]" time="0.04741716384887695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;9]" time="0.08068370819091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;10]" time="0.016296863555908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;11]" time="0.019516468048095703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;12]" time="0.019016027450561523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;13]" time="0.01416778564453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;14]" time="0.020476579666137695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;15]" time="0.02892160415649414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;16]" time="0.0319056510925293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;17]" time="0.031298160552978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;18]" time="0.03354668617248535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;19]" time="0.10462307929992676"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;20]" time="0.09129858016967773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;21]" time="0.14770030975341797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;22]" time="0.1216435432434082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;23]" time="0.12357306480407715"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;24]" time="0.152724027633667"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;25]" time="0.25260305404663086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;26]" time="0.3915517330169678"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;0]" time="0.00777435302734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;1]" time="0.007922172546386719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;2]" time="0.008970022201538086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;3]" time="0.010338783264160156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;4]" time="0.010808944702148438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;5]" time="0.008832454681396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;6]" time="0.008873939514160156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;7]" time="0.014774084091186523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;8]" time="0.045729875564575195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;9]" time="0.07947397232055664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;10]" time="0.015991687774658203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;11]" time="0.019156455993652344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;12]" time="0.018509864807128906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;13]" time="0.013768911361694336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;14]" time="0.019893884658813477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;15]" time="0.030510902404785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;16]" time="0.032343387603759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;17]" time="0.03165936470031738"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;18]" time="0.03423762321472168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;19]" time="0.10414505004882812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;20]" time="0.09138345718383789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;21]" time="0.14747309684753418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;22]" time="0.12108612060546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;23]" time="0.12121367454528809"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;24]" time="0.15408706665039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;25]" time="0.2493276596069336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;26]" time="0.3887147903442383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;0]" time="0.00751185417175293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;1]" time="0.006717681884765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;2]" time="0.008761882781982422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;3]" time="0.010149955749511719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;4]" time="0.010668516159057617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;5]" time="0.00887608528137207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;6]" time="0.00898122787475586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;7]" time="0.014694452285766602"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;8]" time="0.04558420181274414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;9]" time="0.08054828643798828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;10]" time="0.016391992568969727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;11]" time="0.01894211769104004"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;12]" time="0.018255949020385742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;13]" time="0.01388239860534668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;14]" time="0.020007610321044922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;15]" time="0.028952836990356445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;16]" time="0.032268524169921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;17]" time="0.03185105323791504"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;18]" time="0.0338892936706543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;19]" time="0.1039278507232666"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;20]" time="0.09168195724487305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;21]" time="0.1470813751220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;22]" time="0.11996197700500488"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;23]" time="0.12109589576721191"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;24]" time="0.15321636199951172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;25]" time="0.25411057472229004"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;26]" time="0.39101696014404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;0]" time="0.003350973129272461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;1]" time="0.002532958984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;2]" time="0.003706216812133789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;3]" time="0.004533290863037109"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;4]" time="0.0050847530364990234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;5]" time="0.002310037612915039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;6]" time="0.0022754669189453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;7]" time="0.003354310989379883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;8]" time="0.0041582584381103516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;9]" time="0.0051882266998291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;10]" time="0.003064393997192383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;11]" time="0.00519561767578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;12]" time="0.005062580108642578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;13]" time="0.004297018051147461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;14]" time="0.00515294075012207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;15]" time="0.0071446895599365234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;16]" time="0.009128093719482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;17]" time="0.00313568115234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;18]" time="0.0028879642486572266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;19]" time="0.00508427619934082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;20]" time="0.012079954147338867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;21]" time="0.022750377655029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;22]" time="0.003183603286743164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;23]" time="0.0024003982543945312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;24]" time="0.004534006118774414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;25]" time="0.02697277069091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;26]" time="0.05808758735656738"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;0]" time="0.0035080909729003906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;1]" time="0.0026051998138427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;2]" time="0.0038466453552246094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;3]" time="0.0045948028564453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;4]" time="0.005209684371948242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;5]" time="0.0023365020751953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;6]" time="0.002282857894897461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;7]" time="0.0034646987915039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;8]" time="0.004452943801879883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;9]" time="0.005789756774902344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;10]" time="0.003164052963256836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;11]" time="0.005357980728149414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;12]" time="0.005229949951171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;13]" time="0.004301309585571289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;14]" time="0.005164384841918945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;15]" time="0.007239580154418945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;16]" time="0.00901651382446289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;17]" time="0.0031425952911376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;18]" time="0.0030078887939453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;19]" time="0.005095958709716797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;20]" time="0.012196063995361328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;21]" time="0.023839235305786133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;22]" time="0.0030603408813476562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;23]" time="0.002319812774658203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;24]" time="0.004405498504638672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;25]" time="0.02697300910949707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;26]" time="0.057370901107788086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;0]" time="0.0035054683685302734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;1]" time="0.0026285648345947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;2]" time="0.003823995590209961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;3]" time="0.004584074020385742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;4]" time="0.005282402038574219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;5]" time="0.0024766921997070312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;6]" time="0.002513408660888672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;7]" time="0.003370046615600586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;8]" time="0.004788398742675781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;9]" time="0.005745887756347656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;10]" time="0.0034220218658447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;11]" time="0.005368232727050781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;12]" time="0.0053675174713134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;13]" time="0.004506826400756836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;14]" time="0.005309581756591797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;15]" time="0.0075037479400634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;16]" time="0.009361028671264648"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;17]" time="0.003356456756591797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;18]" time="0.003036975860595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;19]" time="0.005414009094238281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;20]" time="0.012423992156982422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;21]" time="0.023124217987060547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;22]" time="0.003158092498779297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;23]" time="0.0024623870849609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;24]" time="0.004632472991943359"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;25]" time="0.027144193649291992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;26]" time="0.058388710021972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;0]" time="0.00695490837097168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;1]" time="0.005981922149658203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;2]" time="0.006974458694458008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;3]" time="0.008177995681762695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;4]" time="0.008124828338623047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;5]" time="0.004987001419067383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;6]" time="0.005638599395751953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;7]" time="0.008864402770996094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;8]" time="0.027354001998901367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;9]" time="0.049216270446777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;10]" time="0.009502172470092773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;11]" time="0.011344194412231445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;12]" time="0.011403560638427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;13]" time="0.009761333465576172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;14]" time="0.011846303939819336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;15]" time="0.015636682510375977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;16]" time="0.016939163208007812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;17]" time="0.011531829833984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;18]" time="0.011601924896240234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;19]" time="0.01862359046936035"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;20]" time="0.04919576644897461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;21]" time="0.10246968269348145"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;22]" time="0.006023883819580078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;23]" time="0.00506138801574707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;24]" time="0.020662546157836914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;25]" time="0.4035072326660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;26]" time="0.9135031700134277"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;0]" time="0.0068967342376708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;1]" time="0.005853891372680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;2]" time="0.00693964958190918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;3]" time="0.00786590576171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;4]" time="0.00856161117553711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;5]" time="0.004989147186279297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;6]" time="0.004895687103271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;7]" time="0.007570743560791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;8]" time="0.027649879455566406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;9]" time="0.0498046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;10]" time="0.009825706481933594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;11]" time="0.011580705642700195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;12]" time="0.011607885360717773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;13]" time="0.009482860565185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;14]" time="0.011781454086303711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;15]" time="0.015976667404174805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;16]" time="0.01681065559387207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;17]" time="0.01145792007446289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;18]" time="0.011507749557495117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;19]" time="0.018585920333862305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;20]" time="0.04969668388366699"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;21]" time="0.10165882110595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;22]" time="0.005913972854614258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;23]" time="0.005175113677978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;24]" time="0.021036148071289062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;25]" time="0.424954891204834"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;26]" time="0.9686543941497803"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;0]" time="0.006819009780883789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;1]" time="0.005928993225097656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;2]" time="0.007075786590576172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;3]" time="0.008003711700439453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;4]" time="0.008336782455444336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;5]" time="0.005179643630981445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;6]" time="0.0050048828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;7]" time="0.007755756378173828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;8]" time="0.027773141860961914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;9]" time="0.05068683624267578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;10]" time="0.010028600692749023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;11]" time="0.011702775955200195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;12]" time="0.011760473251342773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;13]" time="0.0098419189453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;14]" time="0.011960983276367188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;15]" time="0.01635575294494629"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;16]" time="0.017411231994628906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;17]" time="0.011988162994384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;18]" time="0.011938333511352539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;19]" time="0.018728256225585938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;20]" time="0.04963326454162598"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;21]" time="0.10550475120544434"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;22]" time="0.005833148956298828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;23]" time="0.004899263381958008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;24]" time="0.0214388370513916"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;25]" time="0.4223334789276123"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;26]" time="0.9678800106048584"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;0]" time="0.00671696662902832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;1]" time="0.006175041198730469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;2]" time="0.0072574615478515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;3]" time="0.008254051208496094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;4]" time="0.008524179458618164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;5]" time="0.004960060119628906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;6]" time="0.004904747009277344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;7]" time="0.007776021957397461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;8]" time="0.028107404708862305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;9]" time="0.05077958106994629"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;10]" time="0.00971674919128418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;11]" time="0.011476755142211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;12]" time="0.011415481567382812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;13]" time="0.009593009948730469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;14]" time="0.011595487594604492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;15]" time="0.015415191650390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;16]" time="0.016483783721923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;17]" time="0.011384725570678711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;18]" time="0.012216567993164062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;19]" time="0.021661758422851562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;20]" time="0.05430173873901367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;21]" time="0.10957002639770508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;22]" time="0.005946636199951172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;23]" time="0.0051348209381103516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;24]" time="0.01830887794494629"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;25]" time="0.3700981140136719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;26]" time="0.8557839393615723"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;0]" time="0.007053852081298828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;1]" time="0.006147861480712891"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;2]" time="0.007356405258178711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;3]" time="0.008866310119628906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;4]" time="0.008353233337402344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;5]" time="0.0049970149993896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;6]" time="0.005472660064697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;7]" time="0.007964372634887695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;8]" time="0.028377771377563477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;9]" time="0.0510711669921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;10]" time="0.009655952453613281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;11]" time="0.011327505111694336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;12]" time="0.011246919631958008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;13]" time="0.009681463241577148"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;14]" time="0.011621475219726562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;15]" time="0.015594005584716797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;16]" time="0.016635417938232422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;17]" time="0.011932134628295898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;18]" time="0.011669635772705078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;19]" time="0.021494150161743164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;20]" time="0.05211925506591797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;21]" time="0.11151885986328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;22]" time="0.005662679672241211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;23]" time="0.006157636642456055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;24]" time="0.018376827239990234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;25]" time="0.39446139335632324"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;26]" time="0.9081525802612305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;0]" time="0.0068264007568359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;1]" time="0.006122589111328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;2]" time="0.007338285446166992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;3]" time="0.008221626281738281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;4]" time="0.008390665054321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;5]" time="0.005006551742553711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;6]" time="0.005034685134887695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;7]" time="0.007879495620727539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;8]" time="0.0281827449798584"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;9]" time="0.05144190788269043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;10]" time="0.009648561477661133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;11]" time="0.011464357376098633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;12]" time="0.011487722396850586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;13]" time="0.009648799896240234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;14]" time="0.011635541915893555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;15]" time="0.015589714050292969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;16]" time="0.016653060913085938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;17]" time="0.01175999641418457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;18]" time="0.011668682098388672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;19]" time="0.021604061126708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;20]" time="0.052056312561035156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;21]" time="0.11104941368103027"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;22]" time="0.0059299468994140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;23]" time="0.004973411560058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;24]" time="0.018571853637695312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;25]" time="0.3944699764251709"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;26]" time="0.911029577255249"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;0]" time="0.00633549690246582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;1]" time="0.006970882415771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;2]" time="0.006803035736083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;3]" time="0.007803440093994141"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;4]" time="0.007935047149658203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;5]" time="0.004922389984130859"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;6]" time="0.0048675537109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;7]" time="0.007783651351928711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;8]" time="0.027835845947265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;9]" time="0.05034899711608887"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;10]" time="0.009479522705078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;11]" time="0.011264324188232422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;12]" time="0.011155128479003906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;13]" time="0.009602546691894531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;14]" time="0.011469841003417969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;15]" time="0.015182018280029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;16]" time="0.016696453094482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;17]" time="0.011748075485229492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;18]" time="0.011548757553100586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;19]" time="0.02184748649597168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;20]" time="0.0519711971282959"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;21]" time="0.10768604278564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;22]" time="0.005956172943115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;23]" time="0.005121707916259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;24]" time="0.017482519149780273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;25]" time="0.36968350410461426"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;26]" time="0.8570106029510498"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;0]" time="0.007018089294433594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;1]" time="0.005765438079833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;2]" time="0.0067980289459228516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;3]" time="0.007913589477539062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;4]" time="0.008090019226074219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;5]" time="0.0050008296966552734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;6]" time="0.004969596862792969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;7]" time="0.007752656936645508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;8]" time="0.028413772583007812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;9]" time="0.05120444297790527"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;10]" time="0.00959920883178711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;11]" time="0.011454105377197266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;12]" time="0.011319160461425781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;13]" time="0.009989023208618164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;14]" time="0.011677742004394531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;15]" time="0.01534724235534668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;16]" time="0.016300201416015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;17]" time="0.011935234069824219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;18]" time="0.011920690536499023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;19]" time="0.021887779235839844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;20]" time="0.05249834060668945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;21]" time="0.11207890510559082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;22]" time="0.005792140960693359"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;23]" time="0.004935503005981445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;24]" time="0.018053770065307617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;25]" time="0.39174342155456543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;26]" time="0.909787654876709"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;0]" time="0.006318569183349609"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;1]" time="0.005606174468994141"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;2]" time="0.006596565246582031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;3]" time="0.007720470428466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;4]" time="0.007987499237060547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;5]" time="0.004999399185180664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;6]" time="0.0048656463623046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;7]" time="0.0077555179595947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;8]" time="0.028302907943725586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;9]" time="0.05233192443847656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;10]" time="0.00939321517944336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;11]" time="0.011427640914916992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;12]" time="0.011480093002319336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;13]" time="0.00952291488647461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;14]" time="0.011234283447265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;15]" time="0.015137672424316406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;16]" time="0.016376733779907227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;17]" time="0.011816263198852539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;18]" time="0.011696338653564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;19]" time="0.021590471267700195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;20]" time="0.0518798828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;21]" time="0.1095118522644043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;22]" time="0.005946636199951172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;23]" time="0.005045175552368164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;24]" time="0.017998933792114258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;25]" time="0.3892991542816162"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;26]" time="0.9100048542022705"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;0]" time="0.005225419998168945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;1]" time="0.005934953689575195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;2]" time="0.007057905197143555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;3]" time="0.008021831512451172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;4]" time="0.006401777267456055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;5]" time="0.004201412200927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;6]" time="0.004906654357910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;7]" time="0.0072290897369384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;8]" time="0.024349451065063477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;9]" time="0.026432037353515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;10]" time="0.009839296340942383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;11]" time="0.01155710220336914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;12]" time="0.009184598922729492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;13]" time="0.009908199310302734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;14]" time="0.011847972869873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;15]" time="0.01573967933654785"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;16]" time="0.017118453979492188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;17]" time="0.0228421688079834"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;18]" time="0.023435115814208984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;19]" time="0.04901313781738281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;20]" time="0.06397247314453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;21]" time="0.11723065376281738"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;22]" time="0.005530357360839844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;23]" time="0.0054547786712646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;24]" time="0.02047419548034668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;25]" time="0.3906829357147217"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;26]" time="0.8245043754577637"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;0]" time="0.0055425167083740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;1]" time="0.005825042724609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;2]" time="0.007283449172973633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;3]" time="0.007917404174804688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;4]" time="0.0063934326171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;5]" time="0.004235982894897461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;6]" time="0.004759073257446289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;7]" time="0.007340669631958008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;8]" time="0.024114370346069336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;9]" time="0.026625871658325195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;10]" time="0.01001429557800293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;11]" time="0.01166844367980957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;12]" time="0.009613990783691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;13]" time="0.00976872444152832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;14]" time="0.012127399444580078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;15]" time="0.016126632690429688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;16]" time="0.01747417449951172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;17]" time="0.02297830581665039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;18]" time="0.023633718490600586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;19]" time="0.05052781105041504"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;20]" time="0.06473898887634277"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;21]" time="0.11606001853942871"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;22]" time="0.005589723587036133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;23]" time="0.0054035186767578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;24]" time="0.02019977569580078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;25]" time="0.4115922451019287"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;26]" time="0.836728572845459"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;0]" time="0.006795406341552734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;1]" time="0.006333351135253906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;2]" time="0.0076904296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;3]" time="0.008817911148071289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;4]" time="0.0071523189544677734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;5]" time="0.004631757736206055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;6]" time="0.005389213562011719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;7]" time="0.00815272331237793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;8]" time="0.025472402572631836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;9]" time="0.027248382568359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;10]" time="0.010293722152709961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;11]" time="0.012171745300292969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;12]" time="0.009616613388061523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;13]" time="0.01000666618347168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;14]" time="0.012279033660888672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;15]" time="0.016426563262939453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;16]" time="0.017568588256835938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;17]" time="0.02363443374633789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;18]" time="0.024051427841186523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;19]" time="0.0518803596496582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;20]" time="0.06513214111328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;21]" time="0.12286663055419922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;22]" time="0.005632162094116211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;23]" time="0.006224393844604492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;24]" time="0.022303342819213867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;25]" time="0.4227027893066406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;26]" time="0.8293843269348145"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;0]" time="0.0028998851776123047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;1]" time="0.012240886688232422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;2]" time="0.013935089111328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;3]" time="0.016591787338256836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;4]" time="0.004174232482910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;5]" time="0.0018768310546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;6]" time="0.010250091552734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;7]" time="0.015436172485351562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;8]" time="0.06700515747070312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;9]" time="0.016008853912353516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;10]" time="0.033205509185791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;11]" time="0.03929305076599121"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;12]" time="0.0040895938873291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;13]" time="0.03284716606140137"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;14]" time="0.03899121284484863"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;15]" time="0.04867053031921387"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;16]" time="0.055443525314331055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;17]" time="0.055440664291381836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;18]" time="0.05724668502807617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;19]" time="0.12575197219848633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;20]" time="0.5708231925964355"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;21]" time="1.2358191013336182"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;22]" time="0.0027344226837158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;23]" time="0.012162208557128906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;24]" time="0.10900664329528809"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;25]" time="3.163400650024414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;26]" time="0.7445316314697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;0]" time="0.0029540061950683594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;1]" time="0.011851310729980469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;2]" time="0.013385772705078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;3]" time="0.016202211380004883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;4]" time="0.0040776729583740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;5]" time="0.001909017562866211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;6]" time="0.01016855239868164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;7]" time="0.015197992324829102"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;8]" time="0.0661172866821289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;9]" time="0.015944480895996094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;10]" time="0.0327763557434082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;11]" time="0.03862881660461426"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;12]" time="0.004388093948364258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;13]" time="0.03276205062866211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;14]" time="0.03873252868652344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;15]" time="0.04850268363952637"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;16]" time="0.05519413948059082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;17]" time="0.05675840377807617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;18]" time="0.05745291709899902"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;19]" time="0.12644052505493164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;20]" time="0.5575981140136719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;21]" time="1.2399542331695557"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;22]" time="0.0025234222412109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;23]" time="0.012195825576782227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;24]" time="0.10895228385925293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;25]" time="3.1741771697998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;26]" time="0.7397947311401367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;0]" time="0.002816915512084961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;1]" time="0.011888265609741211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;2]" time="0.013873100280761719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;3]" time="0.016422510147094727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;4]" time="0.003818988800048828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;5]" time="0.001850128173828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;6]" time="0.010148763656616211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;7]" time="0.01517796516418457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;8]" time="0.06603527069091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;9]" time="0.015866756439208984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;10]" time="0.03342866897583008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;11]" time="0.038794755935668945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;12]" time="0.0041539669036865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;13]" time="0.0334932804107666"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;14]" time="0.03901410102844238"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;15]" time="0.04847240447998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;16]" time="0.05505561828613281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;17]" time="0.055629730224609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;18]" time="0.057888031005859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;19]" time="0.12743115425109863"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;20]" time="0.570690393447876"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;21]" time="1.2371442317962646"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;22]" time="0.002604961395263672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;23]" time="0.01217198371887207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;24]" time="0.10867881774902344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;25]" time="3.167853593826294"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;26]" time="0.7405617237091064"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;0]" time="0.004113674163818359"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;1]" time="0.0031690597534179688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;2]" time="0.0036211013793945312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;3]" time="0.004108428955078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;4]" time="0.004831075668334961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;5]" time="0.003110647201538086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;6]" time="0.003177642822265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;7]" time="0.0037603378295898438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;8]" time="0.004445314407348633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;9]" time="0.005304813385009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;10]" time="0.0047299861907958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;11]" time="0.005589008331298828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;12]" time="0.005425214767456055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;13]" time="0.004966259002685547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;14]" time="0.005501747131347656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;15]" time="0.007485866546630859"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;16]" time="0.009594440460205078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;17]" time="0.008886337280273438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;18]" time="0.008858203887939453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;19]" time="0.014650106430053711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;20]" time="0.017186880111694336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;21]" time="0.027182579040527344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;22]" time="0.004094600677490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;23]" time="0.003451108932495117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;24]" time="0.005154848098754883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;25]" time="0.02700638771057129"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;26]" time="0.05737185478210449"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;0]" time="0.004213809967041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;1]" time="0.0033423900604248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;2]" time="0.0038776397705078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;3]" time="0.004356861114501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;4]" time="0.00487518310546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;5]" time="0.0031578540802001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;6]" time="0.003170013427734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;7]" time="0.0037822723388671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;8]" time="0.0045473575592041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;9]" time="0.0057790279388427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;10]" time="0.0046863555908203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;11]" time="0.005784749984741211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;12]" time="0.005434751510620117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;13]" time="0.005026340484619141"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;14]" time="0.005749225616455078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;15]" time="0.007527589797973633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;16]" time="0.00954890251159668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;17]" time="0.010179996490478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;18]" time="0.009029388427734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;19]" time="0.015353679656982422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;20]" time="0.017371654510498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;21]" time="0.027435302734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;22]" time="0.0040662288665771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;23]" time="0.00344085693359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;24]" time="0.0065839290618896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;25]" time="0.029121875762939453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;26]" time="0.06126594543457031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;0]" time="0.004174232482910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;1]" time="0.0033903121948242188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;2]" time="0.0038759708404541016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;3]" time="0.004240512847900391"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;4]" time="0.0048139095306396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;5]" time="0.003225088119506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;6]" time="0.003325939178466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;7]" time="0.0037195682525634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;8]" time="0.0046460628509521484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;9]" time="0.005766630172729492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;10]" time="0.004717826843261719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;11]" time="0.005775928497314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;12]" time="0.00570368766784668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;13]" time="0.005253314971923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;14]" time="0.006025075912475586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;15]" time="0.007809638977050781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;16]" time="0.009498119354248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;17]" time="0.009346246719360352"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;18]" time="0.009187698364257812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;19]" time="0.015505075454711914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;20]" time="0.01741814613342285"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;21]" time="0.027973651885986328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;22]" time="0.004155397415161133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;23]" time="0.00353240966796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;24]" time="0.0065460205078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;25]" time="0.029484987258911133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;26]" time="0.05999159812927246"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;0]" time="0.0018033981323242188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;1]" time="0.0027391910552978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;2]" time="0.006405830383300781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;3]" time="0.033312320709228516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;4]" time="0.0017206668853759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;5]" time="0.001379251480102539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;6]" time="0.002346038818359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;7]" time="0.0062711238861083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;8]" time="0.03422951698303223"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;9]" time="0.002325773239135742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;10]" time="0.004467964172363281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;11]" time="0.014963388442993164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;12]" time="0.001964092254638672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;13]" time="0.01051473617553711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;14]" time="0.013981103897094727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;15]" time="0.06740260124206543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;16]" time="0.13876676559448242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;17]" time="0.008941888809204102"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;18]" time="0.007890701293945312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;19]" time="0.027904987335205078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;20]" time="0.1013646125793457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;21]" time="0.20752215385437012"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;22]" time="0.0017826557159423828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;23]" time="0.0025987625122070312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;24]" time="0.008954524993896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;25]" time="0.06837344169616699"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;26]" time="0.05320167541503906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;0]" time="0.0017681121826171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;1]" time="0.0027894973754882812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;2]" time="0.0066945552825927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;3]" time="0.03375744819641113"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;4]" time="0.0018260478973388672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;5]" time="0.0014040470123291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;6]" time="0.002424955368041992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;7]" time="0.006285667419433594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;8]" time="0.03436779975891113"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;9]" time="0.0030527114868164062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;10]" time="0.004269838333129883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;11]" time="0.015166282653808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;12]" time="0.0020112991333007812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;13]" time="0.01030278205871582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;14]" time="0.014029741287231445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;15]" time="0.06696319580078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;16]" time="0.13943910598754883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;17]" time="0.009276866912841797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;18]" time="0.008217334747314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;19]" time="0.028652667999267578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;20]" time="0.09909319877624512"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;21]" time="0.20578455924987793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;22]" time="0.001852273941040039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;23]" time="0.002759218215942383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;24]" time="0.010251760482788086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;25]" time="0.09336161613464355"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;26]" time="0.053820133209228516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;0]" time="0.0017771720886230469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;1]" time="0.0028069019317626953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;2]" time="0.006504058837890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;3]" time="0.0333404541015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;4]" time="0.0018465518951416016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;5]" time="0.0013873577117919922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;6]" time="0.0023429393768310547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;7]" time="0.006300449371337891"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;8]" time="0.034395694732666016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;9]" time="0.003108501434326172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;10]" time="0.004415035247802734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;11]" time="0.015173912048339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;12]" time="0.0020694732666015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;13]" time="0.010599374771118164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;14]" time="0.015260934829711914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;15]" time="0.06720805168151855"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;16]" time="0.15059733390808105"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;17]" time="0.008865118026733398"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;18]" time="0.008342742919921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;19]" time="0.027731657028198242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;20]" time="0.09744381904602051"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;21]" time="0.2052459716796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;22]" time="0.001817464828491211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;23]" time="0.0026290416717529297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;24]" time="0.010216236114501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;25]" time="0.09135580062866211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;26]" time="0.053530216217041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;0]" time="0.003396749496459961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;1]" time="0.0024204254150390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;2]" time="0.0029828548431396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;3]" time="0.004110097885131836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;4]" time="0.004918336868286133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;5]" time="0.0023157596588134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;6]" time="0.002256631851196289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;7]" time="0.016234636306762695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;8]" time="0.27773594856262207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;9]" time="1.4327218532562256"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;10]" time="0.006852865219116211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;11]" time="0.0049517154693603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;12]" time="0.004500150680541992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;13]" time="0.0037398338317871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;14]" time="0.005014181137084961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;15]" time="0.007960081100463867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;16]" time="0.011532068252563477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;17]" time="0.0030438899993896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;18]" time="0.0027892589569091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;19]" time="0.017193078994750977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;20]" time="0.20293164253234863"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;21]" time="1.087205171585083"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;22]" time="0.0030558109283447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;23]" time="0.002263784408569336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;24]" time="0.010203361511230469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;25]" time="0.165449857711792"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;26]" time="0.8097610473632812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;0]" time="0.003519773483276367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;1]" time="0.002685070037841797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;2]" time="0.0031893253326416016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;3]" time="0.004334449768066406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;4]" time="0.005071878433227539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;5]" time="0.002476930618286133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;6]" time="0.0024695396423339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;7]" time="0.016690731048583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;8]" time="0.2799224853515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;9]" time="1.3206729888916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;10]" time="0.004836320877075195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;11]" time="0.005000591278076172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;12]" time="0.004541635513305664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;13]" time="0.0038497447967529297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;14]" time="0.00510096549987793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;15]" time="0.008230447769165039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;16]" time="0.011808633804321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;17]" time="0.0030498504638671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;18]" time="0.0027875900268554688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;19]" time="0.018265724182128906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;20]" time="0.20661115646362305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;21]" time="1.0852842330932617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;22]" time="0.0032117366790771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;23]" time="0.0023632049560546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;24]" time="0.010393857955932617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;25]" time="0.16697049140930176"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;26]" time="0.8159031867980957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;0]" time="0.003469228744506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;1]" time="0.0026526451110839844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;2]" time="0.003201007843017578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;3]" time="0.004218101501464844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;4]" time="0.004909992218017578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;5]" time="0.0024569034576416016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;6]" time="0.0025637149810791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;7]" time="0.016435623168945312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;8]" time="0.27573466300964355"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;9]" time="1.3194622993469238"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;10]" time="0.004797697067260742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;11]" time="0.005064487457275391"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;12]" time="0.004679441452026367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;13]" time="0.0038988590240478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;14]" time="0.005236387252807617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;15]" time="0.008140802383422852"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;16]" time="0.012781381607055664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;17]" time="0.0031065940856933594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;18]" time="0.002835988998413086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;19]" time="0.017940759658813477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;20]" time="0.209028959274292"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;21]" time="1.0925545692443848"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;22]" time="0.00302886962890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;23]" time="0.002277851104736328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;24]" time="0.01029062271118164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;25]" time="0.1666276454925537"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;26]" time="0.8122744560241699"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.0019986629486083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.002259492874145508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.0017101764678955078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.0018537044525146484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.0016357898712158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.0015234947204589844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0016138553619384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0015149116516113281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.001949310302734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.0052337646484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.009436368942260742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.0018706321716308594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.0019969940185546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.0020003318786621094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.0019350051879882812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.0022881031036376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.0025568008422851562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.0024781227111816406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.0020761489868164062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.002148151397705078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.02790546417236328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.01838994026184082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.05184769630432129"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.003812074661254883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0015158653259277344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.0026617050170898438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.024350404739379883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.12274503707885742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.32015466690063477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.009952545166015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.002233266830444336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0016994476318359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.0016183853149414062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.0017061233520507812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.0016636848449707031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.0015056133270263672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0015411376953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0015687942504882812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.0019834041595458984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.005179882049560547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.009882211685180664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.0018815994262695312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.0020020008087158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.002088308334350586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.0020139217376708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.002445220947265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.0027604103088378906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.002537965774536133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.0022068023681640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.0021805763244628906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.026094675064086914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.018200159072875977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.050716400146484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.0038099288940429688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.0014719963073730469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.0024738311767578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.02375936508178711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.11981534957885742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.31850743293762207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.009461164474487305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.0022509098052978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0017390251159667969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.0017740726470947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.0019807815551757812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.00174713134765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.0015683174133300781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.001600027084350586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0016179084777832031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.0020377635955810547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.005133867263793945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.009706735610961914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.0017857551574707031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.0019118785858154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.0022115707397460938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.002087116241455078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.002429962158203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.0026628971099853516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.002464771270751953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.0021791458129882812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.002282381057739258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.025478601455688477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.01811957359313965"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.050704002380371094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.0040247440338134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.0015807151794433594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.0026111602783203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.024863719940185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.12167763710021973"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.319303035736084"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.010019063949584961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.0023267269134521484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.001734018325805664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.0016880035400390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.0017974376678466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.0016324520111083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.0015728473663330078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0017354488372802734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0014889240264892578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.0018620491027832031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.005170345306396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.00966501235961914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.0018818378448486328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.002007722854614258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.0021393299102783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.002052783966064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.002382993698120117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.0026950836181640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.002536296844482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.0022428035736083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.002245664596557617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.02629232406616211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.0182952880859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.05060982704162598"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.003916025161743164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0015518665313720703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.0025641918182373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.024081945419311523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.12063837051391602"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.31663012504577637"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.009847164154052734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.00238800048828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.0017399787902832031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.0016984939575195312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.001795053482055664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.0016660690307617188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.0015521049499511719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.0015647411346435547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0015540122985839844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.0020170211791992188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.005400419235229492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.010000228881835938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.002043485641479492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.001939535140991211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.0020890235900878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.002023935317993164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.002474546432495117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.0027685165405273438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.002529621124267578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.002187013626098633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.0021932125091552734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.025197982788085938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.01814103126525879"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.05029749870300293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.003827333450317383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.0015363693237304688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.002610445022583008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.02435612678527832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.12057924270629883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.3179605007171631"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.009854793548583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.002326488494873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.0017464160919189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.0017011165618896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.0017857551574707031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.001699686050415039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.0015873908996582031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.0015032291412353516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.001520395278930664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.002048969268798828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.005212545394897461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.009911775588989258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.0018236637115478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.0020904541015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.002179384231567383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.0020341873168945312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.0024526119232177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.0026552677154541016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.0025174617767333984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.0022084712982177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.002167224884033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.025477886199951172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.018630027770996094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.05097842216491699"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.003865480422973633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.0015726089477539062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.0025606155395507812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.025666236877441406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.12068486213684082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.31993675231933594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.00934910774230957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.0022749900817871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.001708984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.001584768295288086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.0016651153564453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.0015873908996582031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.0015017986297607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.0014615058898925781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0015423297882080078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.001865386962890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.005178213119506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.009628057479858398"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.0025606155395507812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.0021288394927978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.0023283958435058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.002047300338745117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.002507925033569336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.0026454925537109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.002466440200805664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.0022580623626708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.0022416114807128906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.025446176528930664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.01873946189880371"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.05085134506225586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.0039958953857421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.001604318618774414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.002605438232421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.023981332778930664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.12162065505981445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.31884026527404785"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.010993003845214844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.0022721290588378906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.001760721206665039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.0016255378723144531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.0016977787017822266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.0016875267028808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.0016396045684814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.0014843940734863281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.001556396484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.0020296573638916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.00516057014465332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.010378837585449219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.0018804073333740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.0020792484283447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.002240419387817383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.0020132064819335938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.002420663833618164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.002687215805053711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.0024755001068115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.0022046566009521484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.002254486083984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.025481700897216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.018100500106811523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.05090641975402832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.003897428512573242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.00157928466796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.0025386810302734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.0237123966217041"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.12141776084899902"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.32016921043395996"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.009467363357543945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.0024118423461914062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0017275810241699219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.0016901493072509766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.0018665790557861328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.0015914440155029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.0015406608581542969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.0015316009521484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0015342235565185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.001965761184692383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.00527501106262207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.010759353637695312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.002062082290649414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.002107381820678711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.002198457717895508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.002089977264404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.0024399757385253906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.002683401107788086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.002525806427001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.0022547245025634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.0023331642150878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.025500774383544922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.01888442039489746"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.0538477897644043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.003937959671020508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.0016198158264160156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.0027267932891845703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.024068832397460938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.12293624877929688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.32327985763549805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.010186195373535156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.002149343490600586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0016314983367919922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.0015854835510253906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.0016629695892333984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.0014908313751220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.0014209747314453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.001416921615600586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0014700889587402344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.0018391609191894531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.0036547183990478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.006420135498046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.001760244369506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.0017688274383544922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.001934051513671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.00189208984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.0021855831146240234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.00234222412109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.002153635025024414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.002185344696044922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.002227783203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.025711536407470703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.016190528869628906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.04410243034362793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.0035927295684814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.001451253890991211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.002508401870727539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.023244857788085938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.0762186050415039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.21583986282348633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.007813215255737305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.002206563949584961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0016634464263916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.0016732215881347656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.001737833023071289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.0015892982482910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.0014612674713134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0014603137969970703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0014524459838867188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.0019588470458984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.0037755966186523438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.006793498992919922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.0018019676208496094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.0019745826721191406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.0020983219146728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.0019576549530029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.0022726058959960938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.0024585723876953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.002388477325439453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.002290010452270508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.002344369888305664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.026002168655395508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.015682458877563477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.04637479782104492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.0036339759826660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.0014989376068115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.002435445785522461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.022986412048339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.07637619972229004"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.2131056785583496"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.007145881652832031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.0029892921447753906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.001630544662475586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.0015232563018798828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.0015866756439208984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.0015628337860107422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.0014345645904541016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.0013928413391113281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0014615058898925781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.0018711090087890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.003702402114868164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.006708383560180664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.0015537738800048828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.0017268657684326172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.0019505023956298828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.0017867088317871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.002095937728881836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.0023512840270996094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.002869129180908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.0021822452545166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.002173185348510742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.025087833404541016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.015427112579345703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.04405713081359863"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.0037131309509277344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.0014615058898925781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.002513408660888672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.022553443908691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.07590699195861816"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.21494293212890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.007257223129272461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.0021352767944335938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0015680789947509766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.0015957355499267578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.0016329288482666016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.0015811920166015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.0016117095947265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0013875961303710938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0013985633850097656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.0017278194427490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.0038738250732421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.0065271854400634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.0016255378723144531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.001766204833984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.001981019973754883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.0018639564514160156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.002151012420654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.0024271011352539062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.0021555423736572266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.0021009445190429688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.002203702926635742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.02536773681640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.016345739364624023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.046022891998291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.0036902427673339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0016946792602539062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.0025980472564697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.023868560791015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.09757447242736816"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.2636692523956299"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.008187294006347656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.0017757415771484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.0015981197357177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.0016334056854248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.0017371177673339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.0016057491302490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.0014677047729492188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.0014731884002685547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0014553070068359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.001809835433959961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.003820657730102539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.007054805755615234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.0016257762908935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.0019240379333496094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.001997232437133789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.0018842220306396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.002248525619506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.002402782440185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.002290487289428711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.0022482872009277344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.0021524429321289062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.025166034698486328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.016256332397460938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.04592442512512207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.003435373306274414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.0015256404876708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.002565145492553711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.023482799530029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.0982658863067627"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.26691675186157227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.008432865142822266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.002241849899291992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.0016927719116210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.0018017292022705078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.001811981201171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.00168609619140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.0015289783477783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.0015268325805664062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0015037059783935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.0019288063049316406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.003981351852416992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.007388591766357422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.0018076896667480469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.0019795894622802734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.0020246505737304688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.001931905746459961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.0022590160369873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.0024542808532714844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.0022840499877929688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.002198457717895508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.002160787582397461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.02508378028869629"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.016695261001586914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.04680228233337402"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.003635406494140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.001588582992553711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.0027017593383789062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.024077415466308594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.09843015670776367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.26542043685913086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.008724451065063477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.0021429061889648438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.00164794921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.001566171646118164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.001753091812133789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.0015032291412353516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.0014464855194091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.001451730728149414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0014798641204833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.0018258094787597656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.003958463668823242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.006571531295776367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.0017080307006835938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.001922607421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.001977205276489258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.0018491744995117188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.002142667770385742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.0024268627166748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.0021982192993164062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.0021746158599853516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.0021872520446777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.025415658950805664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.016205787658691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.04586935043334961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.003595590591430664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.0015587806701660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.002538442611694336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.023610353469848633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.09941911697387695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.26416897773742676"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.008387088775634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.0021953582763671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0016603469848632812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.0015287399291992188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.0017178058624267578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.0015454292297363281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.001417398452758789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.0014116764068603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0014188289642333984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.001791238784790039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.0037801265716552734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.007086038589477539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.0016715526580810547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.0018262863159179688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.0020155906677246094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.0018897056579589844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.0022020339965820312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.0024254322052001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.002238750457763672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.002159595489501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.0022039413452148438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.025383949279785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.016245365142822266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.046966552734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.003780364990234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.0015156269073486328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.002470731735229492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.023943424224853516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.0974876880645752"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.26743459701538086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.008565187454223633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.002190828323364258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0016093254089355469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.0016520023345947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.0017900466918945312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.0015673637390136719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.001425027847290039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.001420736312866211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.001458883285522461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.0019273757934570312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.003894329071044922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.007188081741333008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.001768350601196289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.001953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.0019860267639160156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.0018837451934814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.0022149085998535156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.0025026798248291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.0022666454315185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.002185344696044922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.0021927356719970703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.02604198455810547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.016683578491210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.04643893241882324"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.0036745071411132812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.001499176025390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.0025815963745117188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.023575544357299805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.09930944442749023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.2653663158416748"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.00827336311340332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.002278566360473633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.001689910888671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.0016434192657470703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.0017383098602294922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.0015802383422851562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.00146484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0014300346374511719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0015096664428710938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.0018839836120605469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.004994869232177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.00931406021118164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.0017597675323486328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.0018706321716308594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.0020766258239746094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.001943349838256836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.002443075180053711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.002570629119873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.002477407455444336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.0021953582763671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.002165555953979492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.025432109832763672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.018111705780029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.29152941703796387"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.003881692886352539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0016162395477294922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.002561807632446289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.02433037757873535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.12142586708068848"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.31896281242370605"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.009662151336669922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.0017659664154052734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.001688241958618164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.0016658306121826172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.0018317699432373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.0016787052154541016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.0016171932220458984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0015668869018554688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0016453266143798828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.002086162567138672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.00513148307800293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.009885072708129883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.002569437026977539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.002086639404296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.002313375473022461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.002022981643676758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.002531290054321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.00270843505859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.002614259719848633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.002218008041381836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.0023031234741210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.025623083114624023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.018514156341552734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.05152773857116699"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.00404047966003418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.0015645027160644531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.0027132034301757812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.024431943893432617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.12348508834838867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.32177162170410156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.009670734405517578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.0022766590118408203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.001722097396850586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.0017435550689697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.0017871856689453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.0016798973083496094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.0015826225280761719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.001520395278930664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0015592575073242188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.0021715164184570312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.005368471145629883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.009971141815185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.0025033950805664062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.0021317005157470703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.0024690628051757812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.002017974853515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.0025789737701416016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.0028314590454101562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.0027303695678710938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.0025625228881835938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.0022742748260498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.026018619537353516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.018677473068237305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.051555633544921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.004031658172607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.0016634464263916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.0025033950805664062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.024179697036743164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.12213778495788574"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.3227822780609131"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.009957313537597656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.002323150634765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0017750263214111328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.0016813278198242188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.001825571060180664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.0016312599182128906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.001544952392578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0016314983367919922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0016276836395263672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.0020720958709716797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.005329608917236328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.009714126586914062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.0017750263214111328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.002126932144165039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.0022521018981933594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.002035379409790039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.002544403076171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.002830028533935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.0025823116302490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.0021665096282958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.002216339111328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.025671005249023438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.018279314041137695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.05395007133483887"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.00401616096496582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0015764236450195312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.0026657581329345703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.024812936782836914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.12344145774841309"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.3203878402709961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.009591341018676758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.0025680065155029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.0016827583312988281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.001659393310546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.001787424087524414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.0016133785247802734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.0015473365783691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.001474142074584961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0015227794647216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.002007722854614258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.005208730697631836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.010084152221679688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.0017557144165039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.0019505023956298828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.0022895336151123047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.0020444393157958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.002532482147216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.0027313232421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.002601146697998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.002223491668701172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.002245187759399414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.025483369827270508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.01823568344116211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.050957441329956055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.003965854644775391"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.0015532970428466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.0025343894958496094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.02431178092956543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.12229657173156738"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.32103633880615234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.009608030319213867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.00231170654296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.0016674995422363281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.0017151832580566406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.0017735958099365234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.0018072128295898438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.0015645027160644531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.0015025138854980469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0015749931335449219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.002019166946411133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.005584239959716797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.010257482528686523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.0017979145050048828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.0020689964294433594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.0022249221801757812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.0019888877868652344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.002591848373413086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.002729177474975586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.0025877952575683594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.0022292137145996094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.002347707748413086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.025511503219604492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.018416404724121094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.05178356170654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.003955841064453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.001567840576171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.0025277137756347656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.024230003356933594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.1222529411315918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.321622371673584"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.009542465209960938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.0022056102752685547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.0017278194427490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.001722097396850586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.0018181800842285156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.0016143321990966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.0015244483947753906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.0014598369598388672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.001531362533569336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.0020864009857177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.005219221115112305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.009818792343139648"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.002023935317993164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.002106189727783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.00232696533203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.0020890235900878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.0025491714477539062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.002699136734008789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.0025205612182617188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.0022008419036865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.0023250579833984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.02613377571105957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.019254446029663086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.05301475524902344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.00395512580871582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.0015959739685058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.0025129318237304688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.023988008499145508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.12066841125488281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.3195209503173828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.009676933288574219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.0018095970153808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0017375946044921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.001972675323486328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.001764535903930664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.0016341209411621094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.0016179084777832031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.0015480518341064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0015959739685058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.002081155776977539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.0052721500396728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.010233402252197266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.0018727779388427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.002013683319091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.002271890640258789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.002035856246948242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.0026242733001708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.0027840137481689453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.0026862621307373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.0023720264434814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.0023276805877685547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.025882482528686523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.018610477447509766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.052559852600097656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.004008054733276367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.0016736984252929688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.002713441848754883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.025116443634033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.1230313777923584"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.32155847549438477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.00995182991027832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.002286195755004883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0017666816711425781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.0017025470733642578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.0017619132995605469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.0016107559204101562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.0015206336975097656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.0015001296997070312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.001569986343383789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.0021758079528808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.00532078742980957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.010303258895874023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.0019099712371826172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.0020864009857177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.0022666454315185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.002088308334350586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.0026328563690185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.00281524658203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.0026133060455322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.0022559165954589844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.002302408218383789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.02623438835144043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.018430471420288086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.051048994064331055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.0038886070251464844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.0015974044799804688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.002581357955932617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.0239870548248291"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.12063455581665039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.32306385040283203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.009528875350952148"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.0021386146545410156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0015444755554199219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.0014929771423339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.0015854835510253906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.0015180110931396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.0013689994812011719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0014123916625976562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0013952255249023438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.001684427261352539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.0034935474395751953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.006322145462036133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.0015308856964111328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.0017440319061279297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.0018405914306640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.0017359256744384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.0021872520446777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.002360105514526367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.002242565155029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.0021486282348632812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.0021936893463134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.025975704193115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.015776634216308594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.047019243240356445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.0036950111389160156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0014767646789550781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.0025234222412109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.022959232330322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.0781404972076416"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.21506285667419434"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.007541656494140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.0022406578063964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0016150474548339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.0015406608581542969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.0017046928405761719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.0014986991882324219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.0014503002166748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.001443624496459961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0014202594757080078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.0018875598907470703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.0036051273345947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.006780862808227539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.0016384124755859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.0019965171813964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.001905679702758789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.001800537109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.0021686553955078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.002507925033569336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.0022335052490234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.0021240711212158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.0021796226501464844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.025402545928955078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.015626192092895508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.04546952247619629"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.003771543502807617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.0014908313751220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.002541065216064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.023442745208740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.07617068290710449"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.2152266502380371"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.007709026336669922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.00234222412109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0018291473388671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.0017235279083251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.0017592906951904297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.0016396045684814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.001493215560913086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.001499176025390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0015151500701904297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.0018775463104248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.0036792755126953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.0067272186279296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.0016014575958251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.0018665790557861328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.0019636154174804688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.0018825531005859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.0022268295288085938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.0024566650390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.0022666454315185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.0021359920501708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.0023462772369384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.025756120681762695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.016569852828979492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.04644012451171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.003907442092895508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.0015354156494140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.0025229454040527344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.022843360900878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.07920527458190918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.21824884414672852"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.0075740814208984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.0021588802337646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0016207695007324219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.0015745162963867188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.0017311573028564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.0016274452209472656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.0014760494232177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0014989376068115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0015172958374023438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.0017819404602050781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.003919839859008789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.006804466247558594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.0016613006591796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.0018558502197265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.002013683319091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.0018601417541503906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.002216339111328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.0024175643920898438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.002315044403076172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.0021872520446777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.002316713333129883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.02562999725341797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.016711711883544922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.046018123626708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.0037674903869628906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0016756057739257812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.002694845199584961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.02381730079650879"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.09988641738891602"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.26696062088012695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.008896827697753906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.0022974014282226562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.0017657279968261719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.0017364025115966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.0017840862274169922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.0017578601837158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.0015292167663574219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.0015037059783935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0015730857849121094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.002020597457885742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.004068136215209961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.007147789001464844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.0017795562744140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.0020303726196289062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.002039670944213867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.0019905567169189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.0023186206817626953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.002637147903442383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.00244140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.0022749900817871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.002187967300415039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.02591085433959961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.016825437545776367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.047269344329833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.0037283897399902344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.0015869140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.002691507339477539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.024773597717285156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.09874081611633301"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.26671552658081055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.008224010467529297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.002170562744140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.0017192363739013672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.0015637874603271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.0016820430755615234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.0015969276428222656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.0014328956604003906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.0014452934265136719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0014247894287109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.0023398399353027344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.004185676574707031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.0074310302734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.001893758773803711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.002035856246948242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.0020728111267089844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.0019505023956298828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.0022974014282226562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.002531290054321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.0022649765014648438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.0022716522216796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.0022192001342773438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.025399208068847656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.017658710479736328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.04773449897766113"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.003773212432861328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.00160980224609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.0025815963745117188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.023790836334228516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.09941673278808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.26758742332458496"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.008545637130737305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.0021605491638183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.0015804767608642578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.00156402587890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.0016298294067382812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.0015769004821777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.001476287841796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.0014302730560302734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0014538764953613281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.001821756362915039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.003875732421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.0067331790924072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.0017139911651611328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.0017936229705810547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.0019075870513916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.0018377304077148438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.0021753311157226562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.002368927001953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.002119302749633789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.0021147727966308594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.002173185348510742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.025641918182373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.01666712760925293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.04576301574707031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.003594636917114258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.0014824867248535156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.0024695396423339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.023440122604370117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.09787201881408691"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.2670307159423828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.008336782455444336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.002206563949584961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0016736984252929688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.0017087459564208984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.0016963481903076172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.001573801040649414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.0014681816101074219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.0014791488647460938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0015194416046142578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.0018727779388427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.003996133804321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.007269144058227539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.0017452239990234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.0018837451934814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.0022459030151367188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.001874685287475586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.002296924591064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.0025262832641601562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.002340555191040039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.0021843910217285156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.0021636486053466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.025536298751831055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.01734018325805664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.048406124114990234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.0036835670471191406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.001524209976196289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.0027048587799072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.024714946746826172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.10078573226928711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.2696197032928467"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.008815288543701172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.0024101734161376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.001722574234008789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.0017290115356445312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.0018246173858642578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.001653432846069336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.0014715194702148438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.0015246868133544922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0015141963958740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.0019037723541259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.004168033599853516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.0074803829193115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.001712799072265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.0018804073333740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.002122640609741211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.0020253658294677734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.0023093223571777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.002418994903564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.0023071765899658203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.002172231674194336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.0021941661834716797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.025537729263305664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.01653599739074707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.04683113098144531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.0036830902099609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.0015184879302978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.002659320831298828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.023677349090576172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.09835290908813477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.26584362983703613"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.008552789688110352"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;0]" time="0.00223541259765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;1]" time="0.0015869140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;2]" time="0.0015118122100830078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;3]" time="0.001512765884399414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;4]" time="0.001458883285522461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;5]" time="0.001451253890991211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;6]" time="0.0014324188232421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;7]" time="0.0015435218811035156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;8]" time="0.004740715026855469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;9]" time="0.008568525314331055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;10]" time="0.0019040107727050781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;11]" time="0.0019145011901855469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;12]" time="0.0019223690032958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;13]" time="0.0017867088317871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;14]" time="0.0019683837890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;15]" time="0.002306699752807617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;16]" time="0.0021059513092041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;17]" time="0.0019829273223876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;18]" time="0.0017960071563720703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;19]" time="0.0030777454376220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;20]" time="0.015491008758544922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;21]" time="0.03562569618225098"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;22]" time="0.0021393299102783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;23]" time="0.0016601085662841797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;24]" time="0.005510091781616211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;25]" time="0.11708974838256836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;26]" time="0.26609301567077637"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;0]" time="0.0022881031036376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;1]" time="0.0015969276428222656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;2]" time="0.0016252994537353516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;3]" time="0.0015826225280761719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;4]" time="0.001491546630859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;5]" time="0.0014455318450927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;6]" time="0.0014045238494873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;7]" time="0.001596212387084961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;8]" time="0.0048558712005615234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;9]" time="0.00886225700378418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;10]" time="0.002018451690673828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;11]" time="0.0020685195922851562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;12]" time="0.0019426345825195312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;13]" time="0.0017459392547607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;14]" time="0.001992464065551758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;15]" time="0.0022194385528564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;16]" time="0.002147674560546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;17]" time="0.001894235610961914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;18]" time="0.00183868408203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;19]" time="0.003170013427734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;20]" time="0.016379594802856445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;21]" time="0.03489542007446289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;22]" time="0.002190113067626953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;23]" time="0.0015959739685058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;24]" time="0.0057392120361328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;25]" time="0.11587953567504883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;26]" time="0.270672082901001"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;0]" time="0.002341032028198242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;1]" time="0.0016944408416748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;2]" time="0.0016472339630126953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;3]" time="0.001718759536743164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;4]" time="0.001527547836303711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;5]" time="0.0015878677368164062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;6]" time="0.0015308856964111328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;7]" time="0.001699686050415039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;8]" time="0.0051076412200927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;9]" time="0.009243011474609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;10]" time="0.002125263214111328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;11]" time="0.002157449722290039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;12]" time="0.002026081085205078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;13]" time="0.0018849372863769531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;14]" time="0.002123117446899414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;15]" time="0.002362966537475586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;16]" time="0.0022339820861816406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;17]" time="0.0021066665649414062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;18]" time="0.0019578933715820312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;19]" time="0.0034453868865966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;20]" time="0.01583695411682129"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;21]" time="0.035532474517822266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;22]" time="0.002109527587890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;23]" time="0.0015933513641357422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;24]" time="0.0057260990142822266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;25]" time="0.11614751815795898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;26]" time="0.2673153877258301"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;0]" time="0.0031316280364990234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;1]" time="0.002288341522216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;2]" time="0.0022792816162109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;3]" time="0.0024683475494384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;4]" time="0.0022246837615966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;5]" time="0.0019466876983642578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;6]" time="0.001970529556274414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;7]" time="0.002502918243408203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;8]" time="0.01672840118408203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;9]" time="0.034551143646240234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;10]" time="0.004397153854370117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;11]" time="0.0038132667541503906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;12]" time="0.003710508346557617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;13]" time="0.003016233444213867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;14]" time="0.003831148147583008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;15]" time="0.004784107208251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;16]" time="0.004458189010620117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;17]" time="0.002642393112182617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;18]" time="0.0026209354400634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;19]" time="0.004955768585205078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;20]" time="0.03920173645019531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;21]" time="0.09352779388427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;22]" time="0.002778291702270508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;23]" time="0.002097606658935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;24]" time="0.01592564582824707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;25]" time="0.4855532646179199"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;26]" time="1.1345069408416748"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;0]" time="0.0033926963806152344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;1]" time="0.003066539764404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;2]" time="0.0021905899047851562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;3]" time="0.0023186206817626953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;4]" time="0.0021865367889404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;5]" time="0.0019521713256835938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;6]" time="0.0018908977508544922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;7]" time="0.002486705780029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;8]" time="0.016564130783081055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;9]" time="0.0336153507232666"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;10]" time="0.0041429996490478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;11]" time="0.0037140846252441406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;12]" time="0.0036084651947021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;13]" time="0.0028879642486572266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;14]" time="0.003881692886352539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;15]" time="0.004563331604003906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;16]" time="0.0044634342193603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;17]" time="0.0025789737701416016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;18]" time="0.0024111270904541016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;19]" time="0.005162477493286133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;20]" time="0.039878129959106445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;21]" time="0.09461688995361328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;22]" time="0.0026009082794189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;23]" time="0.002005338668823242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;24]" time="0.015507221221923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;25]" time="0.4821126461029053"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;26]" time="1.1326193809509277"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;0]" time="0.003026723861694336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;1]" time="0.002176046371459961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;2]" time="0.002319812774658203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;3]" time="0.0024061203002929688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;4]" time="0.0021343231201171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;5]" time="0.0019347667694091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;6]" time="0.0018601417541503906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;7]" time="0.0024344921112060547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;8]" time="0.01638627052307129"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;9]" time="0.0337681770324707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;10]" time="0.004212141036987305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;11]" time="0.0036802291870117188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;12]" time="0.003627777099609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;13]" time="0.002871274948120117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;14]" time="0.0037145614624023438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;15]" time="0.004468441009521484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;16]" time="0.004319429397583008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;17]" time="0.0026760101318359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;18]" time="0.002378702163696289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;19]" time="0.004759788513183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;20]" time="0.03751230239868164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;21]" time="0.09175395965576172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;22]" time="0.0026178359985351562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;23]" time="0.0020172595977783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;24]" time="0.015151739120483398"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;25]" time="0.484668493270874"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;26]" time="1.135869026184082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;0]" time="0.002155303955078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;1]" time="0.0014674663543701172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;2]" time="0.001318216323852539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;3]" time="0.0012984275817871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;4]" time="0.0012090206146240234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;5]" time="0.0012691020965576172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;6]" time="0.0017251968383789062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;7]" time="0.001865386962890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;8]" time="0.0028595924377441406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;9]" time="0.0023136138916015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;10]" time="0.0015788078308105469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;11]" time="0.001543283462524414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;12]" time="0.0014767646789550781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;13]" time="0.0013909339904785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;14]" time="0.00140380859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;15]" time="0.0014719963073730469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;16]" time="0.0015017986297607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;17]" time="0.001764535903930664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;18]" time="0.0016562938690185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;19]" time="0.002501964569091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;20]" time="0.009183168411254883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;21]" time="0.019173145294189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;22]" time="0.0019068717956542969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;23]" time="0.0013327598571777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;24]" time="0.00241851806640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;25]" time="0.024308204650878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;26]" time="0.05375838279724121"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;0]" time="0.001961231231689453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;1]" time="0.001463174819946289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;2]" time="0.00141143798828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;3]" time="0.0013439655303955078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;4]" time="0.0012929439544677734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;5]" time="0.001308441162109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;6]" time="0.0014150142669677734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;7]" time="0.0013761520385742188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;8]" time="0.0017704963684082031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;9]" time="0.0024819374084472656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;10]" time="0.0014867782592773438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;11]" time="0.001529693603515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;12]" time="0.001542806625366211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;13]" time="0.0014758110046386719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;14]" time="0.0015950202941894531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;15]" time="0.001617431640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;16]" time="0.001569986343383789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;17]" time="0.0017981529235839844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;18]" time="0.0017039775848388672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;19]" time="0.0026922225952148438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;20]" time="0.009392738342285156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;21]" time="0.01980137825012207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;22]" time="0.001947641372680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;23]" time="0.0014846324920654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;24]" time="0.002605438232421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;25]" time="0.024821758270263672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;26]" time="0.0555112361907959"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;0]" time="0.0021276473999023438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;1]" time="0.0015475749969482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;2]" time="0.0014467239379882812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;3]" time="0.001514434814453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;4]" time="0.0014450550079345703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;5]" time="0.0014426708221435547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;6]" time="0.0013399124145507812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;7]" time="0.001363515853881836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;8]" time="0.0018818378448486328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;9]" time="0.0026404857635498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;10]" time="0.001644134521484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;11]" time="0.0015926361083984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;12]" time="0.0015401840209960938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;13]" time="0.0015439987182617188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;14]" time="0.001589059829711914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;15]" time="0.001737356185913086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;16]" time="0.001619577407836914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;17]" time="0.0019288063049316406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;18]" time="0.0018167495727539062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;19]" time="0.0028679370880126953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;20]" time="0.010261058807373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;21]" time="0.020444869995117188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;22]" time="0.0019369125366210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;23]" time="0.0015282630920410156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;24]" time="0.002590179443359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;25]" time="0.02472829818725586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;26]" time="0.054930686950683594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;0]" time="0.003125429153442383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;1]" time="0.0023140907287597656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;2]" time="0.002239704132080078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;3]" time="0.0023915767669677734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;4]" time="0.0020313262939453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;5]" time="0.0018889904022216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;6]" time="0.0018610954284667969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;7]" time="0.0024111270904541016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;8]" time="0.016739368438720703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;9]" time="0.03467249870300293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;10]" time="0.0040166378021240234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;11]" time="0.0038993358612060547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;12]" time="0.00360870361328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;13]" time="0.00298309326171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;14]" time="0.003539562225341797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;15]" time="0.0045452117919921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;16]" time="0.004274129867553711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;17]" time="0.0025212764739990234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;18]" time="0.0023796558380126953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;19]" time="0.004806041717529297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;20]" time="0.03800678253173828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;21]" time="0.0945425033569336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;22]" time="0.002634763717651367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;23]" time="0.00208282470703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;24]" time="0.018361806869506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;25]" time="0.4876823425292969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;26]" time="1.1389198303222656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;0]" time="0.0031147003173828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;1]" time="0.002371072769165039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;2]" time="0.0023403167724609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;3]" time="0.0024933815002441406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;4]" time="0.0023658275604248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;5]" time="0.0019490718841552734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;6]" time="0.0019571781158447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;7]" time="0.002574443817138672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;8]" time="0.017078399658203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;9]" time="0.03421425819396973"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;10]" time="0.00403904914855957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;11]" time="0.003704547882080078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;12]" time="0.003584623336791992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;13]" time="0.0029146671295166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;14]" time="0.003573179244995117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;15]" time="0.004538297653198242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;16]" time="0.004179716110229492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;17]" time="0.0025069713592529297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;18]" time="0.0023870468139648438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;19]" time="0.004643440246582031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;20]" time="0.03781914710998535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;21]" time="0.09095191955566406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;22]" time="0.0026760101318359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;23]" time="0.0019159317016601562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;24]" time="0.015004158020019531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;25]" time="0.48196983337402344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;26]" time="1.13741135597229"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;0]" time="0.003403902053833008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;1]" time="0.0028350353240966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;2]" time="0.002741098403930664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;3]" time="0.0028510093688964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;4]" time="0.0025777816772460938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;5]" time="0.0024042129516601562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;6]" time="0.0022683143615722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;7]" time="0.002947092056274414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;8]" time="0.017538070678710938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;9]" time="0.0359342098236084"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;10]" time="0.004860877990722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;11]" time="0.0044214725494384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;12]" time="0.004137277603149414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;13]" time="0.0038352012634277344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;14]" time="0.004982471466064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;15]" time="0.005717039108276367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;16]" time="0.005152463912963867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;17]" time="0.003133058547973633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;18]" time="0.00301361083984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;19]" time="0.005957841873168945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;20]" time="0.043311357498168945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;21]" time="0.10666179656982422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;22]" time="0.002737760543823242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;23]" time="0.0021855831146240234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;24]" time="0.016759634017944336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;25]" time="0.4867227077484131"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;26]" time="1.1254830360412598"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;0]" time="0.002603769302368164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;1]" time="0.001943349838256836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;2]" time="0.0017304420471191406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;3]" time="0.0019474029541015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;4]" time="0.0018229484558105469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;5]" time="0.0016214847564697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;6]" time="0.0015587806701660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;7]" time="0.0019807815551757812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;8]" time="0.011404037475585938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;9]" time="0.021349430084228516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;10]" time="0.0035619735717773438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;11]" time="0.0027675628662109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;12]" time="0.0027036666870117188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;13]" time="0.0022673606872558594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;14]" time="0.002688884735107422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;15]" time="0.0033524036407470703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;16]" time="0.0030736923217773438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;17]" time="0.0022792816162109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;18]" time="0.0020797252655029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;19]" time="0.004092216491699219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;20]" time="0.030068159103393555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;21]" time="0.06820225715637207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;22]" time="0.0023376941680908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;23]" time="0.0016705989837646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;24]" time="0.011498212814331055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;25]" time="0.3645288944244385"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;26]" time="0.8474571704864502"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;0]" time="0.002739429473876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;1]" time="0.0019829273223876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;2]" time="0.002035856246948242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;3]" time="0.0022139549255371094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;4]" time="0.0019109249114990234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;5]" time="0.001689910888671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;6]" time="0.0017719268798828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;7]" time="0.001984834671020508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;8]" time="0.010947465896606445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;9]" time="0.02162337303161621"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;10]" time="0.00313568115234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;11]" time="0.0028429031372070312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;12]" time="0.002710580825805664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;13]" time="0.002363920211791992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;14]" time="0.0027904510498046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;15]" time="0.003337383270263672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;16]" time="0.0033533573150634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;17]" time="0.0021758079528808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;18]" time="0.0019583702087402344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;19]" time="0.003952503204345703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;20]" time="0.03046560287475586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;21]" time="0.06841826438903809"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;22]" time="0.0022993087768554688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;23]" time="0.0016758441925048828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;24]" time="0.011540412902832031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;25]" time="0.35704827308654785"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;26]" time="0.8603312969207764"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;0]" time="0.0027382373809814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;1]" time="0.002028942108154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;2]" time="0.0019986629486083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;3]" time="0.0020148754119873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;4]" time="0.001791238784790039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;5]" time="0.0016202926635742188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;6]" time="0.0016026496887207031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;7]" time="0.001980304718017578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;8]" time="0.011168479919433594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;9]" time="0.021632671356201172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;10]" time="0.0037038326263427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;11]" time="0.0028417110443115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;12]" time="0.0026786327362060547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;13]" time="0.0023910999298095703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;14]" time="0.002823352813720703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;15]" time="0.0033409595489501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;16]" time="0.0033240318298339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;17]" time="0.0021848678588867188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;18]" time="0.0023179054260253906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;19]" time="0.004073143005371094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;20]" time="0.029993772506713867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;21]" time="0.07105469703674316"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;22]" time="0.0024118423461914062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;23]" time="0.0017216205596923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;24]" time="0.012159585952758789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;25]" time="0.3617219924926758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;26]" time="0.8437089920043945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;0]" time="0.001994609832763672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;1]" time="0.0015177726745605469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;2]" time="0.001407623291015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;3]" time="0.001346588134765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;4]" time="0.0013167858123779297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;5]" time="0.0012748241424560547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;6]" time="0.0013873577117919922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;7]" time="0.0012896060943603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;8]" time="0.001459360122680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;9]" time="0.0016744136810302734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;10]" time="0.0014050006866455078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;11]" time="0.0013813972473144531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;12]" time="0.0014681816101074219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;13]" time="0.0013692378997802734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;14]" time="0.0013556480407714844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;15]" time="0.0014719963073730469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;16]" time="0.0014119148254394531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;17]" time="0.0017180442810058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;18]" time="0.0016596317291259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;19]" time="0.002531766891479492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;20]" time="0.008789539337158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;21]" time="0.018718242645263672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;22]" time="0.001806020736694336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;23]" time="0.001285552978515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;24]" time="0.0024154186248779297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;25]" time="0.02351093292236328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;26]" time="0.055075883865356445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;0]" time="0.0019366741180419922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;1]" time="0.0014176368713378906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;2]" time="0.0014591217041015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;3]" time="0.0013968944549560547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;4]" time="0.0013384819030761719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;5]" time="0.00131988525390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;6]" time="0.0012919902801513672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;7]" time="0.0013446807861328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;8]" time="0.0016660690307617188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;9]" time="0.002338886260986328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;10]" time="0.0014879703521728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;11]" time="0.0014734268188476562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;12]" time="0.0014755725860595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;13]" time="0.0014636516571044922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;14]" time="0.0015091896057128906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;15]" time="0.001520395278930664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;16]" time="0.0015273094177246094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;17]" time="0.0017974376678466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;18]" time="0.001604318618774414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;19]" time="0.002422809600830078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;20]" time="0.008930444717407227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;21]" time="0.018953561782836914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;22]" time="0.0020034313201904297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;23]" time="0.0014274120330810547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;24]" time="0.0024459362030029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;25]" time="0.023798227310180664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;26]" time="0.05362963676452637"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;0]" time="0.0019328594207763672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;1]" time="0.0015172958374023438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;2]" time="0.0013699531555175781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;3]" time="0.0013637542724609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;4]" time="0.0012807846069335938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;5]" time="0.0013034343719482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;6]" time="0.00133514404296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;7]" time="0.0013089179992675781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;8]" time="0.001649618148803711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;9]" time="0.0024764537811279297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;10]" time="0.0015244483947753906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;11]" time="0.0015017986297607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;12]" time="0.0015017986297607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;13]" time="0.0013988018035888672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;14]" time="0.001500844955444336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;15]" time="0.0015065670013427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;16]" time="0.00151824951171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;17]" time="0.001745462417602539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;18]" time="0.0016815662384033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;19]" time="0.0026149749755859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;20]" time="0.009008646011352539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;21]" time="0.019581079483032227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;22]" time="0.001840829849243164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;23]" time="0.0014500617980957031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;24]" time="0.00254058837890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;25]" time="0.02398085594177246"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;26]" time="0.054320573806762695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;0]" time="0.0017926692962646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;1]" time="0.0013747215270996094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;2]" time="0.0011982917785644531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;3]" time="0.0013041496276855469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;4]" time="0.001192331314086914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;5]" time="0.0012407302856445312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;6]" time="0.00121307373046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;7]" time="0.0012030601501464844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;8]" time="0.0019452571868896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;9]" time="0.0029594898223876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;10]" time="0.001512765884399414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;11]" time="0.0014522075653076172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;12]" time="0.0016427040100097656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;13]" time="0.0015742778778076172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;14]" time="0.0015230178833007812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;15]" time="0.0018815994262695312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;16]" time="0.0020329952239990234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;17]" time="0.001984834671020508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;18]" time="0.03104424476623535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;19]" time="0.022735118865966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;20]" time="0.00397944450378418"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;21]" time="0.003745555877685547"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;22]" time="0.002544403076171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;23]" time="0.031094074249267578"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;24]" time="0.061491966247558594"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;0]" time="0.00376129150390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;1]" time="0.001542806625366211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;2]" time="0.0054666996002197266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;3]" time="0.004775047302246094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;4]" time="0.0046939849853515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;5]" time="0.0028052330017089844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;6]" time="0.0015048980712890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;7]" time="0.005762577056884766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;8]" time="0.011030197143554688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;9]" time="0.019026517868041992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;10]" time="0.005497455596923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;11]" time="0.001865386962890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;12]" time="0.010484933853149414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;13]" time="0.007513284683227539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;14]" time="0.009371280670166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;15]" time="0.0038290023803710938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;16]" time="0.002353668212890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;17]" time="0.007135868072509766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;18]" time="0.0392613410949707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;19]" time="0.0390777587890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;20]" time="0.003498554229736328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;21]" time="0.0026922225952148438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;22]" time="0.007409572601318359"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;23]" time="0.03744339942932129"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;24]" time="0.07576727867126465"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;0]" time="0.002351522445678711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;1]" time="0.001338958740234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;2]" time="0.002359151840209961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;3]" time="0.002038717269897461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;4]" time="0.002135753631591797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;5]" time="0.0015842914581298828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;6]" time="0.0012807846069335938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;7]" time="0.002331972122192383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;8]" time="0.003936290740966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;9]" time="0.0062711238861083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;10]" time="0.0021638870239257812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;11]" time="0.001522064208984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;12]" time="0.003875732421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;13]" time="0.003134012222290039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;14]" time="0.003626585006713867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;15]" time="0.002291440963745117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;16]" time="0.001934051513671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;17]" time="0.0032672882080078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;18]" time="0.03131604194641113"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;19]" time="0.026998519897460938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;20]" time="0.0021948814392089844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;21]" time="0.0023758411407470703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;22]" time="0.0039255619049072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;23]" time="0.03006601333618164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;24]" time="0.0634012222290039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;0]" time="0.0024421215057373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;1]" time="0.0013327598571777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;2]" time="0.002309560775756836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;3]" time="0.001992464065551758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;4]" time="0.0020933151245117188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;5]" time="0.0015022754669189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;6]" time="0.0012156963348388672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;7]" time="0.0023632049560546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;8]" time="0.003882884979248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;9]" time="0.006494045257568359"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;10]" time="0.002214193344116211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;11]" time="0.0014503002166748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;12]" time="0.0037631988525390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;13]" time="0.003009796142578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;14]" time="0.0035326480865478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;15]" time="0.0022318363189697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;16]" time="0.0020101070404052734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;17]" time="0.003322601318359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;18]" time="0.031071901321411133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;19]" time="0.025764942169189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;20]" time="0.002279043197631836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;21]" time="0.002277851104736328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;22]" time="0.0041234493255615234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;23]" time="0.030169248580932617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;24]" time="0.06300854682922363"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;0]" time="0.0017349720001220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;1]" time="0.0012454986572265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;2]" time="0.0011742115020751953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;3]" time="0.0011582374572753906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;4]" time="0.0011470317840576172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;5]" time="0.0011899471282958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;6]" time="0.0011162757873535156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;7]" time="0.0011892318725585938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;8]" time="0.0016093254089355469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;9]" time="0.0019807815551757812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;10]" time="0.0013337135314941406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;11]" time="0.0013260841369628906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;12]" time="0.0013802051544189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;13]" time="0.0015125274658203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;14]" time="0.0014050006866455078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;15]" time="0.0017910003662109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;16]" time="0.001990079879760742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;17]" time="0.0020995140075683594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;18]" time="0.029074430465698242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;19]" time="0.02193760871887207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;20]" time="0.0016794204711914062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;21]" time="0.0024013519287109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;22]" time="0.003023862838745117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;23]" time="0.028285741806030273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;24]" time="0.05830550193786621"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;0]" time="0.0016636848449707031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;1]" time="0.0013365745544433594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;2]" time="0.0011858940124511719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;3]" time="0.001195669174194336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;4]" time="0.0011489391326904297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;5]" time="0.0011785030364990234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;6]" time="0.0012047290802001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;7]" time="0.001148223876953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;8]" time="0.0014486312866210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;9]" time="0.0016112327575683594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;10]" time="0.0013785362243652344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;11]" time="0.001384735107421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;12]" time="0.0014336109161376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;13]" time="0.0013384819030761719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;14]" time="0.0013997554779052734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;15]" time="0.0017657279968261719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;16]" time="0.0019004344940185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;17]" time="0.0019855499267578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;18]" time="0.0288238525390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;19]" time="0.021335840225219727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;20]" time="0.0016467571258544922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;21]" time="0.0023331642150878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;22]" time="0.0028150081634521484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;23]" time="0.028424501419067383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;24]" time="0.05862879753112793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;0]" time="0.0017120838165283203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;1]" time="0.0013096332550048828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;2]" time="0.0011563301086425781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;3]" time="0.001157999038696289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;4]" time="0.0011525154113769531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;5]" time="0.0012292861938476562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;6]" time="0.0011870861053466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;7]" time="0.001184701919555664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;8]" time="0.0016252994537353516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;9]" time="0.0021851062774658203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;10]" time="0.0014255046844482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;11]" time="0.0013194084167480469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;12]" time="0.0014140605926513672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;13]" time="0.0014548301696777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;14]" time="0.001461029052734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;15]" time="0.002125978469848633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;16]" time="0.0019681453704833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;17]" time="0.0019712448120117188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;18]" time="0.029322147369384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;19]" time="0.02178645133972168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;20]" time="0.0016238689422607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;21]" time="0.0023326873779296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;22]" time="0.0027666091918945312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;23]" time="0.02775406837463379"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;24]" time="0.060320377349853516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;0]" time="0.0017669200897216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;1]" time="0.0013337135314941406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;2]" time="0.001165151596069336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;3]" time="0.001224517822265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;4]" time="0.0011525154113769531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;5]" time="0.0011959075927734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;6]" time="0.0011875629425048828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;7]" time="0.001157999038696289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;8]" time="0.0014052391052246094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;9]" time="0.0015881061553955078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;10]" time="0.001417398452758789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;11]" time="0.0013649463653564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;12]" time="0.0014560222625732422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;13]" time="0.0014619827270507812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;14]" time="0.0014007091522216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;15]" time="0.0018067359924316406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;16]" time="0.0019445419311523438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;17]" time="0.0021064281463623047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;18]" time="0.029136180877685547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;19]" time="0.021877288818359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;20]" time="0.0017504692077636719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;21]" time="0.002391815185546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;22]" time="0.0028133392333984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;23]" time="0.02820587158203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;24]" time="0.05916094779968262"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;0]" time="0.0026481151580810547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;1]" time="0.0017595291137695312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;2]" time="0.0016770362854003906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;3]" time="0.001691579818725586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;4]" time="0.0016601085662841797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;5]" time="0.001665353775024414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;6]" time="0.0015797615051269531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;7]" time="0.0015959739685058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;8]" time="0.0017540454864501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;9]" time="0.0018815994262695312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;10]" time="0.0018458366394042969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;11]" time="0.0018513202667236328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;12]" time="0.0016818046569824219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;13]" time="0.0018393993377685547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;14]" time="0.0017774105072021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;15]" time="0.0017931461334228516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;16]" time="0.001745462417602539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;17]" time="0.0019664764404296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;18]" time="0.0019426345825195312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;19]" time="0.002784252166748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;20]" time="0.009369134902954102"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;21]" time="0.01929330825805664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;22]" time="0.002238035202026367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;23]" time="0.001607656478881836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;24]" time="0.002629518508911133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;25]" time="0.023972511291503906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;26]" time="0.05341362953186035"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;0]" time="0.0023336410522460938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;1]" time="0.0017344951629638672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;2]" time="0.0016121864318847656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;3]" time="0.0016078948974609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;4]" time="0.001600503921508789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;5]" time="0.0015473365783691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;6]" time="0.0015494823455810547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;7]" time="0.0016405582427978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;8]" time="0.0019719600677490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;9]" time="0.0023758411407470703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;10]" time="0.0017790794372558594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;11]" time="0.001837015151977539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;12]" time="0.0018110275268554688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;13]" time="0.0017354488372802734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;14]" time="0.0017571449279785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;15]" time="0.0018756389617919922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;16]" time="0.0017917156219482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;17]" time="0.0019288063049316406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;18]" time="0.0018851757049560547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;19]" time="0.002791881561279297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;20]" time="0.009081840515136719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;21]" time="0.019245386123657227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;22]" time="0.0023686885833740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;23]" time="0.0016512870788574219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;24]" time="0.0028531551361083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;25]" time="0.02423381805419922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;26]" time="0.053994178771972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;0]" time="0.002485990524291992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;1]" time="0.0017290115356445312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;2]" time="0.0016646385192871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;3]" time="0.0016741752624511719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;4]" time="0.0016465187072753906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;5]" time="0.0015594959259033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;6]" time="0.0016283988952636719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;7]" time="0.0016510486602783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;8]" time="0.0019817352294921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;9]" time="0.0031206607818603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;10]" time="0.0019311904907226562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;11]" time="0.002045869827270508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;12]" time="0.0019538402557373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;13]" time="0.0019502639770507812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;14]" time="0.0019314289093017578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;15]" time="0.002036571502685547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;16]" time="0.0019969940185546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;17]" time="0.002170562744140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;18]" time="0.002101898193359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;19]" time="0.0029900074005126953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;20]" time="0.009600162506103516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;21]" time="0.019668102264404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;22]" time="0.0022323131561279297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;23]" time="0.0015571117401123047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;24]" time="0.0027124881744384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;25]" time="0.02387380599975586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;26]" time="0.05564546585083008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;0]" time="0.0024046897888183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;1]" time="0.0017118453979492188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;2]" time="0.0017044544219970703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;3]" time="0.001659393310546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;4]" time="0.0018134117126464844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;5]" time="0.0016562938690185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;6]" time="0.0016503334045410156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;7]" time="0.0016982555389404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;8]" time="0.0028400421142578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;9]" time="0.004442691802978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;10]" time="0.001917123794555664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;11]" time="0.0018994808197021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;12]" time="0.0018744468688964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;13]" time="0.0018208026885986328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;14]" time="0.001772165298461914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;15]" time="0.0018668174743652344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;16]" time="0.001958131790161133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;17]" time="0.0020644664764404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;18]" time="0.0019435882568359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;19]" time="0.0028581619262695312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;20]" time="0.010484457015991211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;21]" time="0.022345781326293945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;22]" time="0.0020089149475097656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;23]" time="0.00177001953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;24]" time="0.002823352813720703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;25]" time="0.02512383460998535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;26]" time="0.05687689781188965"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;0]" time="0.0023567676544189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;1]" time="0.0016562938690185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;2]" time="0.0016901493072509766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;3]" time="0.0016148090362548828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;4]" time="0.0016524791717529297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;5]" time="0.0015625953674316406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;6]" time="0.0015187263488769531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;7]" time="0.0015549659729003906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;8]" time="0.0028810501098632812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;9]" time="0.004782915115356445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;10]" time="0.001909494400024414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;11]" time="0.0019221305847167969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;12]" time="0.0018351078033447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;13]" time="0.0018391609191894531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;14]" time="0.001819610595703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;15]" time="0.0019500255584716797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;16]" time="0.0018682479858398438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;17]" time="0.00200653076171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;18]" time="0.0018684864044189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;19]" time="0.0027801990509033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;20]" time="0.010577678680419922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;21]" time="0.022126197814941406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;22]" time="0.0021429061889648438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;23]" time="0.0016200542449951172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;24]" time="0.002696990966796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;25]" time="0.02486443519592285"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;26]" time="0.056601524353027344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;0]" time="0.002389669418334961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;1]" time="0.0017032623291015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;2]" time="0.0017075538635253906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;3]" time="0.001766204833984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;4]" time="0.0016415119171142578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;5]" time="0.0015914440155029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;6]" time="0.001649618148803711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;7]" time="0.0015974044799804688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;8]" time="0.0028188228607177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;9]" time="0.00458216667175293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;10]" time="0.0018634796142578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;11]" time="0.0018150806427001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;12]" time="0.0018188953399658203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;13]" time="0.0018298625946044922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;14]" time="0.0018246173858642578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;15]" time="0.001918792724609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;16]" time="0.0019457340240478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;17]" time="0.0020470619201660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;18]" time="0.0019109249114990234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;19]" time="0.002853870391845703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;20]" time="0.010443925857543945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;21]" time="0.022475004196166992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;22]" time="0.002379179000854492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;23]" time="0.0016713142395019531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;24]" time="0.0028858184814453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;25]" time="0.025144338607788086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;26]" time="0.05644083023071289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;0]" time="0.0034987926483154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;1]" time="0.0025186538696289062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;2]" time="0.002443552017211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;3]" time="0.002638101577758789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;4]" time="0.0025277137756347656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;5]" time="0.0024373531341552734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;6]" time="0.0025370121002197266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;7]" time="0.002633333206176758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;8]" time="0.006376743316650391"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;9]" time="0.011690378189086914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;10]" time="0.003427267074584961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;11]" time="0.0033249855041503906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;12]" time="0.0033025741577148438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;13]" time="0.003026723861694336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;14]" time="0.0032434463500976562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;15]" time="0.0035774707794189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;16]" time="0.0034279823303222656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;17]" time="0.0028929710388183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;18]" time="0.002816915512084961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;19]" time="0.003834962844848633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;20]" time="0.013611555099487305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;21]" time="0.02904534339904785"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;22]" time="0.003211498260498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;23]" time="0.002453327178955078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;24]" time="0.0036263465881347656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;25]" time="0.028225183486938477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;26]" time="0.06310129165649414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;0]" time="0.0034749507904052734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;1]" time="0.002567291259765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;2]" time="0.0024564266204833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;3]" time="0.0025556087493896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;4]" time="0.0024993419647216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;5]" time="0.002429485321044922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;6]" time="0.0024106502532958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;7]" time="0.0025777816772460938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;8]" time="0.006391286849975586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;9]" time="0.011846303939819336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;10]" time="0.0034437179565429688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;11]" time="0.003345489501953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;12]" time="0.003251314163208008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;13]" time="0.0029714107513427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;14]" time="0.003265857696533203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;15]" time="0.0035958290100097656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;16]" time="0.003480195999145508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;17]" time="0.002910137176513672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;18]" time="0.002867460250854492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;19]" time="0.0039615631103515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;20]" time="0.013645172119140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;21]" time="0.02893352508544922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;22]" time="0.0031664371490478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;23]" time="0.0024101734161376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;24]" time="0.003586292266845703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;25]" time="0.02833271026611328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;26]" time="0.06321144104003906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;0]" time="0.0034241676330566406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;1]" time="0.002646207809448242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;2]" time="0.0025572776794433594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;3]" time="0.0025653839111328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;4]" time="0.002530813217163086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;5]" time="0.002549886703491211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;6]" time="0.002370595932006836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;7]" time="0.0025615692138671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;8]" time="0.006484508514404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;9]" time="0.012007713317871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;10]" time="0.003455638885498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;11]" time="0.0033016204833984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;12]" time="0.0033931732177734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;13]" time="0.0031464099884033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;14]" time="0.0032918453216552734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;15]" time="0.003452301025390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;16]" time="0.0034334659576416016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;17]" time="0.0028815269470214844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;18]" time="0.004484653472900391"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;19]" time="0.003979206085205078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;20]" time="0.013771533966064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;21]" time="0.029456615447998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;22]" time="0.002959728240966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;23]" time="0.0023229122161865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;24]" time="0.003679513931274414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;25]" time="0.028770923614501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;26]" time="0.06412696838378906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;0]" time="0.0027947425842285156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;1]" time="0.0021300315856933594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;2]" time="0.003243684768676758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;3]" time="0.004226207733154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;4]" time="0.0050160884857177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;5]" time="0.002035379409790039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;6]" time="0.0019049644470214844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;7]" time="0.0032567977905273438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;8]" time="0.004466056823730469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;9]" time="0.005663871765136719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;10]" time="0.002434253692626953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;11]" time="0.004460334777832031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;12]" time="0.004314899444580078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;13]" time="0.003660917282104492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;14]" time="0.004386186599731445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;15]" time="0.006136655807495117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;16]" time="0.00802469253540039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;17]" time="0.002586841583251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;18]" time="0.0024847984313964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;19]" time="0.004548549652099609"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;20]" time="0.01289820671081543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;21]" time="0.023947954177856445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;22]" time="0.0026290416717529297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;23]" time="0.0019652843475341797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;24]" time="0.004342794418334961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;25]" time="0.026978731155395508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;26]" time="0.060506582260131836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;0]" time="0.002935171127319336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;1]" time="0.002104520797729492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;2]" time="0.0032575130462646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;3]" time="0.004225254058837891"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;4]" time="0.004986763000488281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;5]" time="0.001965045928955078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;6]" time="0.0020139217376708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;7]" time="0.003253459930419922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;8]" time="0.004604816436767578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;9]" time="0.006056547164916992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;10]" time="0.00231170654296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;11]" time="0.004523515701293945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;12]" time="0.0043621063232421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;13]" time="0.003595113754272461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;14]" time="0.004354715347290039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;15]" time="0.006224632263183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;16]" time="0.007852554321289062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;17]" time="0.0025892257690429688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;18]" time="0.0024886131286621094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;19]" time="0.004572391510009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;20]" time="0.012818098068237305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;21]" time="0.02395009994506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;22]" time="0.002687215805053711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;23]" time="0.0020182132720947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;24]" time="0.004350423812866211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;25]" time="0.026905298233032227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;26]" time="0.0579226016998291"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;0]" time="0.002890348434448242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;1]" time="0.0021209716796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;2]" time="0.0032656192779541016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;3]" time="0.004228115081787109"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;4]" time="0.00519561767578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;5]" time="0.0019338130950927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;6]" time="0.0019648075103759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;7]" time="0.003355264663696289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;8]" time="0.004739522933959961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;9]" time="0.006242036819458008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;10]" time="0.002516031265258789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;11]" time="0.004597902297973633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;12]" time="0.00430607795715332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;13]" time="0.0036716461181640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;14]" time="0.004360675811767578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;15]" time="0.006613254547119141"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;16]" time="0.0080413818359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;17]" time="0.0027170181274414062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;18]" time="0.0025548934936523438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;19]" time="0.0049169063568115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;20]" time="0.012493610382080078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;21]" time="0.023900985717773438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;22]" time="0.0026013851165771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;23]" time="0.0022513866424560547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;24]" time="0.004499912261962891"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;25]" time="0.029384613037109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;26]" time="0.05854654312133789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.0041768550872802734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.003927707672119141"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.010755777359008789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.01453542709350586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.020303726196289062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.009578227996826172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.003437042236328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.004008769989013672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.027358293533325195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.04578828811645508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.13841843605041504"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.010436534881591797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.0058596134185791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.01173543930053711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.012571096420288086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.02144932746887207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.0298616886138916"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.03873109817504883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.0048961639404296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.0047647953033447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.0518498420715332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.054022789001464844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.17186713218688965"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.011790752410888672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.00436854362487793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.0050694942474365234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.045989990234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.07138729095458984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.24455595016479492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.013083219528198242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.004480123519897461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.003920555114746094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.010391950607299805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.014421939849853516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.019866228103637695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.009587287902832031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.004298210144042969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0038847923278808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.026630401611328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.044419050216674805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.1383664608001709"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.010512828826904297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.0061304569244384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.012022733688354492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.012899637222290039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.022276639938354492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.030260086059570312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.03820323944091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.004655599594116211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.005920886993408203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.051439523696899414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.05457282066345215"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.17326664924621582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.01152491569519043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.00584864616394043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.004975080490112305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.046579599380493164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.07176065444946289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.2408902645111084"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.013225317001342773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.004705905914306641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.004107475280761719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.010564327239990234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.014356851577758789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.020009279251098633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.009637832641601562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.004255771636962891"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.003901243209838867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.026759624481201172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.04461336135864258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.13754701614379883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.011132240295410156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.006043672561645508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.011865854263305664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.012468338012695312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.021695375442504883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.029857158660888672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.03829789161682129"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.004932403564453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.004724979400634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.04998517036437988"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.05466175079345703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.17190766334533691"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.011619091033935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.00425267219543457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.005133152008056641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.048840999603271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.0718998908996582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.24254417419433594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.01343679428100586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.004202604293823242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0040128231048583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.010541439056396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.014286994934082031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.019572734832763672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.009202003479003906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.003992319107055664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.003920793533325195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.026628971099853516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.04492592811584473"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.13877296447753906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.010530710220336914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.006140470504760742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.011931896209716797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.012408018112182617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.021819353103637695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.029830217361450195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.038537025451660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.004945278167724609"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.004742860794067383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.05122828483581543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.05440545082092285"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.17351269721984863"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.01177835464477539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0043756961822509766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.005039691925048828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.04695534706115723"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.07165193557739258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.24138164520263672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.012951850891113281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.004779338836669922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.00419163703918457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.010551214218139648"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.014423370361328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.020531177520751953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.010017871856689453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.004432201385498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0044100284576416016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.027209997177124023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.04486727714538574"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.13976120948791504"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.01047968864440918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.006310224533081055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.012232303619384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.012718915939331055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.022197723388671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.029996156692504883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.038721561431884766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.005127429962158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.004950046539306641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.05303215980529785"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.05481743812561035"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.17367219924926758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.01158452033996582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.004275083541870117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.005093812942504883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.04689908027648926"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.07242870330810547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.24412989616394043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.013164758682250977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.004552125930786133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.00395512580871582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.01063847541809082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.014575958251953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.020356416702270508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.009770393371582031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.0043218135833740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.00402069091796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.02685999870300293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.046433448791503906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.13767361640930176"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.010723114013671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.0061719417572021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.01281881332397461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.014116764068603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.0222470760345459"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.03006601333618164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.03942155838012695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.00500035285949707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.004729270935058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.050916194915771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.05558896064758301"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.17436885833740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.011652946472167969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.004307985305786133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.005197763442993164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.04681658744812012"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.07287120819091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.24303960800170898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.013316869735717773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.004724740982055664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.003984689712524414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.010867595672607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.014568567276000977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.020380496978759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.009931087493896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.004274845123291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.004009723663330078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.026530742645263672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.04623913764953613"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.1390542984008789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.0106658935546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.006149768829345703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.012044906616210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.012568473815917969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.022177934646606445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.030358552932739258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.03876686096191406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.005080699920654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.004859209060668945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.05056118965148926"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.0550079345703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.17397618293762207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.011498212814331055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.004349708557128906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.005004167556762695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.04665875434875488"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.0718083381652832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.2432863712310791"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.012857198715209961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.0046138763427734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0038661956787109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.01068258285522461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.01425623893737793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.020200014114379883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.00975489616394043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.004439353942871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.004067897796630859"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.02685832977294922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.04464101791381836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.13877081871032715"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.010242462158203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.006255388259887695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.011742353439331055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.012232303619384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.020627498626708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.02987813949584961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.03847765922546387"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.004817962646484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.0047800540924072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.05104637145996094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.055199623107910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.17363190650939941"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.011631965637207031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.004406452178955078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.0051424503326416016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.04705667495727539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.07165837287902832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.24410319328308105"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.012956619262695312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.00467681884765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.003959178924560547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.010483741760253906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.0142059326171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.020184040069580078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.009641885757446289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.004019975662231445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.004010677337646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.02689838409423828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.044553279876708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.1380615234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.010300159454345703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.006231784820556641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.012012481689453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.01249074935913086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.022107601165771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.030136585235595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.038332223892211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.004995107650756836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.00464177131652832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.05075192451477051"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.05425143241882324"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.1740739345550537"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.011618852615356445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.004463672637939453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.005294084548950195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.04686141014099121"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.07159590721130371"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.24032258987426758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.013160228729248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.0027666091918945312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0014796257019042969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.003554821014404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.0037856101989746094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.006012439727783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.0044116973876953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.002016782760620117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0015125274658203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.0037233829498291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.004197359085083008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.007295370101928711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.004731178283691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.0023956298828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.0018310546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.003833770751953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.005077362060546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.005883455276489258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.010720968246459961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.0036978721618652344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.0021979808807373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.027214765548706055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.015243291854858398"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.04163956642150879"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.007178783416748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0026226043701171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.002519845962524414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.023537397384643555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.032190799713134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.10951352119445801"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.008559226989746094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.002732992172241211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0014874935150146484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.0034911632537841797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.0038001537322998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.006178617477416992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.004492282867431641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0019457340240478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0014717578887939453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.0038216114044189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.0043506622314453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.007953882217407227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.004687786102294922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.0024611949920654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.001817464828491211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.003924131393432617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.005133628845214844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.006071329116821289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.010838985443115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.0027289390563964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.0022563934326171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.027903079986572266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.014901399612426758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.04221677780151367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.00675511360168457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.0026137828826904297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.002567291259765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.023565292358398438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.034017324447631836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.11002302169799805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.008302450180053711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.002696514129638672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0014910697937011719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.003543376922607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.0038406848907470703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.006064176559448242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.004420757293701172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.001873016357421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0015506744384765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.003808736801147461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.004245758056640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.0077953338623046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.004656553268432617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.002338409423828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.0017917156219482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.003881692886352539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.005261659622192383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.005995988845825195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.01065969467163086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.0026900768280029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.0020799636840820312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.02748250961303711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.014644622802734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.042084455490112305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.006969928741455078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.0025968551635742188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.0025179386138916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.02387547492980957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.03217124938964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.11057591438293457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.008386850357055664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.002717733383178711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0015180110931396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.0034265518188476562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.0038695335388183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.0061228275299072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.00453495979309082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0019714832305908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.001463174819946289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.003754138946533203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.004393815994262695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.007894277572631836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.004557132720947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.0024013519287109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.0018191337585449219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.0039365291595458984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.005187511444091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.006131887435913086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.0108642578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.003587007522583008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.002179384231567383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.0274200439453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.015092611312866211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.04276561737060547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.007277965545654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0027022361755371094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.00264739990234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.024576187133789062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.032494544982910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.11168956756591797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.008398056030273438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.0027637481689453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.00156402587890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.003469228744506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.0038983821868896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.006184577941894531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.004534721374511719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.002271890640258789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0015785694122314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.003964662551879883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.004540681838989258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.008421182632446289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.004723310470581055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.002506732940673828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.001990079879760742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.0040493011474609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.0052220821380615234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.006100893020629883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.011076927185058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.0027954578399658203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.002206563949584961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.02819371223449707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.01476740837097168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.0425264835357666"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.007234096527099609"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.0027010440826416016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.0025625228881835938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.02376103401184082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.03184390068054199"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.11037468910217285"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.00831151008605957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.002775430679321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.0016224384307861328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.0033948421478271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.0038564205169677734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.0062525272369384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.004532337188720703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.001999378204345703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0015301704406738281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.0039370059967041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.004465818405151367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.008629560470581055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.004643917083740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.0024225711822509766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.0018150806427001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.0038962364196777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.005158662796020508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.006168365478515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.010936975479125977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.002810955047607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.0021965503692626953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.027447938919067383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.015227794647216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.043241262435913086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.007233381271362305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.002048969268798828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.002637147903442383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.024469852447509766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.0325627326965332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.11149787902832031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.008431196212768555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.002717733383178711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.0015168190002441406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.0035343170166015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.004040241241455078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.0062084197998046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.004517316818237305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.0020377635955810547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.001542806625366211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.0037755966186523438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.004830837249755859"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.008527040481567383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.0048809051513671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.002463102340698242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.0017786026000976562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.003943443298339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.0056231021881103516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.007023334503173828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.011697530746459961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.002979278564453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.002492666244506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.029626131057739258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.015373468399047852"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.04260110855102539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.007206439971923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.0027434825897216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.002574920654296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.023895978927612305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.03237605094909668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.11114740371704102"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.008658170700073242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.0028514862060546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0016758441925048828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.003644704818725586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.0038809776306152344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.006899118423461914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.00479435920715332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.0020751953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0015664100646972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.00391697883605957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.004563570022583008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.008362770080566406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.004884958267211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.002595663070678711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.0019598007202148438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.004038333892822266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.005267143249511719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.006333589553833008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.011265039443969727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.0036292076110839844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.0023233890533447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.028351545333862305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.015317678451538086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.043221235275268555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.007055521011352539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.002668619155883789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.0026519298553466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.023752212524414062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.032422780990600586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.11043524742126465"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.008749008178710938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.002813100814819336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0015723705291748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.003560304641723633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.0039052963256835938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.006318330764770508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.004546642303466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.0021028518676757812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0015799999237060547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.00400090217590332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.0044438838958740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.008349180221557617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.004913330078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.002538442611694336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.0019435882568359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.004091024398803711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.005308389663696289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.006356477737426758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.011392831802368164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.0030045509338378906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.002318143844604492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.028363943099975586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.015230894088745117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.04334235191345215"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.007184505462646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.002685070037841797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.0027430057525634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.023998498916625977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.03407120704650879"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.11016106605529785"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.008373737335205078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.0036225318908691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0035352706909179688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.005528450012207031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.0063669681549072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.007722139358520508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.005673646926879883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0025925636291503906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0037446022033691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.013141155242919922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.01875758171081543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.057628631591796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.007436037063598633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.0035843849182128906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.00617218017578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.007894515991210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.010071039199829102"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.012570381164550781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.016602277755737305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.004122495651245117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.004268646240234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.0361936092376709"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.02880859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.08972716331481934"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.008894920349121094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0033545494079589844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.004678249359130859"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.03327202796936035"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.0463106632232666"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.15890717506408691"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.010307073593139648"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.0036258697509765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0036535263061523438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.005750894546508789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.006721973419189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.008119821548461914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.0058977603912353516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.002658843994140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0036356449127197266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.013615131378173828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.019863367080688477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.05740785598754883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.007514238357543945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.0037157535552978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.006308317184448242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.008203268051147461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.010277986526489258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.012781858444213867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.016831398010253906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.004288196563720703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.0044057369232177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.03740286827087402"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.02944660186767578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.0940859317779541"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.008367538452148438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.0025975704193115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.004660606384277344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.033447980880737305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.04712510108947754"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.1596057415008545"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.010098695755004883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.0037031173706054688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0037055015563964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.006066799163818359"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.006574392318725586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.007936716079711914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.0057621002197265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.002580404281616211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.003637552261352539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.013612031936645508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.019839763641357422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.05752849578857422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.00756072998046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.0037369728088378906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.006461143493652344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.00819253921508789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.010559320449829102"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.012808799743652344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.016679048538208008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.004093647003173828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.0044116973876953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.03710508346557617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.029449462890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.09097599983215332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.008620500564575195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.003454923629760742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.004917144775390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.03336954116821289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.04780149459838867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.15903878211975098"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.010128974914550781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.0036423206329345703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.003579854965209961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.0057909488677978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.006771564483642578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.007861137390136719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.0058481693267822266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.002561330795288086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0036535263061523438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.013523340225219727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.019968032836914062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.05788421630859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.007731437683105469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.003808736801147461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.00651860237121582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.008104562759399414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.010410785675048828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.012716054916381836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.016785144805908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.004278659820556641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.004474639892578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.03684854507446289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.029770374298095703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.09143781661987305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.00853586196899414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0033812522888183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.004719972610473633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.033130645751953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.0471193790435791"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.15861177444458008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.010216236114501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.003640890121459961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.0037279129028320312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.005811452865600586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.006727933883666992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.008070945739746094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.006003141403198242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.0026509761810302734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.003719806671142578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.013757705688476562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.020147323608398438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.05759596824645996"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.007515668869018555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.004866123199462891"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.006526470184326172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.008106231689453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.010365009307861328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.012709856033325195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.01694178581237793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.004263162612915039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.0044193267822265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.0370945930480957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.031089067459106445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.0919790267944336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.008640527725219727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.0034651756286621094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.004690647125244141"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.03366446495056152"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.04664778709411621"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.1610889434814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.010063648223876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.0036728382110595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.003512859344482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.005738258361816406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.006629467010498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.007911205291748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.0057773590087890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.002540111541748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.003756284713745117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.013520956039428711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.01996755599975586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.05817914009094238"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.007334232330322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.0037190914154052734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.00635981559753418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.008001565933227539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.010263442993164062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.012691259384155273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.01701641082763672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.004264116287231445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.004482269287109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.03725266456604004"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.029495954513549805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.09198164939880371"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.008504867553710938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.003424406051635742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.004544258117675781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.03474712371826172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.04675173759460449"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.15924763679504395"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.01014256477355957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.002646207809448242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.003554821014404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.00570368766784668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.0066356658935546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.007921934127807617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.005872011184692383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.002609729766845703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0036902427673339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.013580560684204102"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.020220279693603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.0573728084564209"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.00742340087890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.0036199092864990234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.0062563419342041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.007951974868774414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.010228395462036133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.012535810470581055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.01645803451538086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.004169464111328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.004364490509033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.03644108772277832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.028941631317138672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.09025979042053223"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.008302688598632812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.0033197402954101562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.004555225372314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.033158063888549805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.04623770713806152"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.1585094928741455"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.009935617446899414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.003811359405517578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0036509037017822266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.0056743621826171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.0065805912017822266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.007769584655761719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.005847930908203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.002481698989868164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0035724639892578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.013415336608886719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.019666194915771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.05708622932434082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.0072290897369384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.0038671493530273438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.006423473358154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.00805974006652832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.010680198669433594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.012640953063964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.01643848419189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.0040400028228759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.004343748092651367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.03843259811401367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.029596805572509766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.09108662605285645"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.008448362350463867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.0034313201904296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.004663228988647461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.032752037048339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.04588174819946289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.15739798545837402"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.009777545928955078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.0035371780395507812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0034813880920410156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.005521535873413086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.006428241729736328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.0077991485595703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.005745649337768555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.002534627914428711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0035223960876464844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.013337135314941406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.01946425437927246"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.05756783485412598"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.007415294647216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.0038094520568847656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.006409168243408203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.008039474487304688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.010472536087036133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.012834548950195312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.016421794891357422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.004062175750732422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.00438380241394043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.03658485412597656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.028911828994750977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.09138298034667969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.009993791580200195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.0034334659576416016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.004697322845458984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.03326749801635742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.04646587371826172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.1596977710723877"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.010055065155029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;0]" time="0.014343976974487305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;1]" time="0.002479076385498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;2]" time="0.0016689300537109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;3]" time="0.0016503334045410156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;4]" time="0.0015938282012939453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;5]" time="0.0018153190612792969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;6]" time="0.0013706684112548828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;7]" time="0.002000570297241211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;8]" time="0.004431009292602539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;9]" time="0.009984254837036133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;10]" time="0.005103588104248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;11]" time="0.0021123886108398438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;12]" time="0.0019378662109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;13]" time="0.0017385482788085938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;14]" time="0.0019507408142089844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;15]" time="0.002146482467651367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;16]" time="0.0020360946655273438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;0]" time="0.0015439987182617188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;1]" time="0.0015919208526611328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;2]" time="0.0015239715576171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;3]" time="0.0015964508056640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;4]" time="0.0015439987182617188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;5]" time="0.0014009475708007812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;6]" time="0.0018548965454101562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;7]" time="0.0015888214111328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;8]" time="0.005668163299560547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;9]" time="0.01337575912475586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;10]" time="0.002146005630493164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;11]" time="0.002012491226196289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;12]" time="0.0018854141235351562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;13]" time="0.0017731189727783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;14]" time="0.002082347869873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;15]" time="0.0022318363189697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;16]" time="0.002195119857788086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;0]" time="0.0015025138854980469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;1]" time="0.0016100406646728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;2]" time="0.0016469955444335938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;3]" time="0.0016102790832519531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;4]" time="0.0015718936920166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;5]" time="0.0014243125915527344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;6]" time="0.0013778209686279297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;7]" time="0.0016472339630126953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;8]" time="0.006093263626098633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;9]" time="0.01361846923828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;10]" time="0.003005504608154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;11]" time="0.002148866653442383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;12]" time="0.0019969940185546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;13]" time="0.001819610595703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;14]" time="0.001989603042602539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;15]" time="0.002149820327758789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;16]" time="0.0020303726196289062"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.010097503662109375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0032358169555664062"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.022333860397338867"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.02521491050720215"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.032437801361083984"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.03254127502441406"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.008343696594238281"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.004114627838134766"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.033112525939941406"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.04420208930969238"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.13585853576660156"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.03552579879760742"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.02281641960144043"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.00671076774597168"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.030643224716186523"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.04876089096069336"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.05471539497375488"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.07661819458007812"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.030992746353149414"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.006597995758056641"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.17778944969177246"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.0980384349822998"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.32860660552978516"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.08290386199951172"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.009458541870117188"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.005073070526123047"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.34242749214172363"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.5541605949401855"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="2.935514450073242"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.1814126968383789"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.009213924407958984"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0042572021484375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.0215299129486084"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.02412247657775879"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.03396749496459961"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.03257608413696289"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.008678674697875977"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.00426030158996582"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.03347039222717285"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.04451131820678711"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.13630342483520508"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.0359652042388916"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.022316694259643555"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.00669407844543457"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.030930519104003906"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.04978489875793457"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.0553288459777832"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.0758206844329834"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.029340267181396484"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.006539821624755859"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.17377901077270508"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.09896159172058105"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.33860111236572266"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.08245253562927246"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.009220600128173828"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.0058934688568115234"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.3570244312286377"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.5682055950164795"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="2.9947597980499268"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.186431884765625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.009331703186035156"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0042803287506103516"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.02160334587097168"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.02459096908569336"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.031733036041259766"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.031143665313720703"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.00837254524230957"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.004039764404296875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.03278326988220215"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.043840646743774414"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.13445401191711426"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.035666465759277344"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.02216196060180664"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.006643056869506836"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.030164480209350586"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.049739837646484375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.05561518669128418"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.07611513137817383"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.02935171127319336"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.006678342819213867"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.17062163352966309"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.09796428680419922"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.3283259868621826"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.08304262161254883"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.009355783462524414"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.005906105041503906"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.3626871109008789"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.5591025352478027"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="3.0740671157836914"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.20395946502685547"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.010140419006347656"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.004775047302246094"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.023343324661254883"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.026381731033325195"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.03865981101989746"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.036159515380859375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.009408950805664062"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.004537343978881836"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.03571438789367676"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.046987056732177734"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.14419150352478027"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.03838753700256348"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.023860454559326172"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.0074994564056396484"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.03398537635803223"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.05486774444580078"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.05877995491027832"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.08052515983581543"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.03196978569030762"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.0074198246002197266"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.18787550926208496"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.10561394691467285"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.34677886962890625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.08862662315368652"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.010096311569213867"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.0062139034271240234"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.363875150680542"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.6183719635009766"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="3.2086198329925537"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.19929265975952148"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.009895086288452148"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.0050084590911865234"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.024039268493652344"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.027177810668945312"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.03467130661010742"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.034369468688964844"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.009045124053955078"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.006205320358276367"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.03613734245300293"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.04811215400695801"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.1429591178894043"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.03841352462768555"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.023878812789916992"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.007260799407958984"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.034331560134887695"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.05280303955078125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.05916547775268555"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.08407473564147949"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.03215789794921875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.007668495178222656"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.19279956817626953"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.10936832427978516"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.3611185550689697"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.08840060234069824"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.010595083236694336"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.006569385528564453"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.38417911529541016"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.6427750587463379"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="3.0813701152801514"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.18389248847961426"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.008982419967651367"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.004269599914550781"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.021368026733398438"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.024258852005004883"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.03146791458129883"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.03222060203552246"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.00859379768371582"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.004285573959350586"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.032945871353149414"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.04415130615234375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.1389479637145996"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.03550386428833008"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.02250194549560547"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.006491899490356445"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.030562162399291992"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.04992794990539551"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.05402207374572754"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.0756990909576416"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.029762983322143555"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.006355762481689453"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.1683671474456787"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.09772419929504395"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.3260915279388428"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.08321785926818848"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.009081125259399414"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.0049533843994140625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.35724687576293945"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.5822186470031738"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="3.041276216506958"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.18631529808044434"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.009221792221069336"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.004473209381103516"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.02172994613647461"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.024274349212646484"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.031676292419433594"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.03277468681335449"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.008531332015991211"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.003196239471435547"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.03294515609741211"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.04443645477294922"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.13408470153808594"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.03574228286743164"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.022492408752441406"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.0068225860595703125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.031061649322509766"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.04938054084777832"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.054080963134765625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.07555413246154785"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.030142784118652344"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.006567478179931641"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.17491674423217773"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.09724044799804688"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.3340935707092285"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.08251810073852539"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.009081840515136719"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.004355669021606445"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.33879733085632324"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.5808990001678467"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="2.9859097003936768"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.18613314628601074"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.009328126907348633"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.004774332046508789"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.02212667465209961"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.026443958282470703"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.0315852165222168"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.0315854549407959"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.008409976959228516"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.003176450729370117"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.033161163330078125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.045238494873046875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.13639521598815918"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.03534340858459473"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.02263498306274414"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.006905317306518555"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.031086206436157227"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.05022406578063965"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.05440521240234375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.07635879516601562"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.029149532318115234"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.006385087966918945"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.17006564140319824"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.0975654125213623"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.34268975257873535"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.0845956802368164"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.009006500244140625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.005241870880126953"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.3624730110168457"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.5896792411804199"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="3.0596723556518555"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.18344974517822266"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.009054422378540039"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.003232717514038086"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.021418094635009766"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.02417612075805664"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.03182840347290039"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.03244972229003906"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.008768796920776367"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0032575130462646484"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.033591270446777344"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.04474616050720215"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.1361701488494873"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.03544783592224121"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.024877071380615234"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.006819725036621094"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.0313413143157959"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.04978346824645996"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.054139137268066406"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.07676148414611816"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.029605388641357422"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.00653529167175293"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.17639660835266113"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.1000375747680664"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.3420414924621582"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.08380603790283203"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.009089946746826172"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.005264759063720703"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.3694467544555664"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.5993428230285645"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="3.0751702785491943"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.1925058364868164"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;0]" time="0.09966611862182617"><system-err>12:38 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:38 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:38 DiffusionOperatorP1: Determine global dofs ...
12:38 DiffusionOperatorP1: Boundary treatment ...
12:38 DiffusionOperatorP1: Assemble system matrix ...
12:38 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:38 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:38 DiffusionOperatorP1: Determine global dofs ...
12:38 DiffusionOperatorP1: Boundary treatment ...
12:38 DiffusionOperatorP1: Assemble system matrix ...
12:38 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:38 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:38 DiffusionOperatorP1: Determine global dofs ...
12:38 DiffusionOperatorP1: Boundary treatment ...
12:38 DiffusionOperatorP1: Assemble system matrix ...
12:38 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:38 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:38 DiffusionOperatorP1: Determine global dofs ...
12:38 DiffusionOperatorP1: Boundary treatment ...
12:38 DiffusionOperatorP1: Assemble system matrix ...
12:38 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:38 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:38 DiffusionOperatorP1: Determine global dofs ...
12:38 DiffusionOperatorP1: Boundary treatment ...
12:38 DiffusionOperatorP1: Assemble system matrix ...
12:38 L2ProductP1: Integrate the products of the shape functions on each element
12:38 L2ProductP1: Determine global dofs ...
12:38 L2ProductP1: Boundary treatment ...
12:38 L2ProductP1: Assemble system matrix ...
12:38 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:38 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:38 DiffusionOperatorP1: Determine global dofs ...
12:38 DiffusionOperatorP1: Boundary treatment ...
12:38 DiffusionOperatorP1: Assemble system matrix ...
12:38 L2ProductP1: Integrate the products of the shape functions on each element
12:38 L2ProductP1: Determine global dofs ...
12:38 L2ProductP1: Boundary treatment ...
12:38 L2ProductP1: Assemble system matrix ...
12:38 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:38 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:38 DiffusionOperatorP1: Determine global dofs ...
12:38 DiffusionOperatorP1: Boundary treatment ...
12:38 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;1]" time="0.07282519340515137"><system-err>12:38 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:38 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:38 DiffusionOperatorP1: Determine global dofs ...
12:38 DiffusionOperatorP1: Boundary treatment ...
12:38 DiffusionOperatorP1: Assemble system matrix ...
12:38 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:38 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:38 DiffusionOperatorP1: Determine global dofs ...
12:38 DiffusionOperatorP1: Boundary treatment ...
12:38 DiffusionOperatorP1: Assemble system matrix ...
12:38 L2ProductP1: Integrate the products of the shape functions on each element
12:38 L2ProductP1: Determine global dofs ...
12:38 L2ProductP1: Boundary treatment ...
12:38 L2ProductP1: Assemble system matrix ...
12:38 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:38 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:38 DiffusionOperatorP1: Determine global dofs ...
12:38 DiffusionOperatorP1: Boundary treatment ...
12:38 DiffusionOperatorP1: Assemble system matrix ...
12:38 L2ProductP1: Integrate the products of the shape functions on each element
12:38 L2ProductP1: Determine global dofs ...
12:38 L2ProductP1: Boundary treatment ...
12:38 L2ProductP1: Assemble system matrix ...
12:38 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:38 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:38 DiffusionOperatorP1: Determine global dofs ...
12:38 DiffusionOperatorP1: Boundary treatment ...
12:38 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;2]" time="0.07871866226196289"><system-err>12:38 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:38 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:38 DiffusionOperatorP1: Determine global dofs ...
12:38 DiffusionOperatorP1: Boundary treatment ...
12:38 DiffusionOperatorP1: Assemble system matrix ...
12:38 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:38 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:38 DiffusionOperatorP1: Determine global dofs ...
12:38 DiffusionOperatorP1: Boundary treatment ...
12:38 DiffusionOperatorP1: Assemble system matrix ...
12:38 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:38 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:38 DiffusionOperatorP1: Determine global dofs ...
12:38 DiffusionOperatorP1: Boundary treatment ...
12:38 DiffusionOperatorP1: Assemble system matrix ...
12:38 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:38 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:38 DiffusionOperatorP1: Determine global dofs ...
12:38 DiffusionOperatorP1: Boundary treatment ...
12:38 DiffusionOperatorP1: Assemble system matrix ...
12:38 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:38 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:38 DiffusionOperatorP1: Determine global dofs ...
12:38 DiffusionOperatorP1: Boundary treatment ...
12:38 DiffusionOperatorP1: Assemble system matrix ...
12:38 L2ProductP1: Integrate the products of the shape functions on each element
12:38 L2ProductP1: Determine global dofs ...
12:38 L2ProductP1: Boundary treatment ...
12:38 L2ProductP1: Assemble system matrix ...
12:38 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:38 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:38 DiffusionOperatorP1: Determine global dofs ...
12:38 DiffusionOperatorP1: Boundary treatment ...
12:38 DiffusionOperatorP1: Assemble system matrix ...
12:38 L2ProductP1: Integrate the products of the shape functions on each element
12:38 L2ProductP1: Determine global dofs ...
12:38 L2ProductP1: Boundary treatment ...
12:38 L2ProductP1: Assemble system matrix ...
12:38 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:38 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:38 DiffusionOperatorP1: Determine global dofs ...
12:38 DiffusionOperatorP1: Boundary treatment ...
12:38 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;3]" time="0.07219529151916504"><system-err>12:38 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:38 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:38 DiffusionOperatorP1: Determine global dofs ...
12:38 DiffusionOperatorP1: Boundary treatment ...
12:38 DiffusionOperatorP1: Assemble system matrix ...
12:38 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:38 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:38 DiffusionOperatorP1: Determine global dofs ...
12:38 DiffusionOperatorP1: Boundary treatment ...
12:38 DiffusionOperatorP1: Assemble system matrix ...
12:38 L2ProductP1: Integrate the products of the shape functions on each element
12:38 L2ProductP1: Determine global dofs ...
12:38 L2ProductP1: Boundary treatment ...
12:38 L2ProductP1: Assemble system matrix ...
12:38 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:38 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:38 DiffusionOperatorP1: Determine global dofs ...
12:38 DiffusionOperatorP1: Boundary treatment ...
12:38 DiffusionOperatorP1: Assemble system matrix ...
12:38 L2ProductP1: Integrate the products of the shape functions on each element
12:38 L2ProductP1: Determine global dofs ...
12:38 L2ProductP1: Boundary treatment ...
12:38 L2ProductP1: Assemble system matrix ...
12:38 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:38 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:38 DiffusionOperatorP1: Determine global dofs ...
12:38 DiffusionOperatorP1: Boundary treatment ...
12:38 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;4]" time="0.07805037498474121"><system-err>12:38 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:38 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:38 DiffusionOperatorP1: Determine global dofs ...
12:38 DiffusionOperatorP1: Boundary treatment ...
12:38 DiffusionOperatorP1: Assemble system matrix ...
12:38 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:38 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:38 DiffusionOperatorP1: Determine global dofs ...
12:38 DiffusionOperatorP1: Boundary treatment ...
12:38 DiffusionOperatorP1: Assemble system matrix ...
12:38 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:38 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:38 DiffusionOperatorP1: Determine global dofs ...
12:38 DiffusionOperatorP1: Boundary treatment ...
12:38 DiffusionOperatorP1: Assemble system matrix ...
12:38 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:38 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:38 DiffusionOperatorP1: Determine global dofs ...
12:38 DiffusionOperatorP1: Boundary treatment ...
12:38 DiffusionOperatorP1: Assemble system matrix ...
12:38 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:38 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:38 DiffusionOperatorP1: Determine global dofs ...
12:38 DiffusionOperatorP1: Boundary treatment ...
12:38 DiffusionOperatorP1: Assemble system matrix ...
12:38 L2ProductP1: Integrate the products of the shape functions on each element
12:38 L2ProductP1: Determine global dofs ...
12:38 L2ProductP1: Boundary treatment ...
12:38 L2ProductP1: Assemble system matrix ...
12:38 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:38 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:38 DiffusionOperatorP1: Determine global dofs ...
12:38 DiffusionOperatorP1: Boundary treatment ...
12:38 DiffusionOperatorP1: Assemble system matrix ...
12:38 L2ProductP1: Integrate the products of the shape functions on each element
12:38 L2ProductP1: Determine global dofs ...
12:38 L2ProductP1: Boundary treatment ...
12:38 L2ProductP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;5]" time="0.07252049446105957"><system-err>12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 L2ProductP1: Integrate the products of the shape functions on each element
12:39 L2ProductP1: Determine global dofs ...
12:39 L2ProductP1: Boundary treatment ...
12:39 L2ProductP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 L2ProductP1: Integrate the products of the shape functions on each element
12:39 L2ProductP1: Determine global dofs ...
12:39 L2ProductP1: Boundary treatment ...
12:39 L2ProductP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;6]" time="0.07547569274902344"><system-err>12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 L2ProductP1: Integrate the products of the shape functions on each element
12:39 L2ProductP1: Determine global dofs ...
12:39 L2ProductP1: Boundary treatment ...
12:39 L2ProductP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 L2ProductP1: Integrate the products of the shape functions on each element
12:39 L2ProductP1: Determine global dofs ...
12:39 L2ProductP1: Boundary treatment ...
12:39 L2ProductP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;7]" time="0.0718080997467041"><system-err>12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 L2ProductP1: Integrate the products of the shape functions on each element
12:39 L2ProductP1: Determine global dofs ...
12:39 L2ProductP1: Boundary treatment ...
12:39 L2ProductP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 L2ProductP1: Integrate the products of the shape functions on each element
12:39 L2ProductP1: Determine global dofs ...
12:39 L2ProductP1: Boundary treatment ...
12:39 L2ProductP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;8]" time="0.07520103454589844"><system-err>12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 L2ProductP1: Integrate the products of the shape functions on each element
12:39 L2ProductP1: Determine global dofs ...
12:39 L2ProductP1: Boundary treatment ...
12:39 L2ProductP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 L2ProductP1: Integrate the products of the shape functions on each element
12:39 L2ProductP1: Determine global dofs ...
12:39 L2ProductP1: Boundary treatment ...
12:39 L2ProductP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;9]" time="0.07393574714660645"><system-err>12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 L2ProductP1: Integrate the products of the shape functions on each element
12:39 L2ProductP1: Determine global dofs ...
12:39 L2ProductP1: Boundary treatment ...
12:39 L2ProductP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 L2ProductP1: Integrate the products of the shape functions on each element
12:39 L2ProductP1: Determine global dofs ...
12:39 L2ProductP1: Boundary treatment ...
12:39 L2ProductP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;10]" time="0.07729029655456543"><system-err>12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 L2ProductP1: Integrate the products of the shape functions on each element
12:39 L2ProductP1: Determine global dofs ...
12:39 L2ProductP1: Boundary treatment ...
12:39 L2ProductP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 L2ProductP1: Integrate the products of the shape functions on each element
12:39 L2ProductP1: Determine global dofs ...
12:39 L2ProductP1: Boundary treatment ...
12:39 L2ProductP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;11]" time="0.07305026054382324"><system-err>12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 L2ProductP1: Integrate the products of the shape functions on each element
12:39 L2ProductP1: Determine global dofs ...
12:39 L2ProductP1: Boundary treatment ...
12:39 L2ProductP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 L2ProductP1: Integrate the products of the shape functions on each element
12:39 L2ProductP1: Determine global dofs ...
12:39 L2ProductP1: Boundary treatment ...
12:39 L2ProductP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;12]" time="0.0702366828918457"><system-err>12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 L2ProductP1: Integrate the products of the shape functions on each element
12:39 L2ProductP1: Determine global dofs ...
12:39 L2ProductP1: Boundary treatment ...
12:39 L2ProductP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 L2ProductP1: Integrate the products of the shape functions on each element
12:39 L2ProductP1: Determine global dofs ...
12:39 L2ProductP1: Boundary treatment ...
12:39 L2ProductP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;13]" time="0.06636977195739746"><system-err>12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 L2ProductP1: Integrate the products of the shape functions on each element
12:39 L2ProductP1: Determine global dofs ...
12:39 L2ProductP1: Boundary treatment ...
12:39 L2ProductP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 L2ProductP1: Integrate the products of the shape functions on each element
12:39 L2ProductP1: Determine global dofs ...
12:39 L2ProductP1: Boundary treatment ...
12:39 L2ProductP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;14]" time="0.07597112655639648"><system-err>12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 L2ProductP1: Integrate the products of the shape functions on each element
12:39 L2ProductP1: Determine global dofs ...
12:39 L2ProductP1: Boundary treatment ...
12:39 L2ProductP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 L2ProductP1: Integrate the products of the shape functions on each element
12:39 L2ProductP1: Determine global dofs ...
12:39 L2ProductP1: Boundary treatment ...
12:39 L2ProductP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;15]" time="0.07135725021362305"><system-err>12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 L2ProductP1: Integrate the products of the shape functions on each element
12:39 L2ProductP1: Determine global dofs ...
12:39 L2ProductP1: Boundary treatment ...
12:39 L2ProductP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 L2ProductP1: Integrate the products of the shape functions on each element
12:39 L2ProductP1: Determine global dofs ...
12:39 L2ProductP1: Boundary treatment ...
12:39 L2ProductP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;16]" time="0.06981301307678223"><system-err>12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 L2ProductP1: Integrate the products of the shape functions on each element
12:39 L2ProductP1: Determine global dofs ...
12:39 L2ProductP1: Boundary treatment ...
12:39 L2ProductP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 L2ProductP1: Integrate the products of the shape functions on each element
12:39 L2ProductP1: Determine global dofs ...
12:39 L2ProductP1: Boundary treatment ...
12:39 L2ProductP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;17]" time="0.06617546081542969"><system-err>12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 L2ProductP1: Integrate the products of the shape functions on each element
12:39 L2ProductP1: Determine global dofs ...
12:39 L2ProductP1: Boundary treatment ...
12:39 L2ProductP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 L2ProductP1: Integrate the products of the shape functions on each element
12:39 L2ProductP1: Determine global dofs ...
12:39 L2ProductP1: Boundary treatment ...
12:39 L2ProductP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;18]" time="0.07548069953918457"><system-err>12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 L2ProductP1: Integrate the products of the shape functions on each element
12:40 L2ProductP1: Determine global dofs ...
12:40 L2ProductP1: Boundary treatment ...
12:40 L2ProductP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 L2ProductP1: Integrate the products of the shape functions on each element
12:40 L2ProductP1: Determine global dofs ...
12:40 L2ProductP1: Boundary treatment ...
12:40 L2ProductP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;19]" time="0.07247209548950195"><system-err>12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 L2ProductP1: Integrate the products of the shape functions on each element
12:40 L2ProductP1: Determine global dofs ...
12:40 L2ProductP1: Boundary treatment ...
12:40 L2ProductP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 L2ProductP1: Integrate the products of the shape functions on each element
12:40 L2ProductP1: Determine global dofs ...
12:40 L2ProductP1: Boundary treatment ...
12:40 L2ProductP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;20]" time="0.0749204158782959"><system-err>12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 L2ProductP1: Integrate the products of the shape functions on each element
12:40 L2ProductP1: Determine global dofs ...
12:40 L2ProductP1: Boundary treatment ...
12:40 L2ProductP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 L2ProductP1: Integrate the products of the shape functions on each element
12:40 L2ProductP1: Determine global dofs ...
12:40 L2ProductP1: Boundary treatment ...
12:40 L2ProductP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;21]" time="0.07273483276367188"><system-err>12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 L2ProductP1: Integrate the products of the shape functions on each element
12:40 L2ProductP1: Determine global dofs ...
12:40 L2ProductP1: Boundary treatment ...
12:40 L2ProductP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 L2ProductP1: Integrate the products of the shape functions on each element
12:40 L2ProductP1: Determine global dofs ...
12:40 L2ProductP1: Boundary treatment ...
12:40 L2ProductP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;22]" time="0.07933735847473145"><system-err>12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 L2ProductP1: Integrate the products of the shape functions on each element
12:40 L2ProductP1: Determine global dofs ...
12:40 L2ProductP1: Boundary treatment ...
12:40 L2ProductP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 L2ProductP1: Integrate the products of the shape functions on each element
12:40 L2ProductP1: Determine global dofs ...
12:40 L2ProductP1: Boundary treatment ...
12:40 L2ProductP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;23]" time="0.07162904739379883"><system-err>12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 L2ProductP1: Integrate the products of the shape functions on each element
12:40 L2ProductP1: Determine global dofs ...
12:40 L2ProductP1: Boundary treatment ...
12:40 L2ProductP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 L2ProductP1: Integrate the products of the shape functions on each element
12:40 L2ProductP1: Determine global dofs ...
12:40 L2ProductP1: Boundary treatment ...
12:40 L2ProductP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;24]" time="0.047904014587402344"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;25]" time="0.049500226974487305"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;26]" time="0.04781937599182129"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;27]" time="0.044335365295410156"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;28]" time="0.04420781135559082"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;29]" time="0.04264402389526367"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;30]" time="0.043486595153808594"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;31]" time="0.044788360595703125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;32]" time="0.14325928688049316"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;33]" time="0.11296272277832031"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;34]" time="0.04662370681762695"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;35]" time="0.10924649238586426"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;36]" time="0.04775190353393555"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;0]" time="0.017365694046020508"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;1]" time="0.01856684684753418"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;2]" time="0.14008808135986328"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;3]" time="0.21699261665344238"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;4]" time="0.03890204429626465"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;5]" time="0.01583123207092285"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;6]" time="0.0157015323638916"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;7]" time="0.23102855682373047"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;8]" time="1.5296962261199951"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;9]" time="0.25949859619140625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;10]" time="0.034380435943603516"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;11]" time="0.38515734672546387"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;12]" time="0.05635547637939453"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;13]" time="0.20959901809692383"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;14]" time="0.37567591667175293"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;15]" time="0.6359100341796875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;16]" time="0.7096500396728516"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;17]" time="0.04363059997558594"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;18]" time="0.04393315315246582"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;19]" time="1.3847389221191406"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;20]" time="4.3418965339660645"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;21]" time="10.20965313911438"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;22]" time="0.01524972915649414"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;23]" time="0.014871597290039062"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;24]" time="3.527510643005371"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;25]" time="49.77563691139221"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;26]" time="7.23057222366333"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;0]" time="0.017199993133544922"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;1]" time="0.018194913864135742"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;2]" time="0.1324906349182129"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;3]" time="0.21093010902404785"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;4]" time="0.03811454772949219"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;5]" time="0.013818502426147461"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;6]" time="0.013695716857910156"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;7]" time="0.21800827980041504"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;8]" time="1.5061020851135254"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;9]" time="0.25976014137268066"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;10]" time="0.03359484672546387"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;11]" time="0.39044737815856934"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;12]" time="0.05696272850036621"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;13]" time="0.21014904975891113"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;14]" time="0.37160825729370117"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;15]" time="0.6299738883972168"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;16]" time="0.7093813419342041"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;17]" time="0.04621720314025879"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;18]" time="0.04497551918029785"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;19]" time="1.368861198425293"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;20]" time="4.2360851764678955"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;21]" time="9.455745697021484"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;22]" time="0.01613140106201172"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;23]" time="0.016399621963500977"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;24]" time="3.564312219619751"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;25]" time="50.2320191860199"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;26]" time="7.145040035247803"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;0]" time="0.01686263084411621"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;1]" time="0.01786041259765625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;2]" time="0.13265109062194824"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;3]" time="0.20540833473205566"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;4]" time="0.03854680061340332"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;5]" time="0.01511073112487793"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;6]" time="0.01496434211730957"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;7]" time="0.22219204902648926"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;8]" time="1.5101895332336426"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;9]" time="0.25438404083251953"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;10]" time="0.03435659408569336"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;11]" time="0.38156747817993164"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;12]" time="0.055803537368774414"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;13]" time="0.2120523452758789"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;14]" time="0.3748795986175537"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;15]" time="0.6295950412750244"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;16]" time="0.7010078430175781"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;17]" time="0.04261922836303711"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;18]" time="0.042902231216430664"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;19]" time="1.3584632873535156"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;20]" time="4.261580228805542"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;21]" time="9.33083200454712"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;22]" time="0.015809059143066406"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;23]" time="0.016217470169067383"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;24]" time="3.5189459323883057"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;25]" time="49.692163705825806"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;26]" time="7.185109853744507"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;0]" time="0.27579307556152344"><system-err>16:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:44 DiffusionOperatorP1: Determine global dofs ...
16:44 DiffusionOperatorP1: Boundary treatment ...
16:44 DiffusionOperatorP1: Assemble system matrix ...
16:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:44 DiffusionOperatorP1: Determine global dofs ...
16:44 DiffusionOperatorP1: Boundary treatment ...
16:44 DiffusionOperatorP1: Assemble system matrix ...
16:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:44 DiffusionOperatorP1: Determine global dofs ...
16:44 DiffusionOperatorP1: Boundary treatment ...
16:44 DiffusionOperatorP1: Assemble system matrix ...
16:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:44 DiffusionOperatorP1: Determine global dofs ...
16:44 DiffusionOperatorP1: Boundary treatment ...
16:44 DiffusionOperatorP1: Assemble system matrix ...
16:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:44 DiffusionOperatorP1: Determine global dofs ...
16:44 DiffusionOperatorP1: Boundary treatment ...
16:44 DiffusionOperatorP1: Assemble system matrix ...
16:44 L2ProductP1: Integrate the products of the shape functions on each element
16:44 L2ProductP1: Determine global dofs ...
16:44 L2ProductP1: Boundary treatment ...
16:44 L2ProductP1: Assemble system matrix ...
16:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:44 DiffusionOperatorP1: Determine global dofs ...
16:44 DiffusionOperatorP1: Boundary treatment ...
16:44 DiffusionOperatorP1: Assemble system matrix ...
16:44 L2ProductP1: Integrate the products of the shape functions on each element
16:44 L2ProductP1: Determine global dofs ...
16:44 L2ProductP1: Boundary treatment ...
16:44 L2ProductP1: Assemble system matrix ...
16:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:44 DiffusionOperatorP1: Determine global dofs ...
16:44 DiffusionOperatorP1: Boundary treatment ...
16:44 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;1]" time="0.28063392639160156"><system-err>16:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:44 DiffusionOperatorP1: Determine global dofs ...
16:44 DiffusionOperatorP1: Boundary treatment ...
16:44 DiffusionOperatorP1: Assemble system matrix ...
16:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:44 DiffusionOperatorP1: Determine global dofs ...
16:44 DiffusionOperatorP1: Boundary treatment ...
16:44 DiffusionOperatorP1: Assemble system matrix ...
16:44 L2ProductP1: Integrate the products of the shape functions on each element
16:44 L2ProductP1: Determine global dofs ...
16:44 L2ProductP1: Boundary treatment ...
16:44 L2ProductP1: Assemble system matrix ...
16:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:44 DiffusionOperatorP1: Determine global dofs ...
16:44 DiffusionOperatorP1: Boundary treatment ...
16:44 DiffusionOperatorP1: Assemble system matrix ...
16:44 L2ProductP1: Integrate the products of the shape functions on each element
16:44 L2ProductP1: Determine global dofs ...
16:44 L2ProductP1: Boundary treatment ...
16:44 L2ProductP1: Assemble system matrix ...
16:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:44 DiffusionOperatorP1: Determine global dofs ...
16:44 DiffusionOperatorP1: Boundary treatment ...
16:44 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;2]" time="0.27965545654296875"><system-err>16:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:44 DiffusionOperatorP1: Determine global dofs ...
16:44 DiffusionOperatorP1: Boundary treatment ...
16:44 DiffusionOperatorP1: Assemble system matrix ...
16:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:44 DiffusionOperatorP1: Determine global dofs ...
16:44 DiffusionOperatorP1: Boundary treatment ...
16:44 DiffusionOperatorP1: Assemble system matrix ...
16:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:44 DiffusionOperatorP1: Determine global dofs ...
16:44 DiffusionOperatorP1: Boundary treatment ...
16:44 DiffusionOperatorP1: Assemble system matrix ...
16:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:44 DiffusionOperatorP1: Determine global dofs ...
16:44 DiffusionOperatorP1: Boundary treatment ...
16:44 DiffusionOperatorP1: Assemble system matrix ...
16:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:44 DiffusionOperatorP1: Determine global dofs ...
16:44 DiffusionOperatorP1: Boundary treatment ...
16:44 DiffusionOperatorP1: Assemble system matrix ...
16:44 L2ProductP1: Integrate the products of the shape functions on each element
16:44 L2ProductP1: Determine global dofs ...
16:44 L2ProductP1: Boundary treatment ...
16:44 L2ProductP1: Assemble system matrix ...
16:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:44 DiffusionOperatorP1: Determine global dofs ...
16:44 DiffusionOperatorP1: Boundary treatment ...
16:44 DiffusionOperatorP1: Assemble system matrix ...
16:44 L2ProductP1: Integrate the products of the shape functions on each element
16:44 L2ProductP1: Determine global dofs ...
16:44 L2ProductP1: Boundary treatment ...
16:44 L2ProductP1: Assemble system matrix ...
16:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:44 DiffusionOperatorP1: Determine global dofs ...
16:44 DiffusionOperatorP1: Boundary treatment ...
16:44 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;3]" time="0.2772247791290283"><system-err>16:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:45 DiffusionOperatorP1: Determine global dofs ...
16:45 DiffusionOperatorP1: Boundary treatment ...
16:45 DiffusionOperatorP1: Assemble system matrix ...
16:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:45 DiffusionOperatorP1: Determine global dofs ...
16:45 DiffusionOperatorP1: Boundary treatment ...
16:45 DiffusionOperatorP1: Assemble system matrix ...
16:45 L2ProductP1: Integrate the products of the shape functions on each element
16:45 L2ProductP1: Determine global dofs ...
16:45 L2ProductP1: Boundary treatment ...
16:45 L2ProductP1: Assemble system matrix ...
16:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:45 DiffusionOperatorP1: Determine global dofs ...
16:45 DiffusionOperatorP1: Boundary treatment ...
16:45 DiffusionOperatorP1: Assemble system matrix ...
16:45 L2ProductP1: Integrate the products of the shape functions on each element
16:45 L2ProductP1: Determine global dofs ...
16:45 L2ProductP1: Boundary treatment ...
16:45 L2ProductP1: Assemble system matrix ...
16:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:45 DiffusionOperatorP1: Determine global dofs ...
16:45 DiffusionOperatorP1: Boundary treatment ...
16:45 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;4]" time="0.27745604515075684"><system-err>16:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:45 DiffusionOperatorP1: Determine global dofs ...
16:45 DiffusionOperatorP1: Boundary treatment ...
16:45 DiffusionOperatorP1: Assemble system matrix ...
16:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:45 DiffusionOperatorP1: Determine global dofs ...
16:45 DiffusionOperatorP1: Boundary treatment ...
16:45 DiffusionOperatorP1: Assemble system matrix ...
16:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:45 DiffusionOperatorP1: Determine global dofs ...
16:45 DiffusionOperatorP1: Boundary treatment ...
16:45 DiffusionOperatorP1: Assemble system matrix ...
16:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:45 DiffusionOperatorP1: Determine global dofs ...
16:45 DiffusionOperatorP1: Boundary treatment ...
16:45 DiffusionOperatorP1: Assemble system matrix ...
16:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:45 DiffusionOperatorP1: Determine global dofs ...
16:45 DiffusionOperatorP1: Boundary treatment ...
16:45 DiffusionOperatorP1: Assemble system matrix ...
16:45 L2ProductP1: Integrate the products of the shape functions on each element
16:45 L2ProductP1: Determine global dofs ...
16:45 L2ProductP1: Boundary treatment ...
16:45 L2ProductP1: Assemble system matrix ...
16:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:45 DiffusionOperatorP1: Determine global dofs ...
16:45 DiffusionOperatorP1: Boundary treatment ...
16:45 DiffusionOperatorP1: Assemble system matrix ...
16:45 L2ProductP1: Integrate the products of the shape functions on each element
16:45 L2ProductP1: Determine global dofs ...
16:45 L2ProductP1: Boundary treatment ...
16:45 L2ProductP1: Assemble system matrix ...
16:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:45 DiffusionOperatorP1: Determine global dofs ...
16:45 DiffusionOperatorP1: Boundary treatment ...
16:45 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;5]" time="0.2792041301727295"><system-err>16:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:45 DiffusionOperatorP1: Determine global dofs ...
16:45 DiffusionOperatorP1: Boundary treatment ...
16:45 DiffusionOperatorP1: Assemble system matrix ...
16:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:45 DiffusionOperatorP1: Determine global dofs ...
16:45 DiffusionOperatorP1: Boundary treatment ...
16:45 DiffusionOperatorP1: Assemble system matrix ...
16:45 L2ProductP1: Integrate the products of the shape functions on each element
16:45 L2ProductP1: Determine global dofs ...
16:45 L2ProductP1: Boundary treatment ...
16:45 L2ProductP1: Assemble system matrix ...
16:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:45 DiffusionOperatorP1: Determine global dofs ...
16:45 DiffusionOperatorP1: Boundary treatment ...
16:45 DiffusionOperatorP1: Assemble system matrix ...
16:45 L2ProductP1: Integrate the products of the shape functions on each element
16:45 L2ProductP1: Determine global dofs ...
16:45 L2ProductP1: Boundary treatment ...
16:45 L2ProductP1: Assemble system matrix ...
16:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:45 DiffusionOperatorP1: Determine global dofs ...
16:45 DiffusionOperatorP1: Boundary treatment ...
16:45 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;6]" time="0.27971816062927246"><system-err>16:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:45 DiffusionOperatorP1: Determine global dofs ...
16:45 DiffusionOperatorP1: Boundary treatment ...
16:45 DiffusionOperatorP1: Assemble system matrix ...
16:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:45 DiffusionOperatorP1: Determine global dofs ...
16:45 DiffusionOperatorP1: Boundary treatment ...
16:45 DiffusionOperatorP1: Assemble system matrix ...
16:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:45 DiffusionOperatorP1: Determine global dofs ...
16:45 DiffusionOperatorP1: Boundary treatment ...
16:45 DiffusionOperatorP1: Assemble system matrix ...
16:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:45 DiffusionOperatorP1: Determine global dofs ...
16:45 DiffusionOperatorP1: Boundary treatment ...
16:45 DiffusionOperatorP1: Assemble system matrix ...
16:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:45 DiffusionOperatorP1: Determine global dofs ...
16:45 DiffusionOperatorP1: Boundary treatment ...
16:45 DiffusionOperatorP1: Assemble system matrix ...
16:45 L2ProductP1: Integrate the products of the shape functions on each element
16:45 L2ProductP1: Determine global dofs ...
16:45 L2ProductP1: Boundary treatment ...
16:45 L2ProductP1: Assemble system matrix ...
16:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:45 DiffusionOperatorP1: Determine global dofs ...
16:45 DiffusionOperatorP1: Boundary treatment ...
16:45 DiffusionOperatorP1: Assemble system matrix ...
16:45 L2ProductP1: Integrate the products of the shape functions on each element
16:45 L2ProductP1: Determine global dofs ...
16:45 L2ProductP1: Boundary treatment ...
16:45 L2ProductP1: Assemble system matrix ...
16:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:45 DiffusionOperatorP1: Determine global dofs ...
16:45 DiffusionOperatorP1: Boundary treatment ...
16:45 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;7]" time="0.27667784690856934"><system-err>16:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:46 DiffusionOperatorP1: Determine global dofs ...
16:46 DiffusionOperatorP1: Boundary treatment ...
16:46 DiffusionOperatorP1: Assemble system matrix ...
16:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:46 DiffusionOperatorP1: Determine global dofs ...
16:46 DiffusionOperatorP1: Boundary treatment ...
16:46 DiffusionOperatorP1: Assemble system matrix ...
16:46 L2ProductP1: Integrate the products of the shape functions on each element
16:46 L2ProductP1: Determine global dofs ...
16:46 L2ProductP1: Boundary treatment ...
16:46 L2ProductP1: Assemble system matrix ...
16:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:46 DiffusionOperatorP1: Determine global dofs ...
16:46 DiffusionOperatorP1: Boundary treatment ...
16:46 DiffusionOperatorP1: Assemble system matrix ...
16:46 L2ProductP1: Integrate the products of the shape functions on each element
16:46 L2ProductP1: Determine global dofs ...
16:46 L2ProductP1: Boundary treatment ...
16:46 L2ProductP1: Assemble system matrix ...
16:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:46 DiffusionOperatorP1: Determine global dofs ...
16:46 DiffusionOperatorP1: Boundary treatment ...
16:46 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;8]" time="0.2733745574951172"><system-err>16:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:46 DiffusionOperatorP1: Determine global dofs ...
16:46 DiffusionOperatorP1: Boundary treatment ...
16:46 DiffusionOperatorP1: Assemble system matrix ...
16:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:46 DiffusionOperatorP1: Determine global dofs ...
16:46 DiffusionOperatorP1: Boundary treatment ...
16:46 DiffusionOperatorP1: Assemble system matrix ...
16:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:46 DiffusionOperatorP1: Determine global dofs ...
16:46 DiffusionOperatorP1: Boundary treatment ...
16:46 DiffusionOperatorP1: Assemble system matrix ...
16:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:46 DiffusionOperatorP1: Determine global dofs ...
16:46 DiffusionOperatorP1: Boundary treatment ...
16:46 DiffusionOperatorP1: Assemble system matrix ...
16:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:46 DiffusionOperatorP1: Determine global dofs ...
16:46 DiffusionOperatorP1: Boundary treatment ...
16:46 DiffusionOperatorP1: Assemble system matrix ...
16:46 L2ProductP1: Integrate the products of the shape functions on each element
16:46 L2ProductP1: Determine global dofs ...
16:46 L2ProductP1: Boundary treatment ...
16:46 L2ProductP1: Assemble system matrix ...
16:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:46 DiffusionOperatorP1: Determine global dofs ...
16:46 DiffusionOperatorP1: Boundary treatment ...
16:46 DiffusionOperatorP1: Assemble system matrix ...
16:46 L2ProductP1: Integrate the products of the shape functions on each element
16:46 L2ProductP1: Determine global dofs ...
16:46 L2ProductP1: Boundary treatment ...
16:46 L2ProductP1: Assemble system matrix ...
16:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:46 DiffusionOperatorP1: Determine global dofs ...
16:46 DiffusionOperatorP1: Boundary treatment ...
16:46 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;9]" time="0.28143811225891113"><system-err>16:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:46 DiffusionOperatorP1: Determine global dofs ...
16:46 DiffusionOperatorP1: Boundary treatment ...
16:46 DiffusionOperatorP1: Assemble system matrix ...
16:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:46 DiffusionOperatorP1: Determine global dofs ...
16:46 DiffusionOperatorP1: Boundary treatment ...
16:46 DiffusionOperatorP1: Assemble system matrix ...
16:46 L2ProductP1: Integrate the products of the shape functions on each element
16:46 L2ProductP1: Determine global dofs ...
16:46 L2ProductP1: Boundary treatment ...
16:46 L2ProductP1: Assemble system matrix ...
16:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:46 DiffusionOperatorP1: Determine global dofs ...
16:46 DiffusionOperatorP1: Boundary treatment ...
16:46 DiffusionOperatorP1: Assemble system matrix ...
16:46 L2ProductP1: Integrate the products of the shape functions on each element
16:46 L2ProductP1: Determine global dofs ...
16:46 L2ProductP1: Boundary treatment ...
16:46 L2ProductP1: Assemble system matrix ...
16:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:46 DiffusionOperatorP1: Determine global dofs ...
16:46 DiffusionOperatorP1: Boundary treatment ...
16:46 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;10]" time="0.2785160541534424"><system-err>16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
16:47 L2ProductP1: Integrate the products of the shape functions on each element
16:47 L2ProductP1: Determine global dofs ...
16:47 L2ProductP1: Boundary treatment ...
16:47 L2ProductP1: Assemble system matrix ...
16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
16:47 L2ProductP1: Integrate the products of the shape functions on each element
16:47 L2ProductP1: Determine global dofs ...
16:47 L2ProductP1: Boundary treatment ...
16:47 L2ProductP1: Assemble system matrix ...
16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;11]" time="0.2791101932525635"><system-err>16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
16:47 L2ProductP1: Integrate the products of the shape functions on each element
16:47 L2ProductP1: Determine global dofs ...
16:47 L2ProductP1: Boundary treatment ...
16:47 L2ProductP1: Assemble system matrix ...
16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
16:47 L2ProductP1: Integrate the products of the shape functions on each element
16:47 L2ProductP1: Determine global dofs ...
16:47 L2ProductP1: Boundary treatment ...
16:47 L2ProductP1: Assemble system matrix ...
16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;12]" time="0.25202512741088867"><system-err>16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
16:47 L2ProductP1: Integrate the products of the shape functions on each element
16:47 L2ProductP1: Determine global dofs ...
16:47 L2ProductP1: Boundary treatment ...
16:47 L2ProductP1: Assemble system matrix ...
16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
16:47 L2ProductP1: Integrate the products of the shape functions on each element
16:47 L2ProductP1: Determine global dofs ...
16:47 L2ProductP1: Boundary treatment ...
16:47 L2ProductP1: Assemble system matrix ...
16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;13]" time="0.25026464462280273"><system-err>16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
16:47 L2ProductP1: Integrate the products of the shape functions on each element
16:47 L2ProductP1: Determine global dofs ...
16:47 L2ProductP1: Boundary treatment ...
16:47 L2ProductP1: Assemble system matrix ...
16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
16:47 L2ProductP1: Integrate the products of the shape functions on each element
16:47 L2ProductP1: Determine global dofs ...
16:47 L2ProductP1: Boundary treatment ...
16:47 L2ProductP1: Assemble system matrix ...
16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;14]" time="0.2797434329986572"><system-err>16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
16:48 L2ProductP1: Integrate the products of the shape functions on each element
16:48 L2ProductP1: Determine global dofs ...
16:48 L2ProductP1: Boundary treatment ...
16:48 L2ProductP1: Assemble system matrix ...
16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
16:48 L2ProductP1: Integrate the products of the shape functions on each element
16:48 L2ProductP1: Determine global dofs ...
16:48 L2ProductP1: Boundary treatment ...
16:48 L2ProductP1: Assemble system matrix ...
16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;15]" time="0.27829980850219727"><system-err>16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
16:48 L2ProductP1: Integrate the products of the shape functions on each element
16:48 L2ProductP1: Determine global dofs ...
16:48 L2ProductP1: Boundary treatment ...
16:48 L2ProductP1: Assemble system matrix ...
16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
16:48 L2ProductP1: Integrate the products of the shape functions on each element
16:48 L2ProductP1: Determine global dofs ...
16:48 L2ProductP1: Boundary treatment ...
16:48 L2ProductP1: Assemble system matrix ...
16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;16]" time="0.2354593276977539"><system-err>16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
16:48 L2ProductP1: Integrate the products of the shape functions on each element
16:48 L2ProductP1: Determine global dofs ...
16:48 L2ProductP1: Boundary treatment ...
16:48 L2ProductP1: Assemble system matrix ...
16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
16:48 L2ProductP1: Integrate the products of the shape functions on each element
16:48 L2ProductP1: Determine global dofs ...
16:48 L2ProductP1: Boundary treatment ...
16:48 L2ProductP1: Assemble system matrix ...
16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;17]" time="0.2323594093322754"><system-err>16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
16:48 L2ProductP1: Integrate the products of the shape functions on each element
16:48 L2ProductP1: Determine global dofs ...
16:48 L2ProductP1: Boundary treatment ...
16:48 L2ProductP1: Assemble system matrix ...
16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
16:48 L2ProductP1: Integrate the products of the shape functions on each element
16:48 L2ProductP1: Determine global dofs ...
16:48 L2ProductP1: Boundary treatment ...
16:48 L2ProductP1: Assemble system matrix ...
16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;18]" time="0.2728240489959717"><system-err>16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
16:49 L2ProductP1: Integrate the products of the shape functions on each element
16:49 L2ProductP1: Determine global dofs ...
16:49 L2ProductP1: Boundary treatment ...
16:49 L2ProductP1: Assemble system matrix ...
16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
16:49 L2ProductP1: Integrate the products of the shape functions on each element
16:49 L2ProductP1: Determine global dofs ...
16:49 L2ProductP1: Boundary treatment ...
16:49 L2ProductP1: Assemble system matrix ...
16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;19]" time="0.28271031379699707"><system-err>16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
16:49 L2ProductP1: Integrate the products of the shape functions on each element
16:49 L2ProductP1: Determine global dofs ...
16:49 L2ProductP1: Boundary treatment ...
16:49 L2ProductP1: Assemble system matrix ...
16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
16:49 L2ProductP1: Integrate the products of the shape functions on each element
16:49 L2ProductP1: Determine global dofs ...
16:49 L2ProductP1: Boundary treatment ...
16:49 L2ProductP1: Assemble system matrix ...
16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;20]" time="0.2743816375732422"><system-err>16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
16:49 L2ProductP1: Integrate the products of the shape functions on each element
16:49 L2ProductP1: Determine global dofs ...
16:49 L2ProductP1: Boundary treatment ...
16:49 L2ProductP1: Assemble system matrix ...
16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
16:49 L2ProductP1: Integrate the products of the shape functions on each element
16:49 L2ProductP1: Determine global dofs ...
16:49 L2ProductP1: Boundary treatment ...
16:49 L2ProductP1: Assemble system matrix ...
16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;21]" time="0.2807786464691162"><system-err>16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
16:49 L2ProductP1: Integrate the products of the shape functions on each element
16:49 L2ProductP1: Determine global dofs ...
16:49 L2ProductP1: Boundary treatment ...
16:49 L2ProductP1: Assemble system matrix ...
16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
16:49 L2ProductP1: Integrate the products of the shape functions on each element
16:49 L2ProductP1: Determine global dofs ...
16:49 L2ProductP1: Boundary treatment ...
16:49 L2ProductP1: Assemble system matrix ...
16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;22]" time="0.277632474899292"><system-err>16:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:50 DiffusionOperatorP1: Determine global dofs ...
16:50 DiffusionOperatorP1: Boundary treatment ...
16:50 DiffusionOperatorP1: Assemble system matrix ...
16:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:50 DiffusionOperatorP1: Determine global dofs ...
16:50 DiffusionOperatorP1: Boundary treatment ...
16:50 DiffusionOperatorP1: Assemble system matrix ...
16:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:50 DiffusionOperatorP1: Determine global dofs ...
16:50 DiffusionOperatorP1: Boundary treatment ...
16:50 DiffusionOperatorP1: Assemble system matrix ...
16:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:50 DiffusionOperatorP1: Determine global dofs ...
16:50 DiffusionOperatorP1: Boundary treatment ...
16:50 DiffusionOperatorP1: Assemble system matrix ...
16:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:50 DiffusionOperatorP1: Determine global dofs ...
16:50 DiffusionOperatorP1: Boundary treatment ...
16:50 DiffusionOperatorP1: Assemble system matrix ...
16:50 L2ProductP1: Integrate the products of the shape functions on each element
16:50 L2ProductP1: Determine global dofs ...
16:50 L2ProductP1: Boundary treatment ...
16:50 L2ProductP1: Assemble system matrix ...
16:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:50 DiffusionOperatorP1: Determine global dofs ...
16:50 DiffusionOperatorP1: Boundary treatment ...
16:50 DiffusionOperatorP1: Assemble system matrix ...
16:50 L2ProductP1: Integrate the products of the shape functions on each element
16:50 L2ProductP1: Determine global dofs ...
16:50 L2ProductP1: Boundary treatment ...
16:50 L2ProductP1: Assemble system matrix ...
16:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:50 DiffusionOperatorP1: Determine global dofs ...
16:50 DiffusionOperatorP1: Boundary treatment ...
16:50 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;23]" time="0.27695322036743164"><system-err>16:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:50 DiffusionOperatorP1: Determine global dofs ...
16:50 DiffusionOperatorP1: Boundary treatment ...
16:50 DiffusionOperatorP1: Assemble system matrix ...
16:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:50 DiffusionOperatorP1: Determine global dofs ...
16:50 DiffusionOperatorP1: Boundary treatment ...
16:50 DiffusionOperatorP1: Assemble system matrix ...
16:50 L2ProductP1: Integrate the products of the shape functions on each element
16:50 L2ProductP1: Determine global dofs ...
16:50 L2ProductP1: Boundary treatment ...
16:50 L2ProductP1: Assemble system matrix ...
16:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:50 DiffusionOperatorP1: Determine global dofs ...
16:50 DiffusionOperatorP1: Boundary treatment ...
16:50 DiffusionOperatorP1: Assemble system matrix ...
16:50 L2ProductP1: Integrate the products of the shape functions on each element
16:50 L2ProductP1: Determine global dofs ...
16:50 L2ProductP1: Boundary treatment ...
16:50 L2ProductP1: Assemble system matrix ...
16:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:50 DiffusionOperatorP1: Determine global dofs ...
16:50 DiffusionOperatorP1: Boundary treatment ...
16:50 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;24]" time="0.2661409378051758"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;25]" time="0.27023816108703613"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;26]" time="0.2679405212402344"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;27]" time="0.2169489860534668"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;28]" time="0.2132871150970459"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;29]" time="0.21505212783813477"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;30]" time="0.21785736083984375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;31]" time="0.21670222282409668"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;32]" time="0.7826268672943115"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;33]" time="0.5918116569519043"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;34]" time="0.23895001411437988"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;35]" time="0.5954141616821289"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;36]" time="0.2686161994934082"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;0]" time="0.0047528743743896484"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;1]" time="0.0017507076263427734"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;2]" time="0.00642848014831543"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;3]" time="0.0053653717041015625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;4]" time="0.0056154727935791016"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;5]" time="0.002850055694580078"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;6]" time="0.001566171646118164"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;7]" time="0.006363391876220703"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;8]" time="0.0125274658203125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;9]" time="0.020749568939208984"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;10]" time="0.0071332454681396484"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;11]" time="0.00214385986328125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;12]" time="0.015027046203613281"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;13]" time="0.010982513427734375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;14]" time="0.012290000915527344"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;15]" time="0.007035255432128906"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;16]" time="0.0026292800903320312"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;17]" time="0.011189937591552734"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;18]" time="0.045351266860961914"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;19]" time="0.04486823081970215"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;20]" time="0.003837108612060547"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;21]" time="0.0027887821197509766"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;22]" time="0.015596389770507812"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;23]" time="0.11971783638000488"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;24]" time="0.22489666938781738"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.004742145538330078"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0037581920623779297"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.005797386169433594"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.008237600326538086"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.008514881134033203"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.0063822269439697266"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0037643909454345703"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.003877878189086914"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.0174863338470459"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.03448200225830078"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.11205530166625977"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.008376836776733398"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.005813121795654297"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.01058340072631836"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.009052276611328125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.010015249252319336"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.014696121215820312"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.015481948852539062"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.005114555358886719"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.00466465950012207"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.041307926177978516"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.04505658149719238"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.14945387840270996"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.009287357330322266"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0037016868591308594"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.004914999008178711"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.037926673889160156"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.0622859001159668"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.21690678596496582"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.011054754257202148"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.003984689712524414"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.003843545913696289"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.006074666976928711"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.008444070816040039"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.008583545684814453"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.0063898563385009766"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.003804922103881836"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0038421154022216797"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.017677783966064453"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.03558230400085449"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.11277961730957031"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.008523941040039062"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.0058901309967041016"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.010645151138305664"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.008535623550415039"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.009885311126708984"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.014801979064941406"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.015902996063232422"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.0053746700286865234"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.0046732425689697266"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.04271054267883301"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.04469013214111328"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.14747262001037598"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.009258270263671875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.003668546676635742"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.004758596420288086"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.037403106689453125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.061691999435424805"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.2149965763092041"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.011216878890991211"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.0040590763092041016"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0036890506744384766"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.00573420524597168"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.008347034454345703"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.008464813232421875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.006513833999633789"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.0038068294525146484"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0038633346557617188"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.017645597457885742"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.03519582748413086"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.11342287063598633"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.008280277252197266"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.005867719650268555"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.010414838790893555"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.008748054504394531"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.009956836700439453"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.014937639236450195"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.016054153442382812"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.005448102951049805"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.004855155944824219"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.04193830490112305"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.04504704475402832"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.14627742767333984"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.009207963943481445"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.003721952438354492"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.004861116409301758"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.03922438621520996"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.06250238418579102"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.21707844734191895"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.01084589958190918"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.004021167755126953"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.00379180908203125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.00581669807434082"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.00836324691772461"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.00832366943359375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.0063207149505615234"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.003682374954223633"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0037679672241210938"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.017672300338745117"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.03571510314941406"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.11244606971740723"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.008419513702392578"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.005880594253540039"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.010466575622558594"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.008704185485839844"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.009817361831665039"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.014786481857299805"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.015918731689453125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.005568027496337891"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.004873991012573242"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.0415496826171875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.04518318176269531"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.1490952968597412"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.009479045867919922"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.003885030746459961"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.005076885223388672"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.03778958320617676"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.06225109100341797"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.21627378463745117"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.011336088180541992"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.00422215461730957"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.003990650177001953"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.006106853485107422"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.008590221405029297"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.008758306503295898"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.006797313690185547"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.003924369812011719"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.004068613052368164"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.017961740493774414"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.03541684150695801"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.11283040046691895"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.008424043655395508"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.006045341491699219"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.010202646255493164"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.008590221405029297"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.009914636611938477"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.014752864837646484"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.015997886657714844"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.005700349807739258"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.004734992980957031"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.0418705940246582"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.04562067985534668"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.14770269393920898"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.009715557098388672"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.003980875015258789"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.00513458251953125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.03790855407714844"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.06286764144897461"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.21712112426757812"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.010936498641967773"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.004154205322265625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.003923654556274414"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.006089210510253906"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.008604049682617188"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.008860588073730469"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.0065038204193115234"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.003902435302734375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0039026737213134766"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.018268346786499023"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.03547954559326172"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.1136629581451416"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.008499383926391602"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.006026506423950195"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.010249137878417969"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.00841832160949707"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.009733438491821289"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.014719724655151367"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.01578378677368164"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.005415439605712891"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.004748106002807617"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.04105973243713379"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.04548931121826172"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.148482084274292"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.009979009628295898"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.003790616989135742"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.0050640106201171875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.039897918701171875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.06280779838562012"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.2159278392791748"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.01100611686706543"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.0041730403900146484"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.003877401351928711"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.005984306335449219"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.008554220199584961"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.008646011352539062"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.0065882205963134766"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.0037832260131835938"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0040132999420166016"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.01782059669494629"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.03537297248840332"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.11289858818054199"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.008550882339477539"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.00608062744140625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.010291337966918945"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.008550643920898438"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.009907722473144531"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.015044450759887695"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.016103029251098633"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.009268045425415039"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.005751848220825195"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.04209494590759277"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.04583144187927246"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.14790582656860352"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.009469985961914062"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.004809379577636719"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.0048215389251708984"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.03760981559753418"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.06280374526977539"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.2167363166809082"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.010985136032104492"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.00412297248840332"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0042340755462646484"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.0060787200927734375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.008682012557983398"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.008714437484741211"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.00667572021484375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.003926515579223633"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.00395965576171875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.017869949340820312"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.0356745719909668"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.11464738845825195"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.008614778518676758"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.006085634231567383"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.010263442993164062"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.00857400894165039"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.009989023208618164"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.015039205551147461"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.016221284866333008"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.00546574592590332"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.0048100948333740234"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.041707515716552734"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.047273874282836914"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.14845919609069824"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.00951385498046875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.0038607120513916016"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.00510859489440918"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.03757834434509277"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.06374526023864746"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.21757793426513672"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.010889768600463867"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.004380702972412109"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0037474632263183594"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.0059528350830078125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.008363723754882812"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.008368968963623047"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.006305694580078125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.0036945343017578125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0037827491760253906"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.01797342300415039"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.03563666343688965"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.11284637451171875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.008354425430297852"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.005853891372680664"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.01037740707397461"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.008753776550292969"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.010061264038085938"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.015087127685546875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.016179800033569336"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.005584001541137695"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.005034923553466797"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.041907310485839844"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.045525550842285156"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.14709782600402832"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.009643077850341797"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.004761695861816406"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.004921436309814453"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.03754854202270508"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.062189579010009766"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.21698689460754395"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.01125025749206543"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="178" name="test_project_array" time="0.0023026466369628906"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="188" name="test_project_array_with_product" time="0.0029168128967285156"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;0]" time="0.0025675296783447266"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;1]" time="0.0020537376403808594"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;2]" time="0.0021877288818359375"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;3]" time="0.11506152153015137"><system-err>17:04 gram_schmidt: Orthonormalizing vector 31 again
17:04 gram_schmidt: Removing linear dependent vector 32
17:04 gram_schmidt: Removing linear dependent vector 33
17:04 gram_schmidt: Removing linear dependent vector 34
17:04 gram_schmidt: Removing linear dependent vector 35
17:04 gram_schmidt: Removing linear dependent vector 36
17:04 gram_schmidt: Removing linear dependent vector 37
17:04 gram_schmidt: Removing linear dependent vector 38
17:04 gram_schmidt: Removing linear dependent vector 39
17:04 gram_schmidt: Removing linear dependent vector 40
17:04 gram_schmidt: Removing linear dependent vector 41
17:04 gram_schmidt: Removing linear dependent vector 42
17:04 gram_schmidt: Orthonormalizing vector 31 again
17:04 gram_schmidt: Removing linear dependent vector 32
17:04 gram_schmidt: Removing linear dependent vector 33
17:04 gram_schmidt: Removing linear dependent vector 34
17:04 gram_schmidt: Removing linear dependent vector 35
17:04 gram_schmidt: Removing linear dependent vector 36
17:04 gram_schmidt: Removing linear dependent vector 37
17:04 gram_schmidt: Removing linear dependent vector 38
17:04 gram_schmidt: Removing linear dependent vector 39
17:04 gram_schmidt: Removing linear dependent vector 40
17:04 gram_schmidt: Removing linear dependent vector 41
17:04 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;4]" time="0.02389812469482422"><system-err>17:04 gram_schmidt: Removing vector 0 of norm 0.0
17:04 gram_schmidt: Removing vector 1 of norm 0.0
17:04 gram_schmidt: Removing vector 2 of norm 0.0
17:04 gram_schmidt: Removing vector 3 of norm 0.0
17:04 gram_schmidt: Removing vector 4 of norm 0.0
17:04 gram_schmidt: Removing vector 5 of norm 0.0
17:04 gram_schmidt: Removing vector 6 of norm 0.0
17:04 gram_schmidt: Removing vector 7 of norm 0.0
17:04 gram_schmidt: Removing vector 8 of norm 0.0
17:04 gram_schmidt: Removing vector 9 of norm 0.0
17:04 gram_schmidt: Removing vector 10 of norm 0.0
17:04 gram_schmidt: Removing vector 11 of norm 0.0
17:04 gram_schmidt: Removing vector 12 of norm 0.0
17:04 gram_schmidt: Removing vector 13 of norm 0.0
17:04 gram_schmidt: Removing vector 14 of norm 0.0
17:04 gram_schmidt: Removing vector 15 of norm 0.0
17:04 gram_schmidt: Removing vector 16 of norm 0.0
17:04 gram_schmidt: Removing vector 17 of norm 0.0
17:04 gram_schmidt: Removing vector 18 of norm 0.0
17:04 gram_schmidt: Removing vector 19 of norm 0.0
17:04 gram_schmidt: Removing vector 20 of norm 0.0
17:04 gram_schmidt: Removing vector 21 of norm 0.0
17:04 gram_schmidt: Removing vector 22 of norm 0.0
17:04 gram_schmidt: Removing vector 23 of norm 0.0
17:04 gram_schmidt: Removing vector 24 of norm 0.0
17:04 gram_schmidt: Removing vector 25 of norm 0.0
17:04 gram_schmidt: Removing vector 26 of norm 0.0
17:04 gram_schmidt: Removing vector 27 of norm 0.0
17:04 gram_schmidt: Removing vector 28 of norm 0.0
17:04 gram_schmidt: Removing vector 29 of norm 0.0
17:04 gram_schmidt: Removing vector 30 of norm 0.0
17:04 gram_schmidt: Removing vector 31 of norm 0.0
17:04 gram_schmidt: Removing vector 32 of norm 0.0
17:04 gram_schmidt: Removing vector 33 of norm 0.0
17:04 gram_schmidt: Removing vector 34 of norm 0.0
17:04 gram_schmidt: Removing vector 35 of norm 0.0
17:04 gram_schmidt: Removing vector 36 of norm 0.0
17:04 gram_schmidt: Removing vector 37 of norm 0.0
17:04 gram_schmidt: Removing vector 38 of norm 0.0
17:04 gram_schmidt: Removing vector 39 of norm 0.0
17:04 gram_schmidt: Removing vector 40 of norm 0.0
17:04 gram_schmidt: Removing vector 41 of norm 0.0
17:04 gram_schmidt: Removing vector 42 of norm 0.0
17:04 gram_schmidt: Removing vector 43 of norm 0.0
17:04 gram_schmidt: Removing vector 44 of norm 0.0
17:04 gram_schmidt: Removing vector 45 of norm 0.0
17:04 gram_schmidt: Removing vector 46 of norm 0.0
17:04 gram_schmidt: Removing vector 47 of norm 0.0
17:04 gram_schmidt: Removing vector 48 of norm 0.0
17:04 gram_schmidt: Removing vector 49 of norm 0.0
17:04 gram_schmidt: Removing vector 50 of norm 0.0
17:04 gram_schmidt: Removing vector 51 of norm 0.0
17:04 gram_schmidt: Removing vector 52 of norm 0.0
17:04 gram_schmidt: Removing vector 53 of norm 0.0
17:04 gram_schmidt: Removing vector 54 of norm 0.0
17:04 gram_schmidt: Removing vector 55 of norm 0.0
17:04 gram_schmidt: Removing vector 56 of norm 0.0
17:04 gram_schmidt: Removing vector 57 of norm 0.0
17:04 gram_schmidt: Removing vector 58 of norm 0.0
17:04 gram_schmidt: Removing vector 59 of norm 0.0
17:04 gram_schmidt: Removing vector 60 of norm 0.0
17:04 gram_schmidt: Removing vector 61 of norm 0.0
17:04 gram_schmidt: Removing vector 62 of norm 0.0
17:04 gram_schmidt: Removing vector 63 of norm 0.0
17:04 gram_schmidt: Removing vector 64 of norm 0.0
17:04 gram_schmidt: Removing vector 65 of norm 0.0
17:04 gram_schmidt: Removing vector 66 of norm 0.0
17:04 gram_schmidt: Removing vector 67 of norm 0.0
17:04 gram_schmidt: Removing vector 68 of norm 0.0
17:04 gram_schmidt: Removing vector 69 of norm 0.0
17:04 gram_schmidt: Removing vector 70 of norm 0.0
17:04 gram_schmidt: Removing vector 71 of norm 0.0
17:04 gram_schmidt: Removing vector 72 of norm 0.0
17:04 gram_schmidt: Removing vector 73 of norm 0.0
17:04 gram_schmidt: Removing vector 74 of norm 0.0
17:04 gram_schmidt: Removing vector 75 of norm 0.0
17:04 gram_schmidt: Removing vector 76 of norm 0.0
17:04 gram_schmidt: Removing vector 77 of norm 0.0
17:04 gram_schmidt: Removing vector 78 of norm 0.0
17:04 gram_schmidt: Removing vector 79 of norm 0.0
17:04 gram_schmidt: Removing vector 80 of norm 0.0
17:04 gram_schmidt: Removing vector 81 of norm 0.0
17:04 gram_schmidt: Removing vector 82 of norm 0.0
17:04 gram_schmidt: Removing vector 83 of norm 0.0
17:04 gram_schmidt: Removing vector 84 of norm 0.0
17:04 gram_schmidt: Removing vector 85 of norm 0.0
17:04 gram_schmidt: Removing vector 86 of norm 0.0
17:04 gram_schmidt: Removing vector 87 of norm 0.0
17:04 gram_schmidt: Removing vector 88 of norm 0.0
17:04 gram_schmidt: Removing vector 89 of norm 0.0
17:04 gram_schmidt: Removing vector 90 of norm 0.0
17:04 gram_schmidt: Removing vector 91 of norm 0.0
17:04 gram_schmidt: Removing vector 92 of norm 0.0
17:04 gram_schmidt: Removing vector 93 of norm 0.0
17:04 gram_schmidt: Removing vector 94 of norm 0.0
17:04 gram_schmidt: Removing vector 95 of norm 0.0
17:04 gram_schmidt: Removing vector 96 of norm 0.0
17:04 gram_schmidt: Removing vector 97 of norm 0.0
17:04 gram_schmidt: Removing vector 98 of norm 0.0
17:04 gram_schmidt: Removing vector 99 of norm 0.0
17:04 gram_schmidt: Removing vector 100 of norm 0.0
17:04 gram_schmidt: Removing vector 101 of norm 0.0
17:04 gram_schmidt: Removing vector 0 of norm 0.0
17:04 gram_schmidt: Removing vector 1 of norm 0.0
17:04 gram_schmidt: Removing vector 2 of norm 0.0
17:04 gram_schmidt: Removing vector 3 of norm 0.0
17:04 gram_schmidt: Removing vector 4 of norm 0.0
17:04 gram_schmidt: Removing vector 5 of norm 0.0
17:04 gram_schmidt: Removing vector 6 of norm 0.0
17:04 gram_schmidt: Removing vector 7 of norm 0.0
17:04 gram_schmidt: Removing vector 8 of norm 0.0
17:04 gram_schmidt: Removing vector 9 of norm 0.0
17:04 gram_schmidt: Removing vector 10 of norm 0.0
17:04 gram_schmidt: Removing vector 11 of norm 0.0
17:04 gram_schmidt: Removing vector 12 of norm 0.0
17:04 gram_schmidt: Removing vector 13 of norm 0.0
17:04 gram_schmidt: Removing vector 14 of norm 0.0
17:04 gram_schmidt: Removing vector 15 of norm 0.0
17:04 gram_schmidt: Removing vector 16 of norm 0.0
17:04 gram_schmidt: Removing vector 17 of norm 0.0
17:04 gram_schmidt: Removing vector 18 of norm 0.0
17:04 gram_schmidt: Removing vector 19 of norm 0.0
17:04 gram_schmidt: Removing vector 20 of norm 0.0
17:04 gram_schmidt: Removing vector 21 of norm 0.0
17:04 gram_schmidt: Removing vector 22 of norm 0.0
17:04 gram_schmidt: Removing vector 23 of norm 0.0
17:04 gram_schmidt: Removing vector 24 of norm 0.0
17:04 gram_schmidt: Removing vector 25 of norm 0.0
17:04 gram_schmidt: Removing vector 26 of norm 0.0
17:04 gram_schmidt: Removing vector 27 of norm 0.0
17:04 gram_schmidt: Removing vector 28 of norm 0.0
17:04 gram_schmidt: Removing vector 29 of norm 0.0
17:04 gram_schmidt: Removing vector 30 of norm 0.0
17:04 gram_schmidt: Removing vector 31 of norm 0.0
17:04 gram_schmidt: Removing vector 32 of norm 0.0
17:04 gram_schmidt: Removing vector 33 of norm 0.0
17:04 gram_schmidt: Removing vector 34 of norm 0.0
17:04 gram_schmidt: Removing vector 35 of norm 0.0
17:04 gram_schmidt: Removing vector 36 of norm 0.0
17:04 gram_schmidt: Removing vector 37 of norm 0.0
17:04 gram_schmidt: Removing vector 38 of norm 0.0
17:04 gram_schmidt: Removing vector 39 of norm 0.0
17:04 gram_schmidt: Removing vector 40 of norm 0.0
17:04 gram_schmidt: Removing vector 41 of norm 0.0
17:04 gram_schmidt: Removing vector 42 of norm 0.0
17:04 gram_schmidt: Removing vector 43 of norm 0.0
17:04 gram_schmidt: Removing vector 44 of norm 0.0
17:04 gram_schmidt: Removing vector 45 of norm 0.0
17:04 gram_schmidt: Removing vector 46 of norm 0.0
17:04 gram_schmidt: Removing vector 47 of norm 0.0
17:04 gram_schmidt: Removing vector 48 of norm 0.0
17:04 gram_schmidt: Removing vector 49 of norm 0.0
17:04 gram_schmidt: Removing vector 50 of norm 0.0
17:04 gram_schmidt: Removing vector 51 of norm 0.0
17:04 gram_schmidt: Removing vector 52 of norm 0.0
17:04 gram_schmidt: Removing vector 53 of norm 0.0
17:04 gram_schmidt: Removing vector 54 of norm 0.0
17:04 gram_schmidt: Removing vector 55 of norm 0.0
17:04 gram_schmidt: Removing vector 56 of norm 0.0
17:04 gram_schmidt: Removing vector 57 of norm 0.0
17:04 gram_schmidt: Removing vector 58 of norm 0.0
17:04 gram_schmidt: Removing vector 59 of norm 0.0
17:04 gram_schmidt: Removing vector 60 of norm 0.0
17:04 gram_schmidt: Removing vector 61 of norm 0.0
17:04 gram_schmidt: Removing vector 62 of norm 0.0
17:04 gram_schmidt: Removing vector 63 of norm 0.0
17:04 gram_schmidt: Removing vector 64 of norm 0.0
17:04 gram_schmidt: Removing vector 65 of norm 0.0
17:04 gram_schmidt: Removing vector 66 of norm 0.0
17:04 gram_schmidt: Removing vector 67 of norm 0.0
17:04 gram_schmidt: Removing vector 68 of norm 0.0
17:04 gram_schmidt: Removing vector 69 of norm 0.0
17:04 gram_schmidt: Removing vector 70 of norm 0.0
17:04 gram_schmidt: Removing vector 71 of norm 0.0
17:04 gram_schmidt: Removing vector 72 of norm 0.0
17:04 gram_schmidt: Removing vector 73 of norm 0.0
17:04 gram_schmidt: Removing vector 74 of norm 0.0
17:04 gram_schmidt: Removing vector 75 of norm 0.0
17:04 gram_schmidt: Removing vector 76 of norm 0.0
17:04 gram_schmidt: Removing vector 77 of norm 0.0
17:04 gram_schmidt: Removing vector 78 of norm 0.0
17:04 gram_schmidt: Removing vector 79 of norm 0.0
17:04 gram_schmidt: Removing vector 80 of norm 0.0
17:04 gram_schmidt: Removing vector 81 of norm 0.0
17:04 gram_schmidt: Removing vector 82 of norm 0.0
17:04 gram_schmidt: Removing vector 83 of norm 0.0
17:04 gram_schmidt: Removing vector 84 of norm 0.0
17:04 gram_schmidt: Removing vector 85 of norm 0.0
17:04 gram_schmidt: Removing vector 86 of norm 0.0
17:04 gram_schmidt: Removing vector 87 of norm 0.0
17:04 gram_schmidt: Removing vector 88 of norm 0.0
17:04 gram_schmidt: Removing vector 89 of norm 0.0
17:04 gram_schmidt: Removing vector 90 of norm 0.0
17:04 gram_schmidt: Removing vector 91 of norm 0.0
17:04 gram_schmidt: Removing vector 92 of norm 0.0
17:04 gram_schmidt: Removing vector 93 of norm 0.0
17:04 gram_schmidt: Removing vector 94 of norm 0.0
17:04 gram_schmidt: Removing vector 95 of norm 0.0
17:04 gram_schmidt: Removing vector 96 of norm 0.0
17:04 gram_schmidt: Removing vector 97 of norm 0.0
17:04 gram_schmidt: Removing vector 98 of norm 0.0
17:04 gram_schmidt: Removing vector 99 of norm 0.0
17:04 gram_schmidt: Removing vector 100 of norm 0.0
17:04 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;5]" time="0.0028388500213623047"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;6]" time="0.002257108688354492"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;7]" time="0.0025725364685058594"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;8]" time="0.20761823654174805"><system-err>17:04 gram_schmidt: Orthonormalizing vector 31 again
17:04 gram_schmidt: Removing linear dependent vector 32
17:04 gram_schmidt: Removing linear dependent vector 33
17:04 gram_schmidt: Removing linear dependent vector 34
17:04 gram_schmidt: Removing linear dependent vector 35
17:04 gram_schmidt: Removing linear dependent vector 36
17:04 gram_schmidt: Removing linear dependent vector 37
17:04 gram_schmidt: Removing linear dependent vector 38
17:04 gram_schmidt: Removing linear dependent vector 39
17:04 gram_schmidt: Removing linear dependent vector 40
17:04 gram_schmidt: Removing linear dependent vector 41
17:04 gram_schmidt: Removing linear dependent vector 42
17:04 gram_schmidt: Orthonormalizing vector 31 again
17:04 gram_schmidt: Removing linear dependent vector 32
17:04 gram_schmidt: Removing linear dependent vector 33
17:04 gram_schmidt: Removing linear dependent vector 34
17:04 gram_schmidt: Removing linear dependent vector 35
17:04 gram_schmidt: Removing linear dependent vector 36
17:04 gram_schmidt: Removing linear dependent vector 37
17:04 gram_schmidt: Removing linear dependent vector 38
17:04 gram_schmidt: Removing linear dependent vector 39
17:04 gram_schmidt: Removing linear dependent vector 40
17:04 gram_schmidt: Removing linear dependent vector 41
17:04 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;9]" time="0.027870655059814453"><system-err>17:04 gram_schmidt: Removing vector 0 of norm 0.0
17:04 gram_schmidt: Removing vector 1 of norm 0.0
17:04 gram_schmidt: Removing vector 2 of norm 0.0
17:04 gram_schmidt: Removing vector 3 of norm 0.0
17:04 gram_schmidt: Removing vector 4 of norm 0.0
17:04 gram_schmidt: Removing vector 5 of norm 0.0
17:04 gram_schmidt: Removing vector 6 of norm 0.0
17:04 gram_schmidt: Removing vector 7 of norm 0.0
17:04 gram_schmidt: Removing vector 8 of norm 0.0
17:04 gram_schmidt: Removing vector 9 of norm 0.0
17:04 gram_schmidt: Removing vector 10 of norm 0.0
17:04 gram_schmidt: Removing vector 11 of norm 0.0
17:04 gram_schmidt: Removing vector 12 of norm 0.0
17:04 gram_schmidt: Removing vector 13 of norm 0.0
17:04 gram_schmidt: Removing vector 14 of norm 0.0
17:04 gram_schmidt: Removing vector 15 of norm 0.0
17:04 gram_schmidt: Removing vector 16 of norm 0.0
17:04 gram_schmidt: Removing vector 17 of norm 0.0
17:04 gram_schmidt: Removing vector 18 of norm 0.0
17:04 gram_schmidt: Removing vector 19 of norm 0.0
17:04 gram_schmidt: Removing vector 20 of norm 0.0
17:04 gram_schmidt: Removing vector 21 of norm 0.0
17:04 gram_schmidt: Removing vector 22 of norm 0.0
17:04 gram_schmidt: Removing vector 23 of norm 0.0
17:04 gram_schmidt: Removing vector 24 of norm 0.0
17:04 gram_schmidt: Removing vector 25 of norm 0.0
17:04 gram_schmidt: Removing vector 26 of norm 0.0
17:04 gram_schmidt: Removing vector 27 of norm 0.0
17:04 gram_schmidt: Removing vector 28 of norm 0.0
17:04 gram_schmidt: Removing vector 29 of norm 0.0
17:04 gram_schmidt: Removing vector 30 of norm 0.0
17:04 gram_schmidt: Removing vector 31 of norm 0.0
17:04 gram_schmidt: Removing vector 32 of norm 0.0
17:04 gram_schmidt: Removing vector 33 of norm 0.0
17:04 gram_schmidt: Removing vector 34 of norm 0.0
17:04 gram_schmidt: Removing vector 35 of norm 0.0
17:04 gram_schmidt: Removing vector 36 of norm 0.0
17:04 gram_schmidt: Removing vector 37 of norm 0.0
17:04 gram_schmidt: Removing vector 38 of norm 0.0
17:04 gram_schmidt: Removing vector 39 of norm 0.0
17:04 gram_schmidt: Removing vector 40 of norm 0.0
17:04 gram_schmidt: Removing vector 41 of norm 0.0
17:04 gram_schmidt: Removing vector 42 of norm 0.0
17:04 gram_schmidt: Removing vector 43 of norm 0.0
17:04 gram_schmidt: Removing vector 44 of norm 0.0
17:04 gram_schmidt: Removing vector 45 of norm 0.0
17:04 gram_schmidt: Removing vector 46 of norm 0.0
17:04 gram_schmidt: Removing vector 47 of norm 0.0
17:04 gram_schmidt: Removing vector 48 of norm 0.0
17:04 gram_schmidt: Removing vector 49 of norm 0.0
17:04 gram_schmidt: Removing vector 50 of norm 0.0
17:04 gram_schmidt: Removing vector 51 of norm 0.0
17:04 gram_schmidt: Removing vector 52 of norm 0.0
17:04 gram_schmidt: Removing vector 53 of norm 0.0
17:04 gram_schmidt: Removing vector 54 of norm 0.0
17:04 gram_schmidt: Removing vector 55 of norm 0.0
17:04 gram_schmidt: Removing vector 56 of norm 0.0
17:04 gram_schmidt: Removing vector 57 of norm 0.0
17:04 gram_schmidt: Removing vector 58 of norm 0.0
17:04 gram_schmidt: Removing vector 59 of norm 0.0
17:04 gram_schmidt: Removing vector 60 of norm 0.0
17:04 gram_schmidt: Removing vector 61 of norm 0.0
17:04 gram_schmidt: Removing vector 62 of norm 0.0
17:04 gram_schmidt: Removing vector 63 of norm 0.0
17:04 gram_schmidt: Removing vector 64 of norm 0.0
17:04 gram_schmidt: Removing vector 65 of norm 0.0
17:04 gram_schmidt: Removing vector 66 of norm 0.0
17:04 gram_schmidt: Removing vector 67 of norm 0.0
17:04 gram_schmidt: Removing vector 68 of norm 0.0
17:04 gram_schmidt: Removing vector 69 of norm 0.0
17:04 gram_schmidt: Removing vector 70 of norm 0.0
17:04 gram_schmidt: Removing vector 71 of norm 0.0
17:04 gram_schmidt: Removing vector 72 of norm 0.0
17:04 gram_schmidt: Removing vector 73 of norm 0.0
17:04 gram_schmidt: Removing vector 74 of norm 0.0
17:04 gram_schmidt: Removing vector 75 of norm 0.0
17:04 gram_schmidt: Removing vector 76 of norm 0.0
17:04 gram_schmidt: Removing vector 77 of norm 0.0
17:04 gram_schmidt: Removing vector 78 of norm 0.0
17:04 gram_schmidt: Removing vector 79 of norm 0.0
17:04 gram_schmidt: Removing vector 80 of norm 0.0
17:04 gram_schmidt: Removing vector 81 of norm 0.0
17:04 gram_schmidt: Removing vector 82 of norm 0.0
17:04 gram_schmidt: Removing vector 83 of norm 0.0
17:04 gram_schmidt: Removing vector 84 of norm 0.0
17:04 gram_schmidt: Removing vector 85 of norm 0.0
17:04 gram_schmidt: Removing vector 86 of norm 0.0
17:04 gram_schmidt: Removing vector 87 of norm 0.0
17:04 gram_schmidt: Removing vector 88 of norm 0.0
17:04 gram_schmidt: Removing vector 89 of norm 0.0
17:04 gram_schmidt: Removing vector 90 of norm 0.0
17:04 gram_schmidt: Removing vector 91 of norm 0.0
17:04 gram_schmidt: Removing vector 92 of norm 0.0
17:04 gram_schmidt: Removing vector 93 of norm 0.0
17:04 gram_schmidt: Removing vector 94 of norm 0.0
17:04 gram_schmidt: Removing vector 95 of norm 0.0
17:04 gram_schmidt: Removing vector 96 of norm 0.0
17:04 gram_schmidt: Removing vector 97 of norm 0.0
17:04 gram_schmidt: Removing vector 98 of norm 0.0
17:04 gram_schmidt: Removing vector 99 of norm 0.0
17:04 gram_schmidt: Removing vector 100 of norm 0.0
17:04 gram_schmidt: Removing vector 101 of norm 0.0
17:04 gram_schmidt: Removing vector 0 of norm 0.0
17:04 gram_schmidt: Removing vector 1 of norm 0.0
17:04 gram_schmidt: Removing vector 2 of norm 0.0
17:04 gram_schmidt: Removing vector 3 of norm 0.0
17:04 gram_schmidt: Removing vector 4 of norm 0.0
17:04 gram_schmidt: Removing vector 5 of norm 0.0
17:04 gram_schmidt: Removing vector 6 of norm 0.0
17:04 gram_schmidt: Removing vector 7 of norm 0.0
17:04 gram_schmidt: Removing vector 8 of norm 0.0
17:04 gram_schmidt: Removing vector 9 of norm 0.0
17:04 gram_schmidt: Removing vector 10 of norm 0.0
17:04 gram_schmidt: Removing vector 11 of norm 0.0
17:04 gram_schmidt: Removing vector 12 of norm 0.0
17:04 gram_schmidt: Removing vector 13 of norm 0.0
17:04 gram_schmidt: Removing vector 14 of norm 0.0
17:04 gram_schmidt: Removing vector 15 of norm 0.0
17:04 gram_schmidt: Removing vector 16 of norm 0.0
17:04 gram_schmidt: Removing vector 17 of norm 0.0
17:04 gram_schmidt: Removing vector 18 of norm 0.0
17:04 gram_schmidt: Removing vector 19 of norm 0.0
17:04 gram_schmidt: Removing vector 20 of norm 0.0
17:04 gram_schmidt: Removing vector 21 of norm 0.0
17:04 gram_schmidt: Removing vector 22 of norm 0.0
17:04 gram_schmidt: Removing vector 23 of norm 0.0
17:04 gram_schmidt: Removing vector 24 of norm 0.0
17:04 gram_schmidt: Removing vector 25 of norm 0.0
17:04 gram_schmidt: Removing vector 26 of norm 0.0
17:04 gram_schmidt: Removing vector 27 of norm 0.0
17:04 gram_schmidt: Removing vector 28 of norm 0.0
17:04 gram_schmidt: Removing vector 29 of norm 0.0
17:04 gram_schmidt: Removing vector 30 of norm 0.0
17:04 gram_schmidt: Removing vector 31 of norm 0.0
17:04 gram_schmidt: Removing vector 32 of norm 0.0
17:04 gram_schmidt: Removing vector 33 of norm 0.0
17:04 gram_schmidt: Removing vector 34 of norm 0.0
17:04 gram_schmidt: Removing vector 35 of norm 0.0
17:04 gram_schmidt: Removing vector 36 of norm 0.0
17:04 gram_schmidt: Removing vector 37 of norm 0.0
17:04 gram_schmidt: Removing vector 38 of norm 0.0
17:04 gram_schmidt: Removing vector 39 of norm 0.0
17:04 gram_schmidt: Removing vector 40 of norm 0.0
17:04 gram_schmidt: Removing vector 41 of norm 0.0
17:04 gram_schmidt: Removing vector 42 of norm 0.0
17:04 gram_schmidt: Removing vector 43 of norm 0.0
17:04 gram_schmidt: Removing vector 44 of norm 0.0
17:04 gram_schmidt: Removing vector 45 of norm 0.0
17:04 gram_schmidt: Removing vector 46 of norm 0.0
17:04 gram_schmidt: Removing vector 47 of norm 0.0
17:04 gram_schmidt: Removing vector 48 of norm 0.0
17:04 gram_schmidt: Removing vector 49 of norm 0.0
17:04 gram_schmidt: Removing vector 50 of norm 0.0
17:04 gram_schmidt: Removing vector 51 of norm 0.0
17:04 gram_schmidt: Removing vector 52 of norm 0.0
17:04 gram_schmidt: Removing vector 53 of norm 0.0
17:04 gram_schmidt: Removing vector 54 of norm 0.0
17:04 gram_schmidt: Removing vector 55 of norm 0.0
17:04 gram_schmidt: Removing vector 56 of norm 0.0
17:04 gram_schmidt: Removing vector 57 of norm 0.0
17:04 gram_schmidt: Removing vector 58 of norm 0.0
17:04 gram_schmidt: Removing vector 59 of norm 0.0
17:04 gram_schmidt: Removing vector 60 of norm 0.0
17:04 gram_schmidt: Removing vector 61 of norm 0.0
17:04 gram_schmidt: Removing vector 62 of norm 0.0
17:04 gram_schmidt: Removing vector 63 of norm 0.0
17:04 gram_schmidt: Removing vector 64 of norm 0.0
17:04 gram_schmidt: Removing vector 65 of norm 0.0
17:04 gram_schmidt: Removing vector 66 of norm 0.0
17:04 gram_schmidt: Removing vector 67 of norm 0.0
17:04 gram_schmidt: Removing vector 68 of norm 0.0
17:04 gram_schmidt: Removing vector 69 of norm 0.0
17:04 gram_schmidt: Removing vector 70 of norm 0.0
17:04 gram_schmidt: Removing vector 71 of norm 0.0
17:04 gram_schmidt: Removing vector 72 of norm 0.0
17:04 gram_schmidt: Removing vector 73 of norm 0.0
17:04 gram_schmidt: Removing vector 74 of norm 0.0
17:04 gram_schmidt: Removing vector 75 of norm 0.0
17:04 gram_schmidt: Removing vector 76 of norm 0.0
17:04 gram_schmidt: Removing vector 77 of norm 0.0
17:04 gram_schmidt: Removing vector 78 of norm 0.0
17:04 gram_schmidt: Removing vector 79 of norm 0.0
17:04 gram_schmidt: Removing vector 80 of norm 0.0
17:04 gram_schmidt: Removing vector 81 of norm 0.0
17:04 gram_schmidt: Removing vector 82 of norm 0.0
17:04 gram_schmidt: Removing vector 83 of norm 0.0
17:04 gram_schmidt: Removing vector 84 of norm 0.0
17:04 gram_schmidt: Removing vector 85 of norm 0.0
17:04 gram_schmidt: Removing vector 86 of norm 0.0
17:04 gram_schmidt: Removing vector 87 of norm 0.0
17:04 gram_schmidt: Removing vector 88 of norm 0.0
17:04 gram_schmidt: Removing vector 89 of norm 0.0
17:04 gram_schmidt: Removing vector 90 of norm 0.0
17:04 gram_schmidt: Removing vector 91 of norm 0.0
17:04 gram_schmidt: Removing vector 92 of norm 0.0
17:04 gram_schmidt: Removing vector 93 of norm 0.0
17:04 gram_schmidt: Removing vector 94 of norm 0.0
17:04 gram_schmidt: Removing vector 95 of norm 0.0
17:04 gram_schmidt: Removing vector 96 of norm 0.0
17:04 gram_schmidt: Removing vector 97 of norm 0.0
17:04 gram_schmidt: Removing vector 98 of norm 0.0
17:04 gram_schmidt: Removing vector 99 of norm 0.0
17:04 gram_schmidt: Removing vector 100 of norm 0.0
17:04 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;10]" time="0.003597736358642578"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;11]" time="0.00679326057434082"><system-err>17:04 gram_schmidt: Removing linear dependent vector 3
17:04 gram_schmidt: Removing linear dependent vector 3
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;12]" time="0.0039174556732177734"><system-err>17:04 gram_schmidt: Removing vector 0 of norm 0.0
17:04 gram_schmidt: Removing vector 1 of norm 0.0
17:04 gram_schmidt: Removing vector 2 of norm 0.0
17:04 gram_schmidt: Removing vector 0 of norm 0.0
17:04 gram_schmidt: Removing vector 1 of norm 0.0
17:04 gram_schmidt: Removing vector 2 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;13]" time="0.0027832984924316406"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;14]" time="0.005048274993896484"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;15]" time="0.41278576850891113"><system-err>17:04 gram_schmidt: Removing linear dependent vector 36
17:04 gram_schmidt: Removing linear dependent vector 37
17:04 gram_schmidt: Removing linear dependent vector 38
17:04 gram_schmidt: Removing linear dependent vector 39
17:04 gram_schmidt: Removing linear dependent vector 40
17:04 gram_schmidt: Removing linear dependent vector 41
17:04 gram_schmidt: Removing linear dependent vector 42
17:05 gram_schmidt: Removing linear dependent vector 36
17:05 gram_schmidt: Removing linear dependent vector 37
17:05 gram_schmidt: Removing linear dependent vector 38
17:05 gram_schmidt: Removing linear dependent vector 39
17:05 gram_schmidt: Removing linear dependent vector 40
17:05 gram_schmidt: Removing linear dependent vector 41
17:05 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;16]" time="0.21565532684326172"><system-err>17:05 gram_schmidt: Removing linear dependent vector 3
17:05 gram_schmidt: Removing linear dependent vector 4
17:05 gram_schmidt: Removing linear dependent vector 5
17:05 gram_schmidt: Removing linear dependent vector 6
17:05 gram_schmidt: Removing linear dependent vector 7
17:05 gram_schmidt: Removing linear dependent vector 8
17:05 gram_schmidt: Removing linear dependent vector 9
17:05 gram_schmidt: Removing linear dependent vector 10
17:05 gram_schmidt: Removing linear dependent vector 11
17:05 gram_schmidt: Removing linear dependent vector 12
17:05 gram_schmidt: Removing linear dependent vector 13
17:05 gram_schmidt: Removing linear dependent vector 14
17:05 gram_schmidt: Removing linear dependent vector 15
17:05 gram_schmidt: Removing linear dependent vector 16
17:05 gram_schmidt: Removing linear dependent vector 17
17:05 gram_schmidt: Removing linear dependent vector 18
17:05 gram_schmidt: Removing linear dependent vector 19
17:05 gram_schmidt: Removing linear dependent vector 20
17:05 gram_schmidt: Removing linear dependent vector 21
17:05 gram_schmidt: Removing linear dependent vector 22
17:05 gram_schmidt: Removing linear dependent vector 23
17:05 gram_schmidt: Removing linear dependent vector 24
17:05 gram_schmidt: Removing linear dependent vector 25
17:05 gram_schmidt: Removing linear dependent vector 26
17:05 gram_schmidt: Removing linear dependent vector 27
17:05 gram_schmidt: Removing linear dependent vector 28
17:05 gram_schmidt: Removing linear dependent vector 29
17:05 gram_schmidt: Removing linear dependent vector 30
17:05 gram_schmidt: Removing linear dependent vector 31
17:05 gram_schmidt: Removing linear dependent vector 32
17:05 gram_schmidt: Removing linear dependent vector 33
17:05 gram_schmidt: Removing linear dependent vector 34
17:05 gram_schmidt: Removing linear dependent vector 35
17:05 gram_schmidt: Removing linear dependent vector 36
17:05 gram_schmidt: Removing linear dependent vector 37
17:05 gram_schmidt: Removing linear dependent vector 38
17:05 gram_schmidt: Removing linear dependent vector 39
17:05 gram_schmidt: Removing linear dependent vector 40
17:05 gram_schmidt: Removing linear dependent vector 41
17:05 gram_schmidt: Removing linear dependent vector 42
17:05 gram_schmidt: Removing linear dependent vector 43
17:05 gram_schmidt: Removing linear dependent vector 44
17:05 gram_schmidt: Removing linear dependent vector 45
17:05 gram_schmidt: Removing linear dependent vector 46
17:05 gram_schmidt: Removing linear dependent vector 47
17:05 gram_schmidt: Removing linear dependent vector 48
17:05 gram_schmidt: Removing linear dependent vector 49
17:05 gram_schmidt: Removing linear dependent vector 50
17:05 gram_schmidt: Removing linear dependent vector 51
17:05 gram_schmidt: Removing linear dependent vector 52
17:05 gram_schmidt: Removing linear dependent vector 53
17:05 gram_schmidt: Removing linear dependent vector 54
17:05 gram_schmidt: Removing linear dependent vector 55
17:05 gram_schmidt: Removing linear dependent vector 56
17:05 gram_schmidt: Removing linear dependent vector 57
17:05 gram_schmidt: Removing linear dependent vector 58
17:05 gram_schmidt: Removing linear dependent vector 59
17:05 gram_schmidt: Removing linear dependent vector 60
17:05 gram_schmidt: Removing linear dependent vector 61
17:05 gram_schmidt: Removing linear dependent vector 62
17:05 gram_schmidt: Removing linear dependent vector 63
17:05 gram_schmidt: Removing linear dependent vector 64
17:05 gram_schmidt: Removing linear dependent vector 65
17:05 gram_schmidt: Removing linear dependent vector 66
17:05 gram_schmidt: Removing linear dependent vector 67
17:05 gram_schmidt: Removing linear dependent vector 68
17:05 gram_schmidt: Removing linear dependent vector 69
17:05 gram_schmidt: Removing linear dependent vector 70
17:05 gram_schmidt: Removing linear dependent vector 71
17:05 gram_schmidt: Removing linear dependent vector 72
17:05 gram_schmidt: Removing linear dependent vector 73
17:05 gram_schmidt: Removing linear dependent vector 74
17:05 gram_schmidt: Removing linear dependent vector 75
17:05 gram_schmidt: Removing linear dependent vector 76
17:05 gram_schmidt: Removing linear dependent vector 77
17:05 gram_schmidt: Removing linear dependent vector 78
17:05 gram_schmidt: Removing linear dependent vector 79
17:05 gram_schmidt: Removing linear dependent vector 80
17:05 gram_schmidt: Removing linear dependent vector 81
17:05 gram_schmidt: Removing linear dependent vector 82
17:05 gram_schmidt: Removing linear dependent vector 83
17:05 gram_schmidt: Removing linear dependent vector 84
17:05 gram_schmidt: Removing linear dependent vector 85
17:05 gram_schmidt: Removing linear dependent vector 86
17:05 gram_schmidt: Removing linear dependent vector 87
17:05 gram_schmidt: Removing linear dependent vector 88
17:05 gram_schmidt: Removing linear dependent vector 89
17:05 gram_schmidt: Removing linear dependent vector 90
17:05 gram_schmidt: Removing linear dependent vector 91
17:05 gram_schmidt: Removing linear dependent vector 92
17:05 gram_schmidt: Removing linear dependent vector 93
17:05 gram_schmidt: Removing linear dependent vector 94
17:05 gram_schmidt: Removing linear dependent vector 95
17:05 gram_schmidt: Removing linear dependent vector 96
17:05 gram_schmidt: Removing linear dependent vector 97
17:05 gram_schmidt: Removing linear dependent vector 98
17:05 gram_schmidt: Removing linear dependent vector 99
17:05 gram_schmidt: Removing linear dependent vector 100
17:05 gram_schmidt: Removing linear dependent vector 101
17:05 gram_schmidt: Removing linear dependent vector 3
17:05 gram_schmidt: Removing linear dependent vector 4
17:05 gram_schmidt: Removing linear dependent vector 5
17:05 gram_schmidt: Removing linear dependent vector 6
17:05 gram_schmidt: Removing linear dependent vector 7
17:05 gram_schmidt: Removing linear dependent vector 8
17:05 gram_schmidt: Removing linear dependent vector 9
17:05 gram_schmidt: Removing linear dependent vector 10
17:05 gram_schmidt: Removing linear dependent vector 11
17:05 gram_schmidt: Removing linear dependent vector 12
17:05 gram_schmidt: Removing linear dependent vector 13
17:05 gram_schmidt: Removing linear dependent vector 14
17:05 gram_schmidt: Removing linear dependent vector 15
17:05 gram_schmidt: Removing linear dependent vector 16
17:05 gram_schmidt: Removing linear dependent vector 17
17:05 gram_schmidt: Removing linear dependent vector 18
17:05 gram_schmidt: Removing linear dependent vector 19
17:05 gram_schmidt: Removing linear dependent vector 20
17:05 gram_schmidt: Removing linear dependent vector 21
17:05 gram_schmidt: Removing linear dependent vector 22
17:05 gram_schmidt: Removing linear dependent vector 23
17:05 gram_schmidt: Removing linear dependent vector 24
17:05 gram_schmidt: Removing linear dependent vector 25
17:05 gram_schmidt: Removing linear dependent vector 26
17:05 gram_schmidt: Removing linear dependent vector 27
17:05 gram_schmidt: Removing linear dependent vector 28
17:05 gram_schmidt: Removing linear dependent vector 29
17:05 gram_schmidt: Removing linear dependent vector 30
17:05 gram_schmidt: Removing linear dependent vector 31
17:05 gram_schmidt: Removing linear dependent vector 32
17:05 gram_schmidt: Removing linear dependent vector 33
17:05 gram_schmidt: Removing linear dependent vector 34
17:05 gram_schmidt: Removing linear dependent vector 35
17:05 gram_schmidt: Removing linear dependent vector 36
17:05 gram_schmidt: Removing linear dependent vector 37
17:05 gram_schmidt: Removing linear dependent vector 38
17:05 gram_schmidt: Removing linear dependent vector 39
17:05 gram_schmidt: Removing linear dependent vector 40
17:05 gram_schmidt: Removing linear dependent vector 41
17:05 gram_schmidt: Removing linear dependent vector 42
17:05 gram_schmidt: Removing linear dependent vector 43
17:05 gram_schmidt: Removing linear dependent vector 44
17:05 gram_schmidt: Removing linear dependent vector 45
17:05 gram_schmidt: Removing linear dependent vector 46
17:05 gram_schmidt: Removing linear dependent vector 47
17:05 gram_schmidt: Removing linear dependent vector 48
17:05 gram_schmidt: Removing linear dependent vector 49
17:05 gram_schmidt: Removing linear dependent vector 50
17:05 gram_schmidt: Removing linear dependent vector 51
17:05 gram_schmidt: Removing linear dependent vector 52
17:05 gram_schmidt: Removing linear dependent vector 53
17:05 gram_schmidt: Removing linear dependent vector 54
17:05 gram_schmidt: Removing linear dependent vector 55
17:05 gram_schmidt: Removing linear dependent vector 56
17:05 gram_schmidt: Removing linear dependent vector 57
17:05 gram_schmidt: Removing linear dependent vector 58
17:05 gram_schmidt: Removing linear dependent vector 59
17:05 gram_schmidt: Removing linear dependent vector 60
17:05 gram_schmidt: Removing linear dependent vector 61
17:05 gram_schmidt: Removing linear dependent vector 62
17:05 gram_schmidt: Removing linear dependent vector 63
17:05 gram_schmidt: Removing linear dependent vector 64
17:05 gram_schmidt: Removing linear dependent vector 65
17:05 gram_schmidt: Removing linear dependent vector 66
17:05 gram_schmidt: Removing linear dependent vector 67
17:05 gram_schmidt: Removing linear dependent vector 68
17:05 gram_schmidt: Removing linear dependent vector 69
17:05 gram_schmidt: Removing linear dependent vector 70
17:05 gram_schmidt: Removing linear dependent vector 71
17:05 gram_schmidt: Removing linear dependent vector 72
17:05 gram_schmidt: Removing linear dependent vector 73
17:05 gram_schmidt: Removing linear dependent vector 74
17:05 gram_schmidt: Removing linear dependent vector 75
17:05 gram_schmidt: Removing linear dependent vector 76
17:05 gram_schmidt: Removing linear dependent vector 77
17:05 gram_schmidt: Removing linear dependent vector 78
17:05 gram_schmidt: Removing linear dependent vector 79
17:05 gram_schmidt: Removing linear dependent vector 80
17:05 gram_schmidt: Removing linear dependent vector 81
17:05 gram_schmidt: Removing linear dependent vector 82
17:05 gram_schmidt: Removing linear dependent vector 83
17:05 gram_schmidt: Removing linear dependent vector 84
17:05 gram_schmidt: Removing linear dependent vector 85
17:05 gram_schmidt: Removing linear dependent vector 86
17:05 gram_schmidt: Removing linear dependent vector 87
17:05 gram_schmidt: Removing linear dependent vector 88
17:05 gram_schmidt: Removing linear dependent vector 89
17:05 gram_schmidt: Removing linear dependent vector 90
17:05 gram_schmidt: Removing linear dependent vector 91
17:05 gram_schmidt: Removing linear dependent vector 92
17:05 gram_schmidt: Removing linear dependent vector 93
17:05 gram_schmidt: Removing linear dependent vector 94
17:05 gram_schmidt: Removing linear dependent vector 95
17:05 gram_schmidt: Removing linear dependent vector 96
17:05 gram_schmidt: Removing linear dependent vector 97
17:05 gram_schmidt: Removing linear dependent vector 98
17:05 gram_schmidt: Removing linear dependent vector 99
17:05 gram_schmidt: Removing linear dependent vector 100
17:05 gram_schmidt: Removing linear dependent vector 101
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;17]" time="0.003571033477783203"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;18]" time="0.0026350021362304688"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;19]" time="0.0053637027740478516"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;20]" time="0.28298211097717285"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;21]" time="1.484410047531128"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;22]" time="0.002763986587524414"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;23]" time="0.0019190311431884766"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;24]" time="0.007879018783569336"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;25]" time="0.4112563133239746"><system-err>17:07 gram_schmidt: Orthonormalizing vector 31 again
17:07 gram_schmidt: Removing linear dependent vector 32
17:07 gram_schmidt: Removing linear dependent vector 33
17:07 gram_schmidt: Removing linear dependent vector 34
17:07 gram_schmidt: Removing linear dependent vector 35
17:07 gram_schmidt: Removing linear dependent vector 36
17:07 gram_schmidt: Removing linear dependent vector 37
17:07 gram_schmidt: Removing linear dependent vector 38
17:07 gram_schmidt: Removing linear dependent vector 39
17:07 gram_schmidt: Removing linear dependent vector 40
17:07 gram_schmidt: Removing linear dependent vector 41
17:07 gram_schmidt: Removing linear dependent vector 42
17:07 gram_schmidt: Orthonormalizing vector 31 again
17:07 gram_schmidt: Removing linear dependent vector 32
17:07 gram_schmidt: Removing linear dependent vector 33
17:07 gram_schmidt: Removing linear dependent vector 34
17:07 gram_schmidt: Removing linear dependent vector 35
17:07 gram_schmidt: Removing linear dependent vector 36
17:07 gram_schmidt: Removing linear dependent vector 37
17:07 gram_schmidt: Removing linear dependent vector 38
17:07 gram_schmidt: Removing linear dependent vector 39
17:07 gram_schmidt: Removing linear dependent vector 40
17:07 gram_schmidt: Removing linear dependent vector 41
17:07 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;26]" time="0.2316908836364746"><system-err>17:07 gram_schmidt: Removing vector 0 of norm 0.0
17:07 gram_schmidt: Removing vector 1 of norm 0.0
17:07 gram_schmidt: Removing vector 2 of norm 0.0
17:07 gram_schmidt: Removing vector 3 of norm 0.0
17:07 gram_schmidt: Removing vector 4 of norm 0.0
17:07 gram_schmidt: Removing vector 5 of norm 0.0
17:07 gram_schmidt: Removing vector 6 of norm 0.0
17:07 gram_schmidt: Removing vector 7 of norm 0.0
17:07 gram_schmidt: Removing vector 8 of norm 0.0
17:07 gram_schmidt: Removing vector 9 of norm 0.0
17:07 gram_schmidt: Removing vector 10 of norm 0.0
17:07 gram_schmidt: Removing vector 11 of norm 0.0
17:07 gram_schmidt: Removing vector 12 of norm 0.0
17:07 gram_schmidt: Removing vector 13 of norm 0.0
17:07 gram_schmidt: Removing vector 14 of norm 0.0
17:07 gram_schmidt: Removing vector 15 of norm 0.0
17:07 gram_schmidt: Removing vector 16 of norm 0.0
17:07 gram_schmidt: Removing vector 17 of norm 0.0
17:07 gram_schmidt: Removing vector 18 of norm 0.0
17:07 gram_schmidt: Removing vector 19 of norm 0.0
17:07 gram_schmidt: Removing vector 20 of norm 0.0
17:07 gram_schmidt: Removing vector 21 of norm 0.0
17:07 gram_schmidt: Removing vector 22 of norm 0.0
17:07 gram_schmidt: Removing vector 23 of norm 0.0
17:07 gram_schmidt: Removing vector 24 of norm 0.0
17:07 gram_schmidt: Removing vector 25 of norm 0.0
17:07 gram_schmidt: Removing vector 26 of norm 0.0
17:07 gram_schmidt: Removing vector 27 of norm 0.0
17:07 gram_schmidt: Removing vector 28 of norm 0.0
17:07 gram_schmidt: Removing vector 29 of norm 0.0
17:07 gram_schmidt: Removing vector 30 of norm 0.0
17:07 gram_schmidt: Removing vector 31 of norm 0.0
17:07 gram_schmidt: Removing vector 32 of norm 0.0
17:07 gram_schmidt: Removing vector 33 of norm 0.0
17:07 gram_schmidt: Removing vector 34 of norm 0.0
17:07 gram_schmidt: Removing vector 35 of norm 0.0
17:07 gram_schmidt: Removing vector 36 of norm 0.0
17:07 gram_schmidt: Removing vector 37 of norm 0.0
17:07 gram_schmidt: Removing vector 38 of norm 0.0
17:07 gram_schmidt: Removing vector 39 of norm 0.0
17:07 gram_schmidt: Removing vector 40 of norm 0.0
17:07 gram_schmidt: Removing vector 41 of norm 0.0
17:07 gram_schmidt: Removing vector 42 of norm 0.0
17:07 gram_schmidt: Removing vector 43 of norm 0.0
17:07 gram_schmidt: Removing vector 44 of norm 0.0
17:07 gram_schmidt: Removing vector 45 of norm 0.0
17:07 gram_schmidt: Removing vector 46 of norm 0.0
17:07 gram_schmidt: Removing vector 47 of norm 0.0
17:07 gram_schmidt: Removing vector 48 of norm 0.0
17:07 gram_schmidt: Removing vector 49 of norm 0.0
17:07 gram_schmidt: Removing vector 50 of norm 0.0
17:07 gram_schmidt: Removing vector 51 of norm 0.0
17:07 gram_schmidt: Removing vector 52 of norm 0.0
17:07 gram_schmidt: Removing vector 53 of norm 0.0
17:07 gram_schmidt: Removing vector 54 of norm 0.0
17:07 gram_schmidt: Removing vector 55 of norm 0.0
17:07 gram_schmidt: Removing vector 56 of norm 0.0
17:07 gram_schmidt: Removing vector 57 of norm 0.0
17:07 gram_schmidt: Removing vector 58 of norm 0.0
17:07 gram_schmidt: Removing vector 59 of norm 0.0
17:07 gram_schmidt: Removing vector 60 of norm 0.0
17:07 gram_schmidt: Removing vector 61 of norm 0.0
17:07 gram_schmidt: Removing vector 62 of norm 0.0
17:07 gram_schmidt: Removing vector 63 of norm 0.0
17:07 gram_schmidt: Removing vector 64 of norm 0.0
17:07 gram_schmidt: Removing vector 65 of norm 0.0
17:07 gram_schmidt: Removing vector 66 of norm 0.0
17:07 gram_schmidt: Removing vector 67 of norm 0.0
17:07 gram_schmidt: Removing vector 68 of norm 0.0
17:07 gram_schmidt: Removing vector 69 of norm 0.0
17:07 gram_schmidt: Removing vector 70 of norm 0.0
17:07 gram_schmidt: Removing vector 71 of norm 0.0
17:07 gram_schmidt: Removing vector 72 of norm 0.0
17:07 gram_schmidt: Removing vector 73 of norm 0.0
17:07 gram_schmidt: Removing vector 74 of norm 0.0
17:07 gram_schmidt: Removing vector 75 of norm 0.0
17:07 gram_schmidt: Removing vector 76 of norm 0.0
17:07 gram_schmidt: Removing vector 77 of norm 0.0
17:07 gram_schmidt: Removing vector 78 of norm 0.0
17:07 gram_schmidt: Removing vector 79 of norm 0.0
17:07 gram_schmidt: Removing vector 80 of norm 0.0
17:07 gram_schmidt: Removing vector 81 of norm 0.0
17:07 gram_schmidt: Removing vector 82 of norm 0.0
17:07 gram_schmidt: Removing vector 83 of norm 0.0
17:07 gram_schmidt: Removing vector 84 of norm 0.0
17:07 gram_schmidt: Removing vector 85 of norm 0.0
17:07 gram_schmidt: Removing vector 86 of norm 0.0
17:07 gram_schmidt: Removing vector 87 of norm 0.0
17:07 gram_schmidt: Removing vector 88 of norm 0.0
17:07 gram_schmidt: Removing vector 89 of norm 0.0
17:07 gram_schmidt: Removing vector 90 of norm 0.0
17:07 gram_schmidt: Removing vector 91 of norm 0.0
17:07 gram_schmidt: Removing vector 92 of norm 0.0
17:07 gram_schmidt: Removing vector 93 of norm 0.0
17:07 gram_schmidt: Removing vector 94 of norm 0.0
17:07 gram_schmidt: Removing vector 95 of norm 0.0
17:07 gram_schmidt: Removing vector 96 of norm 0.0
17:07 gram_schmidt: Removing vector 97 of norm 0.0
17:07 gram_schmidt: Removing vector 98 of norm 0.0
17:07 gram_schmidt: Removing vector 99 of norm 0.0
17:07 gram_schmidt: Removing vector 100 of norm 0.0
17:07 gram_schmidt: Removing vector 101 of norm 0.0
17:07 gram_schmidt: Removing vector 0 of norm 0.0
17:07 gram_schmidt: Removing vector 1 of norm 0.0
17:07 gram_schmidt: Removing vector 2 of norm 0.0
17:07 gram_schmidt: Removing vector 3 of norm 0.0
17:07 gram_schmidt: Removing vector 4 of norm 0.0
17:07 gram_schmidt: Removing vector 5 of norm 0.0
17:07 gram_schmidt: Removing vector 6 of norm 0.0
17:07 gram_schmidt: Removing vector 7 of norm 0.0
17:07 gram_schmidt: Removing vector 8 of norm 0.0
17:07 gram_schmidt: Removing vector 9 of norm 0.0
17:07 gram_schmidt: Removing vector 10 of norm 0.0
17:07 gram_schmidt: Removing vector 11 of norm 0.0
17:07 gram_schmidt: Removing vector 12 of norm 0.0
17:07 gram_schmidt: Removing vector 13 of norm 0.0
17:07 gram_schmidt: Removing vector 14 of norm 0.0
17:07 gram_schmidt: Removing vector 15 of norm 0.0
17:07 gram_schmidt: Removing vector 16 of norm 0.0
17:07 gram_schmidt: Removing vector 17 of norm 0.0
17:07 gram_schmidt: Removing vector 18 of norm 0.0
17:07 gram_schmidt: Removing vector 19 of norm 0.0
17:07 gram_schmidt: Removing vector 20 of norm 0.0
17:07 gram_schmidt: Removing vector 21 of norm 0.0
17:07 gram_schmidt: Removing vector 22 of norm 0.0
17:07 gram_schmidt: Removing vector 23 of norm 0.0
17:07 gram_schmidt: Removing vector 24 of norm 0.0
17:07 gram_schmidt: Removing vector 25 of norm 0.0
17:07 gram_schmidt: Removing vector 26 of norm 0.0
17:07 gram_schmidt: Removing vector 27 of norm 0.0
17:07 gram_schmidt: Removing vector 28 of norm 0.0
17:07 gram_schmidt: Removing vector 29 of norm 0.0
17:07 gram_schmidt: Removing vector 30 of norm 0.0
17:07 gram_schmidt: Removing vector 31 of norm 0.0
17:07 gram_schmidt: Removing vector 32 of norm 0.0
17:07 gram_schmidt: Removing vector 33 of norm 0.0
17:07 gram_schmidt: Removing vector 34 of norm 0.0
17:07 gram_schmidt: Removing vector 35 of norm 0.0
17:07 gram_schmidt: Removing vector 36 of norm 0.0
17:07 gram_schmidt: Removing vector 37 of norm 0.0
17:07 gram_schmidt: Removing vector 38 of norm 0.0
17:07 gram_schmidt: Removing vector 39 of norm 0.0
17:07 gram_schmidt: Removing vector 40 of norm 0.0
17:07 gram_schmidt: Removing vector 41 of norm 0.0
17:07 gram_schmidt: Removing vector 42 of norm 0.0
17:07 gram_schmidt: Removing vector 43 of norm 0.0
17:07 gram_schmidt: Removing vector 44 of norm 0.0
17:07 gram_schmidt: Removing vector 45 of norm 0.0
17:07 gram_schmidt: Removing vector 46 of norm 0.0
17:07 gram_schmidt: Removing vector 47 of norm 0.0
17:07 gram_schmidt: Removing vector 48 of norm 0.0
17:07 gram_schmidt: Removing vector 49 of norm 0.0
17:07 gram_schmidt: Removing vector 50 of norm 0.0
17:07 gram_schmidt: Removing vector 51 of norm 0.0
17:07 gram_schmidt: Removing vector 52 of norm 0.0
17:07 gram_schmidt: Removing vector 53 of norm 0.0
17:07 gram_schmidt: Removing vector 54 of norm 0.0
17:07 gram_schmidt: Removing vector 55 of norm 0.0
17:07 gram_schmidt: Removing vector 56 of norm 0.0
17:07 gram_schmidt: Removing vector 57 of norm 0.0
17:07 gram_schmidt: Removing vector 58 of norm 0.0
17:07 gram_schmidt: Removing vector 59 of norm 0.0
17:07 gram_schmidt: Removing vector 60 of norm 0.0
17:07 gram_schmidt: Removing vector 61 of norm 0.0
17:07 gram_schmidt: Removing vector 62 of norm 0.0
17:07 gram_schmidt: Removing vector 63 of norm 0.0
17:07 gram_schmidt: Removing vector 64 of norm 0.0
17:07 gram_schmidt: Removing vector 65 of norm 0.0
17:07 gram_schmidt: Removing vector 66 of norm 0.0
17:07 gram_schmidt: Removing vector 67 of norm 0.0
17:07 gram_schmidt: Removing vector 68 of norm 0.0
17:07 gram_schmidt: Removing vector 69 of norm 0.0
17:07 gram_schmidt: Removing vector 70 of norm 0.0
17:07 gram_schmidt: Removing vector 71 of norm 0.0
17:07 gram_schmidt: Removing vector 72 of norm 0.0
17:07 gram_schmidt: Removing vector 73 of norm 0.0
17:07 gram_schmidt: Removing vector 74 of norm 0.0
17:07 gram_schmidt: Removing vector 75 of norm 0.0
17:07 gram_schmidt: Removing vector 76 of norm 0.0
17:07 gram_schmidt: Removing vector 77 of norm 0.0
17:07 gram_schmidt: Removing vector 78 of norm 0.0
17:07 gram_schmidt: Removing vector 79 of norm 0.0
17:07 gram_schmidt: Removing vector 80 of norm 0.0
17:07 gram_schmidt: Removing vector 81 of norm 0.0
17:07 gram_schmidt: Removing vector 82 of norm 0.0
17:07 gram_schmidt: Removing vector 83 of norm 0.0
17:07 gram_schmidt: Removing vector 84 of norm 0.0
17:07 gram_schmidt: Removing vector 85 of norm 0.0
17:07 gram_schmidt: Removing vector 86 of norm 0.0
17:07 gram_schmidt: Removing vector 87 of norm 0.0
17:07 gram_schmidt: Removing vector 88 of norm 0.0
17:07 gram_schmidt: Removing vector 89 of norm 0.0
17:07 gram_schmidt: Removing vector 90 of norm 0.0
17:07 gram_schmidt: Removing vector 91 of norm 0.0
17:07 gram_schmidt: Removing vector 92 of norm 0.0
17:07 gram_schmidt: Removing vector 93 of norm 0.0
17:07 gram_schmidt: Removing vector 94 of norm 0.0
17:07 gram_schmidt: Removing vector 95 of norm 0.0
17:07 gram_schmidt: Removing vector 96 of norm 0.0
17:07 gram_schmidt: Removing vector 97 of norm 0.0
17:07 gram_schmidt: Removing vector 98 of norm 0.0
17:07 gram_schmidt: Removing vector 99 of norm 0.0
17:07 gram_schmidt: Removing vector 100 of norm 0.0
17:07 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;0]" time="0.0029647350311279297"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;1]" time="0.0020270347595214844"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;2]" time="0.002238750457763672"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;3]" time="0.1129767894744873"><system-err>17:07 gram_schmidt: Orthonormalizing vector 31 again
17:07 gram_schmidt: Removing linear dependent vector 32
17:07 gram_schmidt: Removing linear dependent vector 33
17:07 gram_schmidt: Removing linear dependent vector 34
17:07 gram_schmidt: Removing linear dependent vector 35
17:07 gram_schmidt: Removing linear dependent vector 36
17:07 gram_schmidt: Removing linear dependent vector 37
17:07 gram_schmidt: Removing linear dependent vector 38
17:07 gram_schmidt: Removing linear dependent vector 39
17:07 gram_schmidt: Removing linear dependent vector 40
17:07 gram_schmidt: Removing linear dependent vector 41
17:07 gram_schmidt: Removing linear dependent vector 42
17:07 gram_schmidt: Orthonormalizing vector 31 again
17:07 gram_schmidt: Removing linear dependent vector 32
17:07 gram_schmidt: Removing linear dependent vector 33
17:07 gram_schmidt: Removing linear dependent vector 34
17:07 gram_schmidt: Removing linear dependent vector 35
17:07 gram_schmidt: Removing linear dependent vector 36
17:07 gram_schmidt: Removing linear dependent vector 37
17:07 gram_schmidt: Removing linear dependent vector 38
17:07 gram_schmidt: Removing linear dependent vector 39
17:07 gram_schmidt: Removing linear dependent vector 40
17:07 gram_schmidt: Removing linear dependent vector 41
17:07 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;4]" time="0.02189040184020996"><system-err>17:07 gram_schmidt: Removing vector 0 of norm 0.0
17:07 gram_schmidt: Removing vector 1 of norm 0.0
17:07 gram_schmidt: Removing vector 2 of norm 0.0
17:07 gram_schmidt: Removing vector 3 of norm 0.0
17:07 gram_schmidt: Removing vector 4 of norm 0.0
17:07 gram_schmidt: Removing vector 5 of norm 0.0
17:07 gram_schmidt: Removing vector 6 of norm 0.0
17:07 gram_schmidt: Removing vector 7 of norm 0.0
17:07 gram_schmidt: Removing vector 8 of norm 0.0
17:07 gram_schmidt: Removing vector 9 of norm 0.0
17:07 gram_schmidt: Removing vector 10 of norm 0.0
17:07 gram_schmidt: Removing vector 11 of norm 0.0
17:07 gram_schmidt: Removing vector 12 of norm 0.0
17:07 gram_schmidt: Removing vector 13 of norm 0.0
17:07 gram_schmidt: Removing vector 14 of norm 0.0
17:07 gram_schmidt: Removing vector 15 of norm 0.0
17:07 gram_schmidt: Removing vector 16 of norm 0.0
17:07 gram_schmidt: Removing vector 17 of norm 0.0
17:07 gram_schmidt: Removing vector 18 of norm 0.0
17:07 gram_schmidt: Removing vector 19 of norm 0.0
17:07 gram_schmidt: Removing vector 20 of norm 0.0
17:07 gram_schmidt: Removing vector 21 of norm 0.0
17:07 gram_schmidt: Removing vector 22 of norm 0.0
17:07 gram_schmidt: Removing vector 23 of norm 0.0
17:07 gram_schmidt: Removing vector 24 of norm 0.0
17:07 gram_schmidt: Removing vector 25 of norm 0.0
17:07 gram_schmidt: Removing vector 26 of norm 0.0
17:07 gram_schmidt: Removing vector 27 of norm 0.0
17:07 gram_schmidt: Removing vector 28 of norm 0.0
17:07 gram_schmidt: Removing vector 29 of norm 0.0
17:07 gram_schmidt: Removing vector 30 of norm 0.0
17:07 gram_schmidt: Removing vector 31 of norm 0.0
17:07 gram_schmidt: Removing vector 32 of norm 0.0
17:07 gram_schmidt: Removing vector 33 of norm 0.0
17:07 gram_schmidt: Removing vector 34 of norm 0.0
17:07 gram_schmidt: Removing vector 35 of norm 0.0
17:07 gram_schmidt: Removing vector 36 of norm 0.0
17:07 gram_schmidt: Removing vector 37 of norm 0.0
17:07 gram_schmidt: Removing vector 38 of norm 0.0
17:07 gram_schmidt: Removing vector 39 of norm 0.0
17:07 gram_schmidt: Removing vector 40 of norm 0.0
17:07 gram_schmidt: Removing vector 41 of norm 0.0
17:07 gram_schmidt: Removing vector 42 of norm 0.0
17:07 gram_schmidt: Removing vector 43 of norm 0.0
17:07 gram_schmidt: Removing vector 44 of norm 0.0
17:07 gram_schmidt: Removing vector 45 of norm 0.0
17:07 gram_schmidt: Removing vector 46 of norm 0.0
17:07 gram_schmidt: Removing vector 47 of norm 0.0
17:07 gram_schmidt: Removing vector 48 of norm 0.0
17:07 gram_schmidt: Removing vector 49 of norm 0.0
17:07 gram_schmidt: Removing vector 50 of norm 0.0
17:07 gram_schmidt: Removing vector 51 of norm 0.0
17:07 gram_schmidt: Removing vector 52 of norm 0.0
17:07 gram_schmidt: Removing vector 53 of norm 0.0
17:07 gram_schmidt: Removing vector 54 of norm 0.0
17:07 gram_schmidt: Removing vector 55 of norm 0.0
17:07 gram_schmidt: Removing vector 56 of norm 0.0
17:07 gram_schmidt: Removing vector 57 of norm 0.0
17:07 gram_schmidt: Removing vector 58 of norm 0.0
17:07 gram_schmidt: Removing vector 59 of norm 0.0
17:07 gram_schmidt: Removing vector 60 of norm 0.0
17:07 gram_schmidt: Removing vector 61 of norm 0.0
17:07 gram_schmidt: Removing vector 62 of norm 0.0
17:07 gram_schmidt: Removing vector 63 of norm 0.0
17:07 gram_schmidt: Removing vector 64 of norm 0.0
17:07 gram_schmidt: Removing vector 65 of norm 0.0
17:07 gram_schmidt: Removing vector 66 of norm 0.0
17:07 gram_schmidt: Removing vector 67 of norm 0.0
17:07 gram_schmidt: Removing vector 68 of norm 0.0
17:07 gram_schmidt: Removing vector 69 of norm 0.0
17:07 gram_schmidt: Removing vector 70 of norm 0.0
17:07 gram_schmidt: Removing vector 71 of norm 0.0
17:07 gram_schmidt: Removing vector 72 of norm 0.0
17:07 gram_schmidt: Removing vector 73 of norm 0.0
17:07 gram_schmidt: Removing vector 74 of norm 0.0
17:07 gram_schmidt: Removing vector 75 of norm 0.0
17:07 gram_schmidt: Removing vector 76 of norm 0.0
17:07 gram_schmidt: Removing vector 77 of norm 0.0
17:07 gram_schmidt: Removing vector 78 of norm 0.0
17:07 gram_schmidt: Removing vector 79 of norm 0.0
17:07 gram_schmidt: Removing vector 80 of norm 0.0
17:07 gram_schmidt: Removing vector 81 of norm 0.0
17:07 gram_schmidt: Removing vector 82 of norm 0.0
17:07 gram_schmidt: Removing vector 83 of norm 0.0
17:07 gram_schmidt: Removing vector 84 of norm 0.0
17:07 gram_schmidt: Removing vector 85 of norm 0.0
17:07 gram_schmidt: Removing vector 86 of norm 0.0
17:07 gram_schmidt: Removing vector 87 of norm 0.0
17:07 gram_schmidt: Removing vector 88 of norm 0.0
17:07 gram_schmidt: Removing vector 89 of norm 0.0
17:07 gram_schmidt: Removing vector 90 of norm 0.0
17:07 gram_schmidt: Removing vector 91 of norm 0.0
17:07 gram_schmidt: Removing vector 92 of norm 0.0
17:07 gram_schmidt: Removing vector 93 of norm 0.0
17:07 gram_schmidt: Removing vector 94 of norm 0.0
17:07 gram_schmidt: Removing vector 95 of norm 0.0
17:07 gram_schmidt: Removing vector 96 of norm 0.0
17:07 gram_schmidt: Removing vector 97 of norm 0.0
17:07 gram_schmidt: Removing vector 98 of norm 0.0
17:07 gram_schmidt: Removing vector 99 of norm 0.0
17:07 gram_schmidt: Removing vector 100 of norm 0.0
17:07 gram_schmidt: Removing vector 101 of norm 0.0
17:07 gram_schmidt: Removing vector 0 of norm 0.0
17:07 gram_schmidt: Removing vector 1 of norm 0.0
17:07 gram_schmidt: Removing vector 2 of norm 0.0
17:07 gram_schmidt: Removing vector 3 of norm 0.0
17:07 gram_schmidt: Removing vector 4 of norm 0.0
17:07 gram_schmidt: Removing vector 5 of norm 0.0
17:07 gram_schmidt: Removing vector 6 of norm 0.0
17:07 gram_schmidt: Removing vector 7 of norm 0.0
17:07 gram_schmidt: Removing vector 8 of norm 0.0
17:07 gram_schmidt: Removing vector 9 of norm 0.0
17:07 gram_schmidt: Removing vector 10 of norm 0.0
17:07 gram_schmidt: Removing vector 11 of norm 0.0
17:07 gram_schmidt: Removing vector 12 of norm 0.0
17:07 gram_schmidt: Removing vector 13 of norm 0.0
17:07 gram_schmidt: Removing vector 14 of norm 0.0
17:07 gram_schmidt: Removing vector 15 of norm 0.0
17:07 gram_schmidt: Removing vector 16 of norm 0.0
17:07 gram_schmidt: Removing vector 17 of norm 0.0
17:07 gram_schmidt: Removing vector 18 of norm 0.0
17:07 gram_schmidt: Removing vector 19 of norm 0.0
17:07 gram_schmidt: Removing vector 20 of norm 0.0
17:07 gram_schmidt: Removing vector 21 of norm 0.0
17:07 gram_schmidt: Removing vector 22 of norm 0.0
17:07 gram_schmidt: Removing vector 23 of norm 0.0
17:07 gram_schmidt: Removing vector 24 of norm 0.0
17:07 gram_schmidt: Removing vector 25 of norm 0.0
17:07 gram_schmidt: Removing vector 26 of norm 0.0
17:07 gram_schmidt: Removing vector 27 of norm 0.0
17:07 gram_schmidt: Removing vector 28 of norm 0.0
17:07 gram_schmidt: Removing vector 29 of norm 0.0
17:07 gram_schmidt: Removing vector 30 of norm 0.0
17:07 gram_schmidt: Removing vector 31 of norm 0.0
17:07 gram_schmidt: Removing vector 32 of norm 0.0
17:07 gram_schmidt: Removing vector 33 of norm 0.0
17:07 gram_schmidt: Removing vector 34 of norm 0.0
17:07 gram_schmidt: Removing vector 35 of norm 0.0
17:07 gram_schmidt: Removing vector 36 of norm 0.0
17:07 gram_schmidt: Removing vector 37 of norm 0.0
17:07 gram_schmidt: Removing vector 38 of norm 0.0
17:07 gram_schmidt: Removing vector 39 of norm 0.0
17:07 gram_schmidt: Removing vector 40 of norm 0.0
17:07 gram_schmidt: Removing vector 41 of norm 0.0
17:07 gram_schmidt: Removing vector 42 of norm 0.0
17:07 gram_schmidt: Removing vector 43 of norm 0.0
17:07 gram_schmidt: Removing vector 44 of norm 0.0
17:07 gram_schmidt: Removing vector 45 of norm 0.0
17:07 gram_schmidt: Removing vector 46 of norm 0.0
17:07 gram_schmidt: Removing vector 47 of norm 0.0
17:07 gram_schmidt: Removing vector 48 of norm 0.0
17:07 gram_schmidt: Removing vector 49 of norm 0.0
17:07 gram_schmidt: Removing vector 50 of norm 0.0
17:07 gram_schmidt: Removing vector 51 of norm 0.0
17:07 gram_schmidt: Removing vector 52 of norm 0.0
17:07 gram_schmidt: Removing vector 53 of norm 0.0
17:07 gram_schmidt: Removing vector 54 of norm 0.0
17:07 gram_schmidt: Removing vector 55 of norm 0.0
17:07 gram_schmidt: Removing vector 56 of norm 0.0
17:07 gram_schmidt: Removing vector 57 of norm 0.0
17:07 gram_schmidt: Removing vector 58 of norm 0.0
17:07 gram_schmidt: Removing vector 59 of norm 0.0
17:07 gram_schmidt: Removing vector 60 of norm 0.0
17:07 gram_schmidt: Removing vector 61 of norm 0.0
17:07 gram_schmidt: Removing vector 62 of norm 0.0
17:07 gram_schmidt: Removing vector 63 of norm 0.0
17:07 gram_schmidt: Removing vector 64 of norm 0.0
17:07 gram_schmidt: Removing vector 65 of norm 0.0
17:07 gram_schmidt: Removing vector 66 of norm 0.0
17:07 gram_schmidt: Removing vector 67 of norm 0.0
17:07 gram_schmidt: Removing vector 68 of norm 0.0
17:07 gram_schmidt: Removing vector 69 of norm 0.0
17:07 gram_schmidt: Removing vector 70 of norm 0.0
17:07 gram_schmidt: Removing vector 71 of norm 0.0
17:07 gram_schmidt: Removing vector 72 of norm 0.0
17:07 gram_schmidt: Removing vector 73 of norm 0.0
17:07 gram_schmidt: Removing vector 74 of norm 0.0
17:07 gram_schmidt: Removing vector 75 of norm 0.0
17:07 gram_schmidt: Removing vector 76 of norm 0.0
17:07 gram_schmidt: Removing vector 77 of norm 0.0
17:07 gram_schmidt: Removing vector 78 of norm 0.0
17:07 gram_schmidt: Removing vector 79 of norm 0.0
17:07 gram_schmidt: Removing vector 80 of norm 0.0
17:07 gram_schmidt: Removing vector 81 of norm 0.0
17:07 gram_schmidt: Removing vector 82 of norm 0.0
17:07 gram_schmidt: Removing vector 83 of norm 0.0
17:07 gram_schmidt: Removing vector 84 of norm 0.0
17:07 gram_schmidt: Removing vector 85 of norm 0.0
17:07 gram_schmidt: Removing vector 86 of norm 0.0
17:07 gram_schmidt: Removing vector 87 of norm 0.0
17:07 gram_schmidt: Removing vector 88 of norm 0.0
17:07 gram_schmidt: Removing vector 89 of norm 0.0
17:07 gram_schmidt: Removing vector 90 of norm 0.0
17:07 gram_schmidt: Removing vector 91 of norm 0.0
17:07 gram_schmidt: Removing vector 92 of norm 0.0
17:07 gram_schmidt: Removing vector 93 of norm 0.0
17:07 gram_schmidt: Removing vector 94 of norm 0.0
17:07 gram_schmidt: Removing vector 95 of norm 0.0
17:07 gram_schmidt: Removing vector 96 of norm 0.0
17:07 gram_schmidt: Removing vector 97 of norm 0.0
17:07 gram_schmidt: Removing vector 98 of norm 0.0
17:07 gram_schmidt: Removing vector 99 of norm 0.0
17:07 gram_schmidt: Removing vector 100 of norm 0.0
17:07 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;5]" time="0.002927064895629883"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;6]" time="0.0020513534545898438"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;7]" time="0.0025386810302734375"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;8]" time="0.21041107177734375"><system-err>17:07 gram_schmidt: Orthonormalizing vector 31 again
17:07 gram_schmidt: Removing linear dependent vector 32
17:07 gram_schmidt: Removing linear dependent vector 33
17:07 gram_schmidt: Removing linear dependent vector 34
17:07 gram_schmidt: Removing linear dependent vector 35
17:07 gram_schmidt: Removing linear dependent vector 36
17:07 gram_schmidt: Removing linear dependent vector 37
17:07 gram_schmidt: Removing linear dependent vector 38
17:07 gram_schmidt: Removing linear dependent vector 39
17:07 gram_schmidt: Removing linear dependent vector 40
17:07 gram_schmidt: Removing linear dependent vector 41
17:07 gram_schmidt: Removing linear dependent vector 42
17:08 gram_schmidt: Orthonormalizing vector 31 again
17:08 gram_schmidt: Removing linear dependent vector 32
17:08 gram_schmidt: Removing linear dependent vector 33
17:08 gram_schmidt: Removing linear dependent vector 34
17:08 gram_schmidt: Removing linear dependent vector 35
17:08 gram_schmidt: Removing linear dependent vector 36
17:08 gram_schmidt: Removing linear dependent vector 37
17:08 gram_schmidt: Removing linear dependent vector 38
17:08 gram_schmidt: Removing linear dependent vector 39
17:08 gram_schmidt: Removing linear dependent vector 40
17:08 gram_schmidt: Removing linear dependent vector 41
17:08 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;9]" time="0.028552532196044922"><system-err>17:08 gram_schmidt: Removing vector 0 of norm 0.0
17:08 gram_schmidt: Removing vector 1 of norm 0.0
17:08 gram_schmidt: Removing vector 2 of norm 0.0
17:08 gram_schmidt: Removing vector 3 of norm 0.0
17:08 gram_schmidt: Removing vector 4 of norm 0.0
17:08 gram_schmidt: Removing vector 5 of norm 0.0
17:08 gram_schmidt: Removing vector 6 of norm 0.0
17:08 gram_schmidt: Removing vector 7 of norm 0.0
17:08 gram_schmidt: Removing vector 8 of norm 0.0
17:08 gram_schmidt: Removing vector 9 of norm 0.0
17:08 gram_schmidt: Removing vector 10 of norm 0.0
17:08 gram_schmidt: Removing vector 11 of norm 0.0
17:08 gram_schmidt: Removing vector 12 of norm 0.0
17:08 gram_schmidt: Removing vector 13 of norm 0.0
17:08 gram_schmidt: Removing vector 14 of norm 0.0
17:08 gram_schmidt: Removing vector 15 of norm 0.0
17:08 gram_schmidt: Removing vector 16 of norm 0.0
17:08 gram_schmidt: Removing vector 17 of norm 0.0
17:08 gram_schmidt: Removing vector 18 of norm 0.0
17:08 gram_schmidt: Removing vector 19 of norm 0.0
17:08 gram_schmidt: Removing vector 20 of norm 0.0
17:08 gram_schmidt: Removing vector 21 of norm 0.0
17:08 gram_schmidt: Removing vector 22 of norm 0.0
17:08 gram_schmidt: Removing vector 23 of norm 0.0
17:08 gram_schmidt: Removing vector 24 of norm 0.0
17:08 gram_schmidt: Removing vector 25 of norm 0.0
17:08 gram_schmidt: Removing vector 26 of norm 0.0
17:08 gram_schmidt: Removing vector 27 of norm 0.0
17:08 gram_schmidt: Removing vector 28 of norm 0.0
17:08 gram_schmidt: Removing vector 29 of norm 0.0
17:08 gram_schmidt: Removing vector 30 of norm 0.0
17:08 gram_schmidt: Removing vector 31 of norm 0.0
17:08 gram_schmidt: Removing vector 32 of norm 0.0
17:08 gram_schmidt: Removing vector 33 of norm 0.0
17:08 gram_schmidt: Removing vector 34 of norm 0.0
17:08 gram_schmidt: Removing vector 35 of norm 0.0
17:08 gram_schmidt: Removing vector 36 of norm 0.0
17:08 gram_schmidt: Removing vector 37 of norm 0.0
17:08 gram_schmidt: Removing vector 38 of norm 0.0
17:08 gram_schmidt: Removing vector 39 of norm 0.0
17:08 gram_schmidt: Removing vector 40 of norm 0.0
17:08 gram_schmidt: Removing vector 41 of norm 0.0
17:08 gram_schmidt: Removing vector 42 of norm 0.0
17:08 gram_schmidt: Removing vector 43 of norm 0.0
17:08 gram_schmidt: Removing vector 44 of norm 0.0
17:08 gram_schmidt: Removing vector 45 of norm 0.0
17:08 gram_schmidt: Removing vector 46 of norm 0.0
17:08 gram_schmidt: Removing vector 47 of norm 0.0
17:08 gram_schmidt: Removing vector 48 of norm 0.0
17:08 gram_schmidt: Removing vector 49 of norm 0.0
17:08 gram_schmidt: Removing vector 50 of norm 0.0
17:08 gram_schmidt: Removing vector 51 of norm 0.0
17:08 gram_schmidt: Removing vector 52 of norm 0.0
17:08 gram_schmidt: Removing vector 53 of norm 0.0
17:08 gram_schmidt: Removing vector 54 of norm 0.0
17:08 gram_schmidt: Removing vector 55 of norm 0.0
17:08 gram_schmidt: Removing vector 56 of norm 0.0
17:08 gram_schmidt: Removing vector 57 of norm 0.0
17:08 gram_schmidt: Removing vector 58 of norm 0.0
17:08 gram_schmidt: Removing vector 59 of norm 0.0
17:08 gram_schmidt: Removing vector 60 of norm 0.0
17:08 gram_schmidt: Removing vector 61 of norm 0.0
17:08 gram_schmidt: Removing vector 62 of norm 0.0
17:08 gram_schmidt: Removing vector 63 of norm 0.0
17:08 gram_schmidt: Removing vector 64 of norm 0.0
17:08 gram_schmidt: Removing vector 65 of norm 0.0
17:08 gram_schmidt: Removing vector 66 of norm 0.0
17:08 gram_schmidt: Removing vector 67 of norm 0.0
17:08 gram_schmidt: Removing vector 68 of norm 0.0
17:08 gram_schmidt: Removing vector 69 of norm 0.0
17:08 gram_schmidt: Removing vector 70 of norm 0.0
17:08 gram_schmidt: Removing vector 71 of norm 0.0
17:08 gram_schmidt: Removing vector 72 of norm 0.0
17:08 gram_schmidt: Removing vector 73 of norm 0.0
17:08 gram_schmidt: Removing vector 74 of norm 0.0
17:08 gram_schmidt: Removing vector 75 of norm 0.0
17:08 gram_schmidt: Removing vector 76 of norm 0.0
17:08 gram_schmidt: Removing vector 77 of norm 0.0
17:08 gram_schmidt: Removing vector 78 of norm 0.0
17:08 gram_schmidt: Removing vector 79 of norm 0.0
17:08 gram_schmidt: Removing vector 80 of norm 0.0
17:08 gram_schmidt: Removing vector 81 of norm 0.0
17:08 gram_schmidt: Removing vector 82 of norm 0.0
17:08 gram_schmidt: Removing vector 83 of norm 0.0
17:08 gram_schmidt: Removing vector 84 of norm 0.0
17:08 gram_schmidt: Removing vector 85 of norm 0.0
17:08 gram_schmidt: Removing vector 86 of norm 0.0
17:08 gram_schmidt: Removing vector 87 of norm 0.0
17:08 gram_schmidt: Removing vector 88 of norm 0.0
17:08 gram_schmidt: Removing vector 89 of norm 0.0
17:08 gram_schmidt: Removing vector 90 of norm 0.0
17:08 gram_schmidt: Removing vector 91 of norm 0.0
17:08 gram_schmidt: Removing vector 92 of norm 0.0
17:08 gram_schmidt: Removing vector 93 of norm 0.0
17:08 gram_schmidt: Removing vector 94 of norm 0.0
17:08 gram_schmidt: Removing vector 95 of norm 0.0
17:08 gram_schmidt: Removing vector 96 of norm 0.0
17:08 gram_schmidt: Removing vector 97 of norm 0.0
17:08 gram_schmidt: Removing vector 98 of norm 0.0
17:08 gram_schmidt: Removing vector 99 of norm 0.0
17:08 gram_schmidt: Removing vector 100 of norm 0.0
17:08 gram_schmidt: Removing vector 101 of norm 0.0
17:08 gram_schmidt: Removing vector 0 of norm 0.0
17:08 gram_schmidt: Removing vector 1 of norm 0.0
17:08 gram_schmidt: Removing vector 2 of norm 0.0
17:08 gram_schmidt: Removing vector 3 of norm 0.0
17:08 gram_schmidt: Removing vector 4 of norm 0.0
17:08 gram_schmidt: Removing vector 5 of norm 0.0
17:08 gram_schmidt: Removing vector 6 of norm 0.0
17:08 gram_schmidt: Removing vector 7 of norm 0.0
17:08 gram_schmidt: Removing vector 8 of norm 0.0
17:08 gram_schmidt: Removing vector 9 of norm 0.0
17:08 gram_schmidt: Removing vector 10 of norm 0.0
17:08 gram_schmidt: Removing vector 11 of norm 0.0
17:08 gram_schmidt: Removing vector 12 of norm 0.0
17:08 gram_schmidt: Removing vector 13 of norm 0.0
17:08 gram_schmidt: Removing vector 14 of norm 0.0
17:08 gram_schmidt: Removing vector 15 of norm 0.0
17:08 gram_schmidt: Removing vector 16 of norm 0.0
17:08 gram_schmidt: Removing vector 17 of norm 0.0
17:08 gram_schmidt: Removing vector 18 of norm 0.0
17:08 gram_schmidt: Removing vector 19 of norm 0.0
17:08 gram_schmidt: Removing vector 20 of norm 0.0
17:08 gram_schmidt: Removing vector 21 of norm 0.0
17:08 gram_schmidt: Removing vector 22 of norm 0.0
17:08 gram_schmidt: Removing vector 23 of norm 0.0
17:08 gram_schmidt: Removing vector 24 of norm 0.0
17:08 gram_schmidt: Removing vector 25 of norm 0.0
17:08 gram_schmidt: Removing vector 26 of norm 0.0
17:08 gram_schmidt: Removing vector 27 of norm 0.0
17:08 gram_schmidt: Removing vector 28 of norm 0.0
17:08 gram_schmidt: Removing vector 29 of norm 0.0
17:08 gram_schmidt: Removing vector 30 of norm 0.0
17:08 gram_schmidt: Removing vector 31 of norm 0.0
17:08 gram_schmidt: Removing vector 32 of norm 0.0
17:08 gram_schmidt: Removing vector 33 of norm 0.0
17:08 gram_schmidt: Removing vector 34 of norm 0.0
17:08 gram_schmidt: Removing vector 35 of norm 0.0
17:08 gram_schmidt: Removing vector 36 of norm 0.0
17:08 gram_schmidt: Removing vector 37 of norm 0.0
17:08 gram_schmidt: Removing vector 38 of norm 0.0
17:08 gram_schmidt: Removing vector 39 of norm 0.0
17:08 gram_schmidt: Removing vector 40 of norm 0.0
17:08 gram_schmidt: Removing vector 41 of norm 0.0
17:08 gram_schmidt: Removing vector 42 of norm 0.0
17:08 gram_schmidt: Removing vector 43 of norm 0.0
17:08 gram_schmidt: Removing vector 44 of norm 0.0
17:08 gram_schmidt: Removing vector 45 of norm 0.0
17:08 gram_schmidt: Removing vector 46 of norm 0.0
17:08 gram_schmidt: Removing vector 47 of norm 0.0
17:08 gram_schmidt: Removing vector 48 of norm 0.0
17:08 gram_schmidt: Removing vector 49 of norm 0.0
17:08 gram_schmidt: Removing vector 50 of norm 0.0
17:08 gram_schmidt: Removing vector 51 of norm 0.0
17:08 gram_schmidt: Removing vector 52 of norm 0.0
17:08 gram_schmidt: Removing vector 53 of norm 0.0
17:08 gram_schmidt: Removing vector 54 of norm 0.0
17:08 gram_schmidt: Removing vector 55 of norm 0.0
17:08 gram_schmidt: Removing vector 56 of norm 0.0
17:08 gram_schmidt: Removing vector 57 of norm 0.0
17:08 gram_schmidt: Removing vector 58 of norm 0.0
17:08 gram_schmidt: Removing vector 59 of norm 0.0
17:08 gram_schmidt: Removing vector 60 of norm 0.0
17:08 gram_schmidt: Removing vector 61 of norm 0.0
17:08 gram_schmidt: Removing vector 62 of norm 0.0
17:08 gram_schmidt: Removing vector 63 of norm 0.0
17:08 gram_schmidt: Removing vector 64 of norm 0.0
17:08 gram_schmidt: Removing vector 65 of norm 0.0
17:08 gram_schmidt: Removing vector 66 of norm 0.0
17:08 gram_schmidt: Removing vector 67 of norm 0.0
17:08 gram_schmidt: Removing vector 68 of norm 0.0
17:08 gram_schmidt: Removing vector 69 of norm 0.0
17:08 gram_schmidt: Removing vector 70 of norm 0.0
17:08 gram_schmidt: Removing vector 71 of norm 0.0
17:08 gram_schmidt: Removing vector 72 of norm 0.0
17:08 gram_schmidt: Removing vector 73 of norm 0.0
17:08 gram_schmidt: Removing vector 74 of norm 0.0
17:08 gram_schmidt: Removing vector 75 of norm 0.0
17:08 gram_schmidt: Removing vector 76 of norm 0.0
17:08 gram_schmidt: Removing vector 77 of norm 0.0
17:08 gram_schmidt: Removing vector 78 of norm 0.0
17:08 gram_schmidt: Removing vector 79 of norm 0.0
17:08 gram_schmidt: Removing vector 80 of norm 0.0
17:08 gram_schmidt: Removing vector 81 of norm 0.0
17:08 gram_schmidt: Removing vector 82 of norm 0.0
17:08 gram_schmidt: Removing vector 83 of norm 0.0
17:08 gram_schmidt: Removing vector 84 of norm 0.0
17:08 gram_schmidt: Removing vector 85 of norm 0.0
17:08 gram_schmidt: Removing vector 86 of norm 0.0
17:08 gram_schmidt: Removing vector 87 of norm 0.0
17:08 gram_schmidt: Removing vector 88 of norm 0.0
17:08 gram_schmidt: Removing vector 89 of norm 0.0
17:08 gram_schmidt: Removing vector 90 of norm 0.0
17:08 gram_schmidt: Removing vector 91 of norm 0.0
17:08 gram_schmidt: Removing vector 92 of norm 0.0
17:08 gram_schmidt: Removing vector 93 of norm 0.0
17:08 gram_schmidt: Removing vector 94 of norm 0.0
17:08 gram_schmidt: Removing vector 95 of norm 0.0
17:08 gram_schmidt: Removing vector 96 of norm 0.0
17:08 gram_schmidt: Removing vector 97 of norm 0.0
17:08 gram_schmidt: Removing vector 98 of norm 0.0
17:08 gram_schmidt: Removing vector 99 of norm 0.0
17:08 gram_schmidt: Removing vector 100 of norm 0.0
17:08 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;10]" time="0.003568410873413086"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;11]" time="0.007003307342529297"><system-err>17:08 gram_schmidt: Removing linear dependent vector 3
17:08 gram_schmidt: Removing linear dependent vector 3
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;12]" time="0.003986358642578125"><system-err>17:08 gram_schmidt: Removing vector 0 of norm 0.0
17:08 gram_schmidt: Removing vector 1 of norm 0.0
17:08 gram_schmidt: Removing vector 2 of norm 0.0
17:08 gram_schmidt: Removing vector 0 of norm 0.0
17:08 gram_schmidt: Removing vector 1 of norm 0.0
17:08 gram_schmidt: Removing vector 2 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;13]" time="0.0027837753295898438"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;14]" time="0.005040407180786133"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;15]" time="0.41467976570129395"><system-err>17:08 gram_schmidt: Removing linear dependent vector 36
17:08 gram_schmidt: Removing linear dependent vector 37
17:08 gram_schmidt: Removing linear dependent vector 38
17:08 gram_schmidt: Removing linear dependent vector 39
17:08 gram_schmidt: Removing linear dependent vector 40
17:08 gram_schmidt: Removing linear dependent vector 41
17:08 gram_schmidt: Removing linear dependent vector 42
17:08 gram_schmidt: Removing linear dependent vector 36
17:08 gram_schmidt: Removing linear dependent vector 37
17:08 gram_schmidt: Removing linear dependent vector 38
17:08 gram_schmidt: Removing linear dependent vector 39
17:08 gram_schmidt: Removing linear dependent vector 40
17:08 gram_schmidt: Removing linear dependent vector 41
17:08 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;16]" time="0.21232271194458008"><system-err>17:08 gram_schmidt: Removing linear dependent vector 3
17:08 gram_schmidt: Removing linear dependent vector 4
17:08 gram_schmidt: Removing linear dependent vector 5
17:08 gram_schmidt: Removing linear dependent vector 6
17:08 gram_schmidt: Removing linear dependent vector 7
17:08 gram_schmidt: Removing linear dependent vector 8
17:08 gram_schmidt: Removing linear dependent vector 9
17:08 gram_schmidt: Removing linear dependent vector 10
17:08 gram_schmidt: Removing linear dependent vector 11
17:08 gram_schmidt: Removing linear dependent vector 12
17:08 gram_schmidt: Removing linear dependent vector 13
17:08 gram_schmidt: Removing linear dependent vector 14
17:08 gram_schmidt: Removing linear dependent vector 15
17:08 gram_schmidt: Removing linear dependent vector 16
17:08 gram_schmidt: Removing linear dependent vector 17
17:08 gram_schmidt: Removing linear dependent vector 18
17:08 gram_schmidt: Removing linear dependent vector 19
17:08 gram_schmidt: Removing linear dependent vector 20
17:08 gram_schmidt: Removing linear dependent vector 21
17:08 gram_schmidt: Removing linear dependent vector 22
17:08 gram_schmidt: Removing linear dependent vector 23
17:08 gram_schmidt: Removing linear dependent vector 24
17:08 gram_schmidt: Removing linear dependent vector 25
17:08 gram_schmidt: Removing linear dependent vector 26
17:08 gram_schmidt: Removing linear dependent vector 27
17:08 gram_schmidt: Removing linear dependent vector 28
17:08 gram_schmidt: Removing linear dependent vector 29
17:08 gram_schmidt: Removing linear dependent vector 30
17:08 gram_schmidt: Removing linear dependent vector 31
17:08 gram_schmidt: Removing linear dependent vector 32
17:08 gram_schmidt: Removing linear dependent vector 33
17:08 gram_schmidt: Removing linear dependent vector 34
17:08 gram_schmidt: Removing linear dependent vector 35
17:08 gram_schmidt: Removing linear dependent vector 36
17:08 gram_schmidt: Removing linear dependent vector 37
17:08 gram_schmidt: Removing linear dependent vector 38
17:08 gram_schmidt: Removing linear dependent vector 39
17:08 gram_schmidt: Removing linear dependent vector 40
17:08 gram_schmidt: Removing linear dependent vector 41
17:08 gram_schmidt: Removing linear dependent vector 42
17:08 gram_schmidt: Removing linear dependent vector 43
17:08 gram_schmidt: Removing linear dependent vector 44
17:08 gram_schmidt: Removing linear dependent vector 45
17:08 gram_schmidt: Removing linear dependent vector 46
17:08 gram_schmidt: Removing linear dependent vector 47
17:08 gram_schmidt: Removing linear dependent vector 48
17:08 gram_schmidt: Removing linear dependent vector 49
17:08 gram_schmidt: Removing linear dependent vector 50
17:08 gram_schmidt: Removing linear dependent vector 51
17:08 gram_schmidt: Removing linear dependent vector 52
17:08 gram_schmidt: Removing linear dependent vector 53
17:08 gram_schmidt: Removing linear dependent vector 54
17:08 gram_schmidt: Removing linear dependent vector 55
17:08 gram_schmidt: Removing linear dependent vector 56
17:08 gram_schmidt: Removing linear dependent vector 57
17:08 gram_schmidt: Removing linear dependent vector 58
17:08 gram_schmidt: Removing linear dependent vector 59
17:08 gram_schmidt: Removing linear dependent vector 60
17:08 gram_schmidt: Removing linear dependent vector 61
17:08 gram_schmidt: Removing linear dependent vector 62
17:08 gram_schmidt: Removing linear dependent vector 63
17:08 gram_schmidt: Removing linear dependent vector 64
17:08 gram_schmidt: Removing linear dependent vector 65
17:08 gram_schmidt: Removing linear dependent vector 66
17:08 gram_schmidt: Removing linear dependent vector 67
17:08 gram_schmidt: Removing linear dependent vector 68
17:08 gram_schmidt: Removing linear dependent vector 69
17:08 gram_schmidt: Removing linear dependent vector 70
17:08 gram_schmidt: Removing linear dependent vector 71
17:08 gram_schmidt: Removing linear dependent vector 72
17:08 gram_schmidt: Removing linear dependent vector 73
17:08 gram_schmidt: Removing linear dependent vector 74
17:08 gram_schmidt: Removing linear dependent vector 75
17:08 gram_schmidt: Removing linear dependent vector 76
17:08 gram_schmidt: Removing linear dependent vector 77
17:08 gram_schmidt: Removing linear dependent vector 78
17:08 gram_schmidt: Removing linear dependent vector 79
17:08 gram_schmidt: Removing linear dependent vector 80
17:08 gram_schmidt: Removing linear dependent vector 81
17:08 gram_schmidt: Removing linear dependent vector 82
17:08 gram_schmidt: Removing linear dependent vector 83
17:08 gram_schmidt: Removing linear dependent vector 84
17:08 gram_schmidt: Removing linear dependent vector 85
17:08 gram_schmidt: Removing linear dependent vector 86
17:08 gram_schmidt: Removing linear dependent vector 87
17:08 gram_schmidt: Removing linear dependent vector 88
17:08 gram_schmidt: Removing linear dependent vector 89
17:08 gram_schmidt: Removing linear dependent vector 90
17:08 gram_schmidt: Removing linear dependent vector 91
17:08 gram_schmidt: Removing linear dependent vector 92
17:08 gram_schmidt: Removing linear dependent vector 93
17:08 gram_schmidt: Removing linear dependent vector 94
17:08 gram_schmidt: Removing linear dependent vector 95
17:08 gram_schmidt: Removing linear dependent vector 96
17:08 gram_schmidt: Removing linear dependent vector 97
17:08 gram_schmidt: Removing linear dependent vector 98
17:08 gram_schmidt: Removing linear dependent vector 99
17:08 gram_schmidt: Removing linear dependent vector 100
17:08 gram_schmidt: Removing linear dependent vector 101
17:08 gram_schmidt: Removing linear dependent vector 3
17:08 gram_schmidt: Removing linear dependent vector 4
17:08 gram_schmidt: Removing linear dependent vector 5
17:08 gram_schmidt: Removing linear dependent vector 6
17:08 gram_schmidt: Removing linear dependent vector 7
17:08 gram_schmidt: Removing linear dependent vector 8
17:08 gram_schmidt: Removing linear dependent vector 9
17:08 gram_schmidt: Removing linear dependent vector 10
17:08 gram_schmidt: Removing linear dependent vector 11
17:08 gram_schmidt: Removing linear dependent vector 12
17:08 gram_schmidt: Removing linear dependent vector 13
17:08 gram_schmidt: Removing linear dependent vector 14
17:08 gram_schmidt: Removing linear dependent vector 15
17:08 gram_schmidt: Removing linear dependent vector 16
17:08 gram_schmidt: Removing linear dependent vector 17
17:08 gram_schmidt: Removing linear dependent vector 18
17:08 gram_schmidt: Removing linear dependent vector 19
17:08 gram_schmidt: Removing linear dependent vector 20
17:08 gram_schmidt: Removing linear dependent vector 21
17:08 gram_schmidt: Removing linear dependent vector 22
17:08 gram_schmidt: Removing linear dependent vector 23
17:08 gram_schmidt: Removing linear dependent vector 24
17:08 gram_schmidt: Removing linear dependent vector 25
17:08 gram_schmidt: Removing linear dependent vector 26
17:08 gram_schmidt: Removing linear dependent vector 27
17:08 gram_schmidt: Removing linear dependent vector 28
17:08 gram_schmidt: Removing linear dependent vector 29
17:08 gram_schmidt: Removing linear dependent vector 30
17:08 gram_schmidt: Removing linear dependent vector 31
17:08 gram_schmidt: Removing linear dependent vector 32
17:08 gram_schmidt: Removing linear dependent vector 33
17:08 gram_schmidt: Removing linear dependent vector 34
17:08 gram_schmidt: Removing linear dependent vector 35
17:08 gram_schmidt: Removing linear dependent vector 36
17:08 gram_schmidt: Removing linear dependent vector 37
17:08 gram_schmidt: Removing linear dependent vector 38
17:08 gram_schmidt: Removing linear dependent vector 39
17:08 gram_schmidt: Removing linear dependent vector 40
17:08 gram_schmidt: Removing linear dependent vector 41
17:08 gram_schmidt: Removing linear dependent vector 42
17:08 gram_schmidt: Removing linear dependent vector 43
17:08 gram_schmidt: Removing linear dependent vector 44
17:08 gram_schmidt: Removing linear dependent vector 45
17:08 gram_schmidt: Removing linear dependent vector 46
17:08 gram_schmidt: Removing linear dependent vector 47
17:08 gram_schmidt: Removing linear dependent vector 48
17:08 gram_schmidt: Removing linear dependent vector 49
17:08 gram_schmidt: Removing linear dependent vector 50
17:08 gram_schmidt: Removing linear dependent vector 51
17:08 gram_schmidt: Removing linear dependent vector 52
17:08 gram_schmidt: Removing linear dependent vector 53
17:08 gram_schmidt: Removing linear dependent vector 54
17:08 gram_schmidt: Removing linear dependent vector 55
17:08 gram_schmidt: Removing linear dependent vector 56
17:08 gram_schmidt: Removing linear dependent vector 57
17:08 gram_schmidt: Removing linear dependent vector 58
17:08 gram_schmidt: Removing linear dependent vector 59
17:08 gram_schmidt: Removing linear dependent vector 60
17:08 gram_schmidt: Removing linear dependent vector 61
17:08 gram_schmidt: Removing linear dependent vector 62
17:08 gram_schmidt: Removing linear dependent vector 63
17:08 gram_schmidt: Removing linear dependent vector 64
17:08 gram_schmidt: Removing linear dependent vector 65
17:08 gram_schmidt: Removing linear dependent vector 66
17:08 gram_schmidt: Removing linear dependent vector 67
17:08 gram_schmidt: Removing linear dependent vector 68
17:08 gram_schmidt: Removing linear dependent vector 69
17:08 gram_schmidt: Removing linear dependent vector 70
17:08 gram_schmidt: Removing linear dependent vector 71
17:08 gram_schmidt: Removing linear dependent vector 72
17:08 gram_schmidt: Removing linear dependent vector 73
17:08 gram_schmidt: Removing linear dependent vector 74
17:08 gram_schmidt: Removing linear dependent vector 75
17:08 gram_schmidt: Removing linear dependent vector 76
17:08 gram_schmidt: Removing linear dependent vector 77
17:08 gram_schmidt: Removing linear dependent vector 78
17:08 gram_schmidt: Removing linear dependent vector 79
17:08 gram_schmidt: Removing linear dependent vector 80
17:08 gram_schmidt: Removing linear dependent vector 81
17:08 gram_schmidt: Removing linear dependent vector 82
17:08 gram_schmidt: Removing linear dependent vector 83
17:08 gram_schmidt: Removing linear dependent vector 84
17:08 gram_schmidt: Removing linear dependent vector 85
17:08 gram_schmidt: Removing linear dependent vector 86
17:08 gram_schmidt: Removing linear dependent vector 87
17:08 gram_schmidt: Removing linear dependent vector 88
17:08 gram_schmidt: Removing linear dependent vector 89
17:08 gram_schmidt: Removing linear dependent vector 90
17:08 gram_schmidt: Removing linear dependent vector 91
17:08 gram_schmidt: Removing linear dependent vector 92
17:08 gram_schmidt: Removing linear dependent vector 93
17:08 gram_schmidt: Removing linear dependent vector 94
17:08 gram_schmidt: Removing linear dependent vector 95
17:08 gram_schmidt: Removing linear dependent vector 96
17:08 gram_schmidt: Removing linear dependent vector 97
17:08 gram_schmidt: Removing linear dependent vector 98
17:08 gram_schmidt: Removing linear dependent vector 99
17:08 gram_schmidt: Removing linear dependent vector 100
17:08 gram_schmidt: Removing linear dependent vector 101
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;17]" time="0.003537893295288086"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;18]" time="0.0026526451110839844"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;19]" time="0.0051364898681640625"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;20]" time="0.28510379791259766"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;21]" time="1.4770519733428955"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;22]" time="0.0026404857635498047"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;23]" time="0.0020189285278320312"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;24]" time="0.008172750473022461"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;25]" time="0.4137153625488281"><system-err>17:10 gram_schmidt: Orthonormalizing vector 31 again
17:10 gram_schmidt: Removing linear dependent vector 32
17:10 gram_schmidt: Removing linear dependent vector 33
17:10 gram_schmidt: Removing linear dependent vector 34
17:10 gram_schmidt: Removing linear dependent vector 35
17:10 gram_schmidt: Removing linear dependent vector 36
17:10 gram_schmidt: Removing linear dependent vector 37
17:10 gram_schmidt: Removing linear dependent vector 38
17:10 gram_schmidt: Removing linear dependent vector 39
17:10 gram_schmidt: Removing linear dependent vector 40
17:10 gram_schmidt: Removing linear dependent vector 41
17:10 gram_schmidt: Removing linear dependent vector 42
17:10 gram_schmidt: Orthonormalizing vector 31 again
17:10 gram_schmidt: Removing linear dependent vector 32
17:10 gram_schmidt: Removing linear dependent vector 33
17:10 gram_schmidt: Removing linear dependent vector 34
17:10 gram_schmidt: Removing linear dependent vector 35
17:10 gram_schmidt: Removing linear dependent vector 36
17:10 gram_schmidt: Removing linear dependent vector 37
17:10 gram_schmidt: Removing linear dependent vector 38
17:10 gram_schmidt: Removing linear dependent vector 39
17:10 gram_schmidt: Removing linear dependent vector 40
17:10 gram_schmidt: Removing linear dependent vector 41
17:10 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;26]" time="0.23786425590515137"><system-err>17:11 gram_schmidt: Removing vector 0 of norm 0.0
17:11 gram_schmidt: Removing vector 1 of norm 0.0
17:11 gram_schmidt: Removing vector 2 of norm 0.0
17:11 gram_schmidt: Removing vector 3 of norm 0.0
17:11 gram_schmidt: Removing vector 4 of norm 0.0
17:11 gram_schmidt: Removing vector 5 of norm 0.0
17:11 gram_schmidt: Removing vector 6 of norm 0.0
17:11 gram_schmidt: Removing vector 7 of norm 0.0
17:11 gram_schmidt: Removing vector 8 of norm 0.0
17:11 gram_schmidt: Removing vector 9 of norm 0.0
17:11 gram_schmidt: Removing vector 10 of norm 0.0
17:11 gram_schmidt: Removing vector 11 of norm 0.0
17:11 gram_schmidt: Removing vector 12 of norm 0.0
17:11 gram_schmidt: Removing vector 13 of norm 0.0
17:11 gram_schmidt: Removing vector 14 of norm 0.0
17:11 gram_schmidt: Removing vector 15 of norm 0.0
17:11 gram_schmidt: Removing vector 16 of norm 0.0
17:11 gram_schmidt: Removing vector 17 of norm 0.0
17:11 gram_schmidt: Removing vector 18 of norm 0.0
17:11 gram_schmidt: Removing vector 19 of norm 0.0
17:11 gram_schmidt: Removing vector 20 of norm 0.0
17:11 gram_schmidt: Removing vector 21 of norm 0.0
17:11 gram_schmidt: Removing vector 22 of norm 0.0
17:11 gram_schmidt: Removing vector 23 of norm 0.0
17:11 gram_schmidt: Removing vector 24 of norm 0.0
17:11 gram_schmidt: Removing vector 25 of norm 0.0
17:11 gram_schmidt: Removing vector 26 of norm 0.0
17:11 gram_schmidt: Removing vector 27 of norm 0.0
17:11 gram_schmidt: Removing vector 28 of norm 0.0
17:11 gram_schmidt: Removing vector 29 of norm 0.0
17:11 gram_schmidt: Removing vector 30 of norm 0.0
17:11 gram_schmidt: Removing vector 31 of norm 0.0
17:11 gram_schmidt: Removing vector 32 of norm 0.0
17:11 gram_schmidt: Removing vector 33 of norm 0.0
17:11 gram_schmidt: Removing vector 34 of norm 0.0
17:11 gram_schmidt: Removing vector 35 of norm 0.0
17:11 gram_schmidt: Removing vector 36 of norm 0.0
17:11 gram_schmidt: Removing vector 37 of norm 0.0
17:11 gram_schmidt: Removing vector 38 of norm 0.0
17:11 gram_schmidt: Removing vector 39 of norm 0.0
17:11 gram_schmidt: Removing vector 40 of norm 0.0
17:11 gram_schmidt: Removing vector 41 of norm 0.0
17:11 gram_schmidt: Removing vector 42 of norm 0.0
17:11 gram_schmidt: Removing vector 43 of norm 0.0
17:11 gram_schmidt: Removing vector 44 of norm 0.0
17:11 gram_schmidt: Removing vector 45 of norm 0.0
17:11 gram_schmidt: Removing vector 46 of norm 0.0
17:11 gram_schmidt: Removing vector 47 of norm 0.0
17:11 gram_schmidt: Removing vector 48 of norm 0.0
17:11 gram_schmidt: Removing vector 49 of norm 0.0
17:11 gram_schmidt: Removing vector 50 of norm 0.0
17:11 gram_schmidt: Removing vector 51 of norm 0.0
17:11 gram_schmidt: Removing vector 52 of norm 0.0
17:11 gram_schmidt: Removing vector 53 of norm 0.0
17:11 gram_schmidt: Removing vector 54 of norm 0.0
17:11 gram_schmidt: Removing vector 55 of norm 0.0
17:11 gram_schmidt: Removing vector 56 of norm 0.0
17:11 gram_schmidt: Removing vector 57 of norm 0.0
17:11 gram_schmidt: Removing vector 58 of norm 0.0
17:11 gram_schmidt: Removing vector 59 of norm 0.0
17:11 gram_schmidt: Removing vector 60 of norm 0.0
17:11 gram_schmidt: Removing vector 61 of norm 0.0
17:11 gram_schmidt: Removing vector 62 of norm 0.0
17:11 gram_schmidt: Removing vector 63 of norm 0.0
17:11 gram_schmidt: Removing vector 64 of norm 0.0
17:11 gram_schmidt: Removing vector 65 of norm 0.0
17:11 gram_schmidt: Removing vector 66 of norm 0.0
17:11 gram_schmidt: Removing vector 67 of norm 0.0
17:11 gram_schmidt: Removing vector 68 of norm 0.0
17:11 gram_schmidt: Removing vector 69 of norm 0.0
17:11 gram_schmidt: Removing vector 70 of norm 0.0
17:11 gram_schmidt: Removing vector 71 of norm 0.0
17:11 gram_schmidt: Removing vector 72 of norm 0.0
17:11 gram_schmidt: Removing vector 73 of norm 0.0
17:11 gram_schmidt: Removing vector 74 of norm 0.0
17:11 gram_schmidt: Removing vector 75 of norm 0.0
17:11 gram_schmidt: Removing vector 76 of norm 0.0
17:11 gram_schmidt: Removing vector 77 of norm 0.0
17:11 gram_schmidt: Removing vector 78 of norm 0.0
17:11 gram_schmidt: Removing vector 79 of norm 0.0
17:11 gram_schmidt: Removing vector 80 of norm 0.0
17:11 gram_schmidt: Removing vector 81 of norm 0.0
17:11 gram_schmidt: Removing vector 82 of norm 0.0
17:11 gram_schmidt: Removing vector 83 of norm 0.0
17:11 gram_schmidt: Removing vector 84 of norm 0.0
17:11 gram_schmidt: Removing vector 85 of norm 0.0
17:11 gram_schmidt: Removing vector 86 of norm 0.0
17:11 gram_schmidt: Removing vector 87 of norm 0.0
17:11 gram_schmidt: Removing vector 88 of norm 0.0
17:11 gram_schmidt: Removing vector 89 of norm 0.0
17:11 gram_schmidt: Removing vector 90 of norm 0.0
17:11 gram_schmidt: Removing vector 91 of norm 0.0
17:11 gram_schmidt: Removing vector 92 of norm 0.0
17:11 gram_schmidt: Removing vector 93 of norm 0.0
17:11 gram_schmidt: Removing vector 94 of norm 0.0
17:11 gram_schmidt: Removing vector 95 of norm 0.0
17:11 gram_schmidt: Removing vector 96 of norm 0.0
17:11 gram_schmidt: Removing vector 97 of norm 0.0
17:11 gram_schmidt: Removing vector 98 of norm 0.0
17:11 gram_schmidt: Removing vector 99 of norm 0.0
17:11 gram_schmidt: Removing vector 100 of norm 0.0
17:11 gram_schmidt: Removing vector 101 of norm 0.0
17:11 gram_schmidt: Removing vector 0 of norm 0.0
17:11 gram_schmidt: Removing vector 1 of norm 0.0
17:11 gram_schmidt: Removing vector 2 of norm 0.0
17:11 gram_schmidt: Removing vector 3 of norm 0.0
17:11 gram_schmidt: Removing vector 4 of norm 0.0
17:11 gram_schmidt: Removing vector 5 of norm 0.0
17:11 gram_schmidt: Removing vector 6 of norm 0.0
17:11 gram_schmidt: Removing vector 7 of norm 0.0
17:11 gram_schmidt: Removing vector 8 of norm 0.0
17:11 gram_schmidt: Removing vector 9 of norm 0.0
17:11 gram_schmidt: Removing vector 10 of norm 0.0
17:11 gram_schmidt: Removing vector 11 of norm 0.0
17:11 gram_schmidt: Removing vector 12 of norm 0.0
17:11 gram_schmidt: Removing vector 13 of norm 0.0
17:11 gram_schmidt: Removing vector 14 of norm 0.0
17:11 gram_schmidt: Removing vector 15 of norm 0.0
17:11 gram_schmidt: Removing vector 16 of norm 0.0
17:11 gram_schmidt: Removing vector 17 of norm 0.0
17:11 gram_schmidt: Removing vector 18 of norm 0.0
17:11 gram_schmidt: Removing vector 19 of norm 0.0
17:11 gram_schmidt: Removing vector 20 of norm 0.0
17:11 gram_schmidt: Removing vector 21 of norm 0.0
17:11 gram_schmidt: Removing vector 22 of norm 0.0
17:11 gram_schmidt: Removing vector 23 of norm 0.0
17:11 gram_schmidt: Removing vector 24 of norm 0.0
17:11 gram_schmidt: Removing vector 25 of norm 0.0
17:11 gram_schmidt: Removing vector 26 of norm 0.0
17:11 gram_schmidt: Removing vector 27 of norm 0.0
17:11 gram_schmidt: Removing vector 28 of norm 0.0
17:11 gram_schmidt: Removing vector 29 of norm 0.0
17:11 gram_schmidt: Removing vector 30 of norm 0.0
17:11 gram_schmidt: Removing vector 31 of norm 0.0
17:11 gram_schmidt: Removing vector 32 of norm 0.0
17:11 gram_schmidt: Removing vector 33 of norm 0.0
17:11 gram_schmidt: Removing vector 34 of norm 0.0
17:11 gram_schmidt: Removing vector 35 of norm 0.0
17:11 gram_schmidt: Removing vector 36 of norm 0.0
17:11 gram_schmidt: Removing vector 37 of norm 0.0
17:11 gram_schmidt: Removing vector 38 of norm 0.0
17:11 gram_schmidt: Removing vector 39 of norm 0.0
17:11 gram_schmidt: Removing vector 40 of norm 0.0
17:11 gram_schmidt: Removing vector 41 of norm 0.0
17:11 gram_schmidt: Removing vector 42 of norm 0.0
17:11 gram_schmidt: Removing vector 43 of norm 0.0
17:11 gram_schmidt: Removing vector 44 of norm 0.0
17:11 gram_schmidt: Removing vector 45 of norm 0.0
17:11 gram_schmidt: Removing vector 46 of norm 0.0
17:11 gram_schmidt: Removing vector 47 of norm 0.0
17:11 gram_schmidt: Removing vector 48 of norm 0.0
17:11 gram_schmidt: Removing vector 49 of norm 0.0
17:11 gram_schmidt: Removing vector 50 of norm 0.0
17:11 gram_schmidt: Removing vector 51 of norm 0.0
17:11 gram_schmidt: Removing vector 52 of norm 0.0
17:11 gram_schmidt: Removing vector 53 of norm 0.0
17:11 gram_schmidt: Removing vector 54 of norm 0.0
17:11 gram_schmidt: Removing vector 55 of norm 0.0
17:11 gram_schmidt: Removing vector 56 of norm 0.0
17:11 gram_schmidt: Removing vector 57 of norm 0.0
17:11 gram_schmidt: Removing vector 58 of norm 0.0
17:11 gram_schmidt: Removing vector 59 of norm 0.0
17:11 gram_schmidt: Removing vector 60 of norm 0.0
17:11 gram_schmidt: Removing vector 61 of norm 0.0
17:11 gram_schmidt: Removing vector 62 of norm 0.0
17:11 gram_schmidt: Removing vector 63 of norm 0.0
17:11 gram_schmidt: Removing vector 64 of norm 0.0
17:11 gram_schmidt: Removing vector 65 of norm 0.0
17:11 gram_schmidt: Removing vector 66 of norm 0.0
17:11 gram_schmidt: Removing vector 67 of norm 0.0
17:11 gram_schmidt: Removing vector 68 of norm 0.0
17:11 gram_schmidt: Removing vector 69 of norm 0.0
17:11 gram_schmidt: Removing vector 70 of norm 0.0
17:11 gram_schmidt: Removing vector 71 of norm 0.0
17:11 gram_schmidt: Removing vector 72 of norm 0.0
17:11 gram_schmidt: Removing vector 73 of norm 0.0
17:11 gram_schmidt: Removing vector 74 of norm 0.0
17:11 gram_schmidt: Removing vector 75 of norm 0.0
17:11 gram_schmidt: Removing vector 76 of norm 0.0
17:11 gram_schmidt: Removing vector 77 of norm 0.0
17:11 gram_schmidt: Removing vector 78 of norm 0.0
17:11 gram_schmidt: Removing vector 79 of norm 0.0
17:11 gram_schmidt: Removing vector 80 of norm 0.0
17:11 gram_schmidt: Removing vector 81 of norm 0.0
17:11 gram_schmidt: Removing vector 82 of norm 0.0
17:11 gram_schmidt: Removing vector 83 of norm 0.0
17:11 gram_schmidt: Removing vector 84 of norm 0.0
17:11 gram_schmidt: Removing vector 85 of norm 0.0
17:11 gram_schmidt: Removing vector 86 of norm 0.0
17:11 gram_schmidt: Removing vector 87 of norm 0.0
17:11 gram_schmidt: Removing vector 88 of norm 0.0
17:11 gram_schmidt: Removing vector 89 of norm 0.0
17:11 gram_schmidt: Removing vector 90 of norm 0.0
17:11 gram_schmidt: Removing vector 91 of norm 0.0
17:11 gram_schmidt: Removing vector 92 of norm 0.0
17:11 gram_schmidt: Removing vector 93 of norm 0.0
17:11 gram_schmidt: Removing vector 94 of norm 0.0
17:11 gram_schmidt: Removing vector 95 of norm 0.0
17:11 gram_schmidt: Removing vector 96 of norm 0.0
17:11 gram_schmidt: Removing vector 97 of norm 0.0
17:11 gram_schmidt: Removing vector 98 of norm 0.0
17:11 gram_schmidt: Removing vector 99 of norm 0.0
17:11 gram_schmidt: Removing vector 100 of norm 0.0
17:11 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;0]" time="0.002959728240966797"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;1]" time="0.002099752426147461"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;2]" time="0.0023026466369628906"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;3]" time="0.11371994018554688"><system-err>17:11 gram_schmidt: Orthonormalizing vector 31 again
17:11 gram_schmidt: Removing linear dependent vector 32
17:11 gram_schmidt: Removing linear dependent vector 33
17:11 gram_schmidt: Removing linear dependent vector 34
17:11 gram_schmidt: Removing linear dependent vector 35
17:11 gram_schmidt: Removing linear dependent vector 36
17:11 gram_schmidt: Removing linear dependent vector 37
17:11 gram_schmidt: Removing linear dependent vector 38
17:11 gram_schmidt: Removing linear dependent vector 39
17:11 gram_schmidt: Removing linear dependent vector 40
17:11 gram_schmidt: Removing linear dependent vector 41
17:11 gram_schmidt: Removing linear dependent vector 42
17:11 gram_schmidt: Orthonormalizing vector 31 again
17:11 gram_schmidt: Removing linear dependent vector 32
17:11 gram_schmidt: Removing linear dependent vector 33
17:11 gram_schmidt: Removing linear dependent vector 34
17:11 gram_schmidt: Removing linear dependent vector 35
17:11 gram_schmidt: Removing linear dependent vector 36
17:11 gram_schmidt: Removing linear dependent vector 37
17:11 gram_schmidt: Removing linear dependent vector 38
17:11 gram_schmidt: Removing linear dependent vector 39
17:11 gram_schmidt: Removing linear dependent vector 40
17:11 gram_schmidt: Removing linear dependent vector 41
17:11 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;4]" time="0.021773338317871094"><system-err>17:11 gram_schmidt: Removing vector 0 of norm 0.0
17:11 gram_schmidt: Removing vector 1 of norm 0.0
17:11 gram_schmidt: Removing vector 2 of norm 0.0
17:11 gram_schmidt: Removing vector 3 of norm 0.0
17:11 gram_schmidt: Removing vector 4 of norm 0.0
17:11 gram_schmidt: Removing vector 5 of norm 0.0
17:11 gram_schmidt: Removing vector 6 of norm 0.0
17:11 gram_schmidt: Removing vector 7 of norm 0.0
17:11 gram_schmidt: Removing vector 8 of norm 0.0
17:11 gram_schmidt: Removing vector 9 of norm 0.0
17:11 gram_schmidt: Removing vector 10 of norm 0.0
17:11 gram_schmidt: Removing vector 11 of norm 0.0
17:11 gram_schmidt: Removing vector 12 of norm 0.0
17:11 gram_schmidt: Removing vector 13 of norm 0.0
17:11 gram_schmidt: Removing vector 14 of norm 0.0
17:11 gram_schmidt: Removing vector 15 of norm 0.0
17:11 gram_schmidt: Removing vector 16 of norm 0.0
17:11 gram_schmidt: Removing vector 17 of norm 0.0
17:11 gram_schmidt: Removing vector 18 of norm 0.0
17:11 gram_schmidt: Removing vector 19 of norm 0.0
17:11 gram_schmidt: Removing vector 20 of norm 0.0
17:11 gram_schmidt: Removing vector 21 of norm 0.0
17:11 gram_schmidt: Removing vector 22 of norm 0.0
17:11 gram_schmidt: Removing vector 23 of norm 0.0
17:11 gram_schmidt: Removing vector 24 of norm 0.0
17:11 gram_schmidt: Removing vector 25 of norm 0.0
17:11 gram_schmidt: Removing vector 26 of norm 0.0
17:11 gram_schmidt: Removing vector 27 of norm 0.0
17:11 gram_schmidt: Removing vector 28 of norm 0.0
17:11 gram_schmidt: Removing vector 29 of norm 0.0
17:11 gram_schmidt: Removing vector 30 of norm 0.0
17:11 gram_schmidt: Removing vector 31 of norm 0.0
17:11 gram_schmidt: Removing vector 32 of norm 0.0
17:11 gram_schmidt: Removing vector 33 of norm 0.0
17:11 gram_schmidt: Removing vector 34 of norm 0.0
17:11 gram_schmidt: Removing vector 35 of norm 0.0
17:11 gram_schmidt: Removing vector 36 of norm 0.0
17:11 gram_schmidt: Removing vector 37 of norm 0.0
17:11 gram_schmidt: Removing vector 38 of norm 0.0
17:11 gram_schmidt: Removing vector 39 of norm 0.0
17:11 gram_schmidt: Removing vector 40 of norm 0.0
17:11 gram_schmidt: Removing vector 41 of norm 0.0
17:11 gram_schmidt: Removing vector 42 of norm 0.0
17:11 gram_schmidt: Removing vector 43 of norm 0.0
17:11 gram_schmidt: Removing vector 44 of norm 0.0
17:11 gram_schmidt: Removing vector 45 of norm 0.0
17:11 gram_schmidt: Removing vector 46 of norm 0.0
17:11 gram_schmidt: Removing vector 47 of norm 0.0
17:11 gram_schmidt: Removing vector 48 of norm 0.0
17:11 gram_schmidt: Removing vector 49 of norm 0.0
17:11 gram_schmidt: Removing vector 50 of norm 0.0
17:11 gram_schmidt: Removing vector 51 of norm 0.0
17:11 gram_schmidt: Removing vector 52 of norm 0.0
17:11 gram_schmidt: Removing vector 53 of norm 0.0
17:11 gram_schmidt: Removing vector 54 of norm 0.0
17:11 gram_schmidt: Removing vector 55 of norm 0.0
17:11 gram_schmidt: Removing vector 56 of norm 0.0
17:11 gram_schmidt: Removing vector 57 of norm 0.0
17:11 gram_schmidt: Removing vector 58 of norm 0.0
17:11 gram_schmidt: Removing vector 59 of norm 0.0
17:11 gram_schmidt: Removing vector 60 of norm 0.0
17:11 gram_schmidt: Removing vector 61 of norm 0.0
17:11 gram_schmidt: Removing vector 62 of norm 0.0
17:11 gram_schmidt: Removing vector 63 of norm 0.0
17:11 gram_schmidt: Removing vector 64 of norm 0.0
17:11 gram_schmidt: Removing vector 65 of norm 0.0
17:11 gram_schmidt: Removing vector 66 of norm 0.0
17:11 gram_schmidt: Removing vector 67 of norm 0.0
17:11 gram_schmidt: Removing vector 68 of norm 0.0
17:11 gram_schmidt: Removing vector 69 of norm 0.0
17:11 gram_schmidt: Removing vector 70 of norm 0.0
17:11 gram_schmidt: Removing vector 71 of norm 0.0
17:11 gram_schmidt: Removing vector 72 of norm 0.0
17:11 gram_schmidt: Removing vector 73 of norm 0.0
17:11 gram_schmidt: Removing vector 74 of norm 0.0
17:11 gram_schmidt: Removing vector 75 of norm 0.0
17:11 gram_schmidt: Removing vector 76 of norm 0.0
17:11 gram_schmidt: Removing vector 77 of norm 0.0
17:11 gram_schmidt: Removing vector 78 of norm 0.0
17:11 gram_schmidt: Removing vector 79 of norm 0.0
17:11 gram_schmidt: Removing vector 80 of norm 0.0
17:11 gram_schmidt: Removing vector 81 of norm 0.0
17:11 gram_schmidt: Removing vector 82 of norm 0.0
17:11 gram_schmidt: Removing vector 83 of norm 0.0
17:11 gram_schmidt: Removing vector 84 of norm 0.0
17:11 gram_schmidt: Removing vector 85 of norm 0.0
17:11 gram_schmidt: Removing vector 86 of norm 0.0
17:11 gram_schmidt: Removing vector 87 of norm 0.0
17:11 gram_schmidt: Removing vector 88 of norm 0.0
17:11 gram_schmidt: Removing vector 89 of norm 0.0
17:11 gram_schmidt: Removing vector 90 of norm 0.0
17:11 gram_schmidt: Removing vector 91 of norm 0.0
17:11 gram_schmidt: Removing vector 92 of norm 0.0
17:11 gram_schmidt: Removing vector 93 of norm 0.0
17:11 gram_schmidt: Removing vector 94 of norm 0.0
17:11 gram_schmidt: Removing vector 95 of norm 0.0
17:11 gram_schmidt: Removing vector 96 of norm 0.0
17:11 gram_schmidt: Removing vector 97 of norm 0.0
17:11 gram_schmidt: Removing vector 98 of norm 0.0
17:11 gram_schmidt: Removing vector 99 of norm 0.0
17:11 gram_schmidt: Removing vector 100 of norm 0.0
17:11 gram_schmidt: Removing vector 101 of norm 0.0
17:11 gram_schmidt: Removing vector 0 of norm 0.0
17:11 gram_schmidt: Removing vector 1 of norm 0.0
17:11 gram_schmidt: Removing vector 2 of norm 0.0
17:11 gram_schmidt: Removing vector 3 of norm 0.0
17:11 gram_schmidt: Removing vector 4 of norm 0.0
17:11 gram_schmidt: Removing vector 5 of norm 0.0
17:11 gram_schmidt: Removing vector 6 of norm 0.0
17:11 gram_schmidt: Removing vector 7 of norm 0.0
17:11 gram_schmidt: Removing vector 8 of norm 0.0
17:11 gram_schmidt: Removing vector 9 of norm 0.0
17:11 gram_schmidt: Removing vector 10 of norm 0.0
17:11 gram_schmidt: Removing vector 11 of norm 0.0
17:11 gram_schmidt: Removing vector 12 of norm 0.0
17:11 gram_schmidt: Removing vector 13 of norm 0.0
17:11 gram_schmidt: Removing vector 14 of norm 0.0
17:11 gram_schmidt: Removing vector 15 of norm 0.0
17:11 gram_schmidt: Removing vector 16 of norm 0.0
17:11 gram_schmidt: Removing vector 17 of norm 0.0
17:11 gram_schmidt: Removing vector 18 of norm 0.0
17:11 gram_schmidt: Removing vector 19 of norm 0.0
17:11 gram_schmidt: Removing vector 20 of norm 0.0
17:11 gram_schmidt: Removing vector 21 of norm 0.0
17:11 gram_schmidt: Removing vector 22 of norm 0.0
17:11 gram_schmidt: Removing vector 23 of norm 0.0
17:11 gram_schmidt: Removing vector 24 of norm 0.0
17:11 gram_schmidt: Removing vector 25 of norm 0.0
17:11 gram_schmidt: Removing vector 26 of norm 0.0
17:11 gram_schmidt: Removing vector 27 of norm 0.0
17:11 gram_schmidt: Removing vector 28 of norm 0.0
17:11 gram_schmidt: Removing vector 29 of norm 0.0
17:11 gram_schmidt: Removing vector 30 of norm 0.0
17:11 gram_schmidt: Removing vector 31 of norm 0.0
17:11 gram_schmidt: Removing vector 32 of norm 0.0
17:11 gram_schmidt: Removing vector 33 of norm 0.0
17:11 gram_schmidt: Removing vector 34 of norm 0.0
17:11 gram_schmidt: Removing vector 35 of norm 0.0
17:11 gram_schmidt: Removing vector 36 of norm 0.0
17:11 gram_schmidt: Removing vector 37 of norm 0.0
17:11 gram_schmidt: Removing vector 38 of norm 0.0
17:11 gram_schmidt: Removing vector 39 of norm 0.0
17:11 gram_schmidt: Removing vector 40 of norm 0.0
17:11 gram_schmidt: Removing vector 41 of norm 0.0
17:11 gram_schmidt: Removing vector 42 of norm 0.0
17:11 gram_schmidt: Removing vector 43 of norm 0.0
17:11 gram_schmidt: Removing vector 44 of norm 0.0
17:11 gram_schmidt: Removing vector 45 of norm 0.0
17:11 gram_schmidt: Removing vector 46 of norm 0.0
17:11 gram_schmidt: Removing vector 47 of norm 0.0
17:11 gram_schmidt: Removing vector 48 of norm 0.0
17:11 gram_schmidt: Removing vector 49 of norm 0.0
17:11 gram_schmidt: Removing vector 50 of norm 0.0
17:11 gram_schmidt: Removing vector 51 of norm 0.0
17:11 gram_schmidt: Removing vector 52 of norm 0.0
17:11 gram_schmidt: Removing vector 53 of norm 0.0
17:11 gram_schmidt: Removing vector 54 of norm 0.0
17:11 gram_schmidt: Removing vector 55 of norm 0.0
17:11 gram_schmidt: Removing vector 56 of norm 0.0
17:11 gram_schmidt: Removing vector 57 of norm 0.0
17:11 gram_schmidt: Removing vector 58 of norm 0.0
17:11 gram_schmidt: Removing vector 59 of norm 0.0
17:11 gram_schmidt: Removing vector 60 of norm 0.0
17:11 gram_schmidt: Removing vector 61 of norm 0.0
17:11 gram_schmidt: Removing vector 62 of norm 0.0
17:11 gram_schmidt: Removing vector 63 of norm 0.0
17:11 gram_schmidt: Removing vector 64 of norm 0.0
17:11 gram_schmidt: Removing vector 65 of norm 0.0
17:11 gram_schmidt: Removing vector 66 of norm 0.0
17:11 gram_schmidt: Removing vector 67 of norm 0.0
17:11 gram_schmidt: Removing vector 68 of norm 0.0
17:11 gram_schmidt: Removing vector 69 of norm 0.0
17:11 gram_schmidt: Removing vector 70 of norm 0.0
17:11 gram_schmidt: Removing vector 71 of norm 0.0
17:11 gram_schmidt: Removing vector 72 of norm 0.0
17:11 gram_schmidt: Removing vector 73 of norm 0.0
17:11 gram_schmidt: Removing vector 74 of norm 0.0
17:11 gram_schmidt: Removing vector 75 of norm 0.0
17:11 gram_schmidt: Removing vector 76 of norm 0.0
17:11 gram_schmidt: Removing vector 77 of norm 0.0
17:11 gram_schmidt: Removing vector 78 of norm 0.0
17:11 gram_schmidt: Removing vector 79 of norm 0.0
17:11 gram_schmidt: Removing vector 80 of norm 0.0
17:11 gram_schmidt: Removing vector 81 of norm 0.0
17:11 gram_schmidt: Removing vector 82 of norm 0.0
17:11 gram_schmidt: Removing vector 83 of norm 0.0
17:11 gram_schmidt: Removing vector 84 of norm 0.0
17:11 gram_schmidt: Removing vector 85 of norm 0.0
17:11 gram_schmidt: Removing vector 86 of norm 0.0
17:11 gram_schmidt: Removing vector 87 of norm 0.0
17:11 gram_schmidt: Removing vector 88 of norm 0.0
17:11 gram_schmidt: Removing vector 89 of norm 0.0
17:11 gram_schmidt: Removing vector 90 of norm 0.0
17:11 gram_schmidt: Removing vector 91 of norm 0.0
17:11 gram_schmidt: Removing vector 92 of norm 0.0
17:11 gram_schmidt: Removing vector 93 of norm 0.0
17:11 gram_schmidt: Removing vector 94 of norm 0.0
17:11 gram_schmidt: Removing vector 95 of norm 0.0
17:11 gram_schmidt: Removing vector 96 of norm 0.0
17:11 gram_schmidt: Removing vector 97 of norm 0.0
17:11 gram_schmidt: Removing vector 98 of norm 0.0
17:11 gram_schmidt: Removing vector 99 of norm 0.0
17:11 gram_schmidt: Removing vector 100 of norm 0.0
17:11 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;5]" time="0.002910137176513672"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;6]" time="0.0021500587463378906"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;7]" time="0.00255584716796875"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;8]" time="0.20758652687072754"><system-err>17:11 gram_schmidt: Orthonormalizing vector 31 again
17:11 gram_schmidt: Removing linear dependent vector 32
17:11 gram_schmidt: Removing linear dependent vector 33
17:11 gram_schmidt: Removing linear dependent vector 34
17:11 gram_schmidt: Removing linear dependent vector 35
17:11 gram_schmidt: Removing linear dependent vector 36
17:11 gram_schmidt: Removing linear dependent vector 37
17:11 gram_schmidt: Removing linear dependent vector 38
17:11 gram_schmidt: Removing linear dependent vector 39
17:11 gram_schmidt: Removing linear dependent vector 40
17:11 gram_schmidt: Removing linear dependent vector 41
17:11 gram_schmidt: Removing linear dependent vector 42
17:11 gram_schmidt: Orthonormalizing vector 31 again
17:11 gram_schmidt: Removing linear dependent vector 32
17:11 gram_schmidt: Removing linear dependent vector 33
17:11 gram_schmidt: Removing linear dependent vector 34
17:11 gram_schmidt: Removing linear dependent vector 35
17:11 gram_schmidt: Removing linear dependent vector 36
17:11 gram_schmidt: Removing linear dependent vector 37
17:11 gram_schmidt: Removing linear dependent vector 38
17:11 gram_schmidt: Removing linear dependent vector 39
17:11 gram_schmidt: Removing linear dependent vector 40
17:11 gram_schmidt: Removing linear dependent vector 41
17:11 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;9]" time="0.02836894989013672"><system-err>17:11 gram_schmidt: Removing vector 0 of norm 0.0
17:11 gram_schmidt: Removing vector 1 of norm 0.0
17:11 gram_schmidt: Removing vector 2 of norm 0.0
17:11 gram_schmidt: Removing vector 3 of norm 0.0
17:11 gram_schmidt: Removing vector 4 of norm 0.0
17:11 gram_schmidt: Removing vector 5 of norm 0.0
17:11 gram_schmidt: Removing vector 6 of norm 0.0
17:11 gram_schmidt: Removing vector 7 of norm 0.0
17:11 gram_schmidt: Removing vector 8 of norm 0.0
17:11 gram_schmidt: Removing vector 9 of norm 0.0
17:11 gram_schmidt: Removing vector 10 of norm 0.0
17:11 gram_schmidt: Removing vector 11 of norm 0.0
17:11 gram_schmidt: Removing vector 12 of norm 0.0
17:11 gram_schmidt: Removing vector 13 of norm 0.0
17:11 gram_schmidt: Removing vector 14 of norm 0.0
17:11 gram_schmidt: Removing vector 15 of norm 0.0
17:11 gram_schmidt: Removing vector 16 of norm 0.0
17:11 gram_schmidt: Removing vector 17 of norm 0.0
17:11 gram_schmidt: Removing vector 18 of norm 0.0
17:11 gram_schmidt: Removing vector 19 of norm 0.0
17:11 gram_schmidt: Removing vector 20 of norm 0.0
17:11 gram_schmidt: Removing vector 21 of norm 0.0
17:11 gram_schmidt: Removing vector 22 of norm 0.0
17:11 gram_schmidt: Removing vector 23 of norm 0.0
17:11 gram_schmidt: Removing vector 24 of norm 0.0
17:11 gram_schmidt: Removing vector 25 of norm 0.0
17:11 gram_schmidt: Removing vector 26 of norm 0.0
17:11 gram_schmidt: Removing vector 27 of norm 0.0
17:11 gram_schmidt: Removing vector 28 of norm 0.0
17:11 gram_schmidt: Removing vector 29 of norm 0.0
17:11 gram_schmidt: Removing vector 30 of norm 0.0
17:11 gram_schmidt: Removing vector 31 of norm 0.0
17:11 gram_schmidt: Removing vector 32 of norm 0.0
17:11 gram_schmidt: Removing vector 33 of norm 0.0
17:11 gram_schmidt: Removing vector 34 of norm 0.0
17:11 gram_schmidt: Removing vector 35 of norm 0.0
17:11 gram_schmidt: Removing vector 36 of norm 0.0
17:11 gram_schmidt: Removing vector 37 of norm 0.0
17:11 gram_schmidt: Removing vector 38 of norm 0.0
17:11 gram_schmidt: Removing vector 39 of norm 0.0
17:11 gram_schmidt: Removing vector 40 of norm 0.0
17:11 gram_schmidt: Removing vector 41 of norm 0.0
17:11 gram_schmidt: Removing vector 42 of norm 0.0
17:11 gram_schmidt: Removing vector 43 of norm 0.0
17:11 gram_schmidt: Removing vector 44 of norm 0.0
17:11 gram_schmidt: Removing vector 45 of norm 0.0
17:11 gram_schmidt: Removing vector 46 of norm 0.0
17:11 gram_schmidt: Removing vector 47 of norm 0.0
17:11 gram_schmidt: Removing vector 48 of norm 0.0
17:11 gram_schmidt: Removing vector 49 of norm 0.0
17:11 gram_schmidt: Removing vector 50 of norm 0.0
17:11 gram_schmidt: Removing vector 51 of norm 0.0
17:11 gram_schmidt: Removing vector 52 of norm 0.0
17:11 gram_schmidt: Removing vector 53 of norm 0.0
17:11 gram_schmidt: Removing vector 54 of norm 0.0
17:11 gram_schmidt: Removing vector 55 of norm 0.0
17:11 gram_schmidt: Removing vector 56 of norm 0.0
17:11 gram_schmidt: Removing vector 57 of norm 0.0
17:11 gram_schmidt: Removing vector 58 of norm 0.0
17:11 gram_schmidt: Removing vector 59 of norm 0.0
17:11 gram_schmidt: Removing vector 60 of norm 0.0
17:11 gram_schmidt: Removing vector 61 of norm 0.0
17:11 gram_schmidt: Removing vector 62 of norm 0.0
17:11 gram_schmidt: Removing vector 63 of norm 0.0
17:11 gram_schmidt: Removing vector 64 of norm 0.0
17:11 gram_schmidt: Removing vector 65 of norm 0.0
17:11 gram_schmidt: Removing vector 66 of norm 0.0
17:11 gram_schmidt: Removing vector 67 of norm 0.0
17:11 gram_schmidt: Removing vector 68 of norm 0.0
17:11 gram_schmidt: Removing vector 69 of norm 0.0
17:11 gram_schmidt: Removing vector 70 of norm 0.0
17:11 gram_schmidt: Removing vector 71 of norm 0.0
17:11 gram_schmidt: Removing vector 72 of norm 0.0
17:11 gram_schmidt: Removing vector 73 of norm 0.0
17:11 gram_schmidt: Removing vector 74 of norm 0.0
17:11 gram_schmidt: Removing vector 75 of norm 0.0
17:11 gram_schmidt: Removing vector 76 of norm 0.0
17:11 gram_schmidt: Removing vector 77 of norm 0.0
17:11 gram_schmidt: Removing vector 78 of norm 0.0
17:11 gram_schmidt: Removing vector 79 of norm 0.0
17:11 gram_schmidt: Removing vector 80 of norm 0.0
17:11 gram_schmidt: Removing vector 81 of norm 0.0
17:11 gram_schmidt: Removing vector 82 of norm 0.0
17:11 gram_schmidt: Removing vector 83 of norm 0.0
17:11 gram_schmidt: Removing vector 84 of norm 0.0
17:11 gram_schmidt: Removing vector 85 of norm 0.0
17:11 gram_schmidt: Removing vector 86 of norm 0.0
17:11 gram_schmidt: Removing vector 87 of norm 0.0
17:11 gram_schmidt: Removing vector 88 of norm 0.0
17:11 gram_schmidt: Removing vector 89 of norm 0.0
17:11 gram_schmidt: Removing vector 90 of norm 0.0
17:11 gram_schmidt: Removing vector 91 of norm 0.0
17:11 gram_schmidt: Removing vector 92 of norm 0.0
17:11 gram_schmidt: Removing vector 93 of norm 0.0
17:11 gram_schmidt: Removing vector 94 of norm 0.0
17:11 gram_schmidt: Removing vector 95 of norm 0.0
17:11 gram_schmidt: Removing vector 96 of norm 0.0
17:11 gram_schmidt: Removing vector 97 of norm 0.0
17:11 gram_schmidt: Removing vector 98 of norm 0.0
17:11 gram_schmidt: Removing vector 99 of norm 0.0
17:11 gram_schmidt: Removing vector 100 of norm 0.0
17:11 gram_schmidt: Removing vector 101 of norm 0.0
17:11 gram_schmidt: Removing vector 0 of norm 0.0
17:11 gram_schmidt: Removing vector 1 of norm 0.0
17:11 gram_schmidt: Removing vector 2 of norm 0.0
17:11 gram_schmidt: Removing vector 3 of norm 0.0
17:11 gram_schmidt: Removing vector 4 of norm 0.0
17:11 gram_schmidt: Removing vector 5 of norm 0.0
17:11 gram_schmidt: Removing vector 6 of norm 0.0
17:11 gram_schmidt: Removing vector 7 of norm 0.0
17:11 gram_schmidt: Removing vector 8 of norm 0.0
17:11 gram_schmidt: Removing vector 9 of norm 0.0
17:11 gram_schmidt: Removing vector 10 of norm 0.0
17:11 gram_schmidt: Removing vector 11 of norm 0.0
17:11 gram_schmidt: Removing vector 12 of norm 0.0
17:11 gram_schmidt: Removing vector 13 of norm 0.0
17:11 gram_schmidt: Removing vector 14 of norm 0.0
17:11 gram_schmidt: Removing vector 15 of norm 0.0
17:11 gram_schmidt: Removing vector 16 of norm 0.0
17:11 gram_schmidt: Removing vector 17 of norm 0.0
17:11 gram_schmidt: Removing vector 18 of norm 0.0
17:11 gram_schmidt: Removing vector 19 of norm 0.0
17:11 gram_schmidt: Removing vector 20 of norm 0.0
17:11 gram_schmidt: Removing vector 21 of norm 0.0
17:11 gram_schmidt: Removing vector 22 of norm 0.0
17:11 gram_schmidt: Removing vector 23 of norm 0.0
17:11 gram_schmidt: Removing vector 24 of norm 0.0
17:11 gram_schmidt: Removing vector 25 of norm 0.0
17:11 gram_schmidt: Removing vector 26 of norm 0.0
17:11 gram_schmidt: Removing vector 27 of norm 0.0
17:11 gram_schmidt: Removing vector 28 of norm 0.0
17:11 gram_schmidt: Removing vector 29 of norm 0.0
17:11 gram_schmidt: Removing vector 30 of norm 0.0
17:11 gram_schmidt: Removing vector 31 of norm 0.0
17:11 gram_schmidt: Removing vector 32 of norm 0.0
17:11 gram_schmidt: Removing vector 33 of norm 0.0
17:11 gram_schmidt: Removing vector 34 of norm 0.0
17:11 gram_schmidt: Removing vector 35 of norm 0.0
17:11 gram_schmidt: Removing vector 36 of norm 0.0
17:11 gram_schmidt: Removing vector 37 of norm 0.0
17:11 gram_schmidt: Removing vector 38 of norm 0.0
17:11 gram_schmidt: Removing vector 39 of norm 0.0
17:11 gram_schmidt: Removing vector 40 of norm 0.0
17:11 gram_schmidt: Removing vector 41 of norm 0.0
17:11 gram_schmidt: Removing vector 42 of norm 0.0
17:11 gram_schmidt: Removing vector 43 of norm 0.0
17:11 gram_schmidt: Removing vector 44 of norm 0.0
17:11 gram_schmidt: Removing vector 45 of norm 0.0
17:11 gram_schmidt: Removing vector 46 of norm 0.0
17:11 gram_schmidt: Removing vector 47 of norm 0.0
17:11 gram_schmidt: Removing vector 48 of norm 0.0
17:11 gram_schmidt: Removing vector 49 of norm 0.0
17:11 gram_schmidt: Removing vector 50 of norm 0.0
17:11 gram_schmidt: Removing vector 51 of norm 0.0
17:11 gram_schmidt: Removing vector 52 of norm 0.0
17:11 gram_schmidt: Removing vector 53 of norm 0.0
17:11 gram_schmidt: Removing vector 54 of norm 0.0
17:11 gram_schmidt: Removing vector 55 of norm 0.0
17:11 gram_schmidt: Removing vector 56 of norm 0.0
17:11 gram_schmidt: Removing vector 57 of norm 0.0
17:11 gram_schmidt: Removing vector 58 of norm 0.0
17:11 gram_schmidt: Removing vector 59 of norm 0.0
17:11 gram_schmidt: Removing vector 60 of norm 0.0
17:11 gram_schmidt: Removing vector 61 of norm 0.0
17:11 gram_schmidt: Removing vector 62 of norm 0.0
17:11 gram_schmidt: Removing vector 63 of norm 0.0
17:11 gram_schmidt: Removing vector 64 of norm 0.0
17:11 gram_schmidt: Removing vector 65 of norm 0.0
17:11 gram_schmidt: Removing vector 66 of norm 0.0
17:11 gram_schmidt: Removing vector 67 of norm 0.0
17:11 gram_schmidt: Removing vector 68 of norm 0.0
17:11 gram_schmidt: Removing vector 69 of norm 0.0
17:11 gram_schmidt: Removing vector 70 of norm 0.0
17:11 gram_schmidt: Removing vector 71 of norm 0.0
17:11 gram_schmidt: Removing vector 72 of norm 0.0
17:11 gram_schmidt: Removing vector 73 of norm 0.0
17:11 gram_schmidt: Removing vector 74 of norm 0.0
17:11 gram_schmidt: Removing vector 75 of norm 0.0
17:11 gram_schmidt: Removing vector 76 of norm 0.0
17:11 gram_schmidt: Removing vector 77 of norm 0.0
17:11 gram_schmidt: Removing vector 78 of norm 0.0
17:11 gram_schmidt: Removing vector 79 of norm 0.0
17:11 gram_schmidt: Removing vector 80 of norm 0.0
17:11 gram_schmidt: Removing vector 81 of norm 0.0
17:11 gram_schmidt: Removing vector 82 of norm 0.0
17:11 gram_schmidt: Removing vector 83 of norm 0.0
17:11 gram_schmidt: Removing vector 84 of norm 0.0
17:11 gram_schmidt: Removing vector 85 of norm 0.0
17:11 gram_schmidt: Removing vector 86 of norm 0.0
17:11 gram_schmidt: Removing vector 87 of norm 0.0
17:11 gram_schmidt: Removing vector 88 of norm 0.0
17:11 gram_schmidt: Removing vector 89 of norm 0.0
17:11 gram_schmidt: Removing vector 90 of norm 0.0
17:11 gram_schmidt: Removing vector 91 of norm 0.0
17:11 gram_schmidt: Removing vector 92 of norm 0.0
17:11 gram_schmidt: Removing vector 93 of norm 0.0
17:11 gram_schmidt: Removing vector 94 of norm 0.0
17:11 gram_schmidt: Removing vector 95 of norm 0.0
17:11 gram_schmidt: Removing vector 96 of norm 0.0
17:11 gram_schmidt: Removing vector 97 of norm 0.0
17:11 gram_schmidt: Removing vector 98 of norm 0.0
17:11 gram_schmidt: Removing vector 99 of norm 0.0
17:11 gram_schmidt: Removing vector 100 of norm 0.0
17:11 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;10]" time="0.003504514694213867"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;11]" time="0.006723642349243164"><system-err>17:11 gram_schmidt: Removing linear dependent vector 3
17:11 gram_schmidt: Removing linear dependent vector 3
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;12]" time="0.003728151321411133"><system-err>17:11 gram_schmidt: Removing vector 0 of norm 0.0
17:11 gram_schmidt: Removing vector 1 of norm 0.0
17:11 gram_schmidt: Removing vector 2 of norm 0.0
17:11 gram_schmidt: Removing vector 0 of norm 0.0
17:11 gram_schmidt: Removing vector 1 of norm 0.0
17:11 gram_schmidt: Removing vector 2 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;13]" time="0.002691030502319336"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;14]" time="0.0050122737884521484"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;15]" time="0.4176485538482666"><system-err>17:11 gram_schmidt: Removing linear dependent vector 36
17:11 gram_schmidt: Removing linear dependent vector 37
17:11 gram_schmidt: Removing linear dependent vector 38
17:11 gram_schmidt: Removing linear dependent vector 39
17:11 gram_schmidt: Removing linear dependent vector 40
17:11 gram_schmidt: Removing linear dependent vector 41
17:11 gram_schmidt: Removing linear dependent vector 42
17:12 gram_schmidt: Removing linear dependent vector 36
17:12 gram_schmidt: Removing linear dependent vector 37
17:12 gram_schmidt: Removing linear dependent vector 38
17:12 gram_schmidt: Removing linear dependent vector 39
17:12 gram_schmidt: Removing linear dependent vector 40
17:12 gram_schmidt: Removing linear dependent vector 41
17:12 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;16]" time="0.21337652206420898"><system-err>17:12 gram_schmidt: Removing linear dependent vector 3
17:12 gram_schmidt: Removing linear dependent vector 4
17:12 gram_schmidt: Removing linear dependent vector 5
17:12 gram_schmidt: Removing linear dependent vector 6
17:12 gram_schmidt: Removing linear dependent vector 7
17:12 gram_schmidt: Removing linear dependent vector 8
17:12 gram_schmidt: Removing linear dependent vector 9
17:12 gram_schmidt: Removing linear dependent vector 10
17:12 gram_schmidt: Removing linear dependent vector 11
17:12 gram_schmidt: Removing linear dependent vector 12
17:12 gram_schmidt: Removing linear dependent vector 13
17:12 gram_schmidt: Removing linear dependent vector 14
17:12 gram_schmidt: Removing linear dependent vector 15
17:12 gram_schmidt: Removing linear dependent vector 16
17:12 gram_schmidt: Removing linear dependent vector 17
17:12 gram_schmidt: Removing linear dependent vector 18
17:12 gram_schmidt: Removing linear dependent vector 19
17:12 gram_schmidt: Removing linear dependent vector 20
17:12 gram_schmidt: Removing linear dependent vector 21
17:12 gram_schmidt: Removing linear dependent vector 22
17:12 gram_schmidt: Removing linear dependent vector 23
17:12 gram_schmidt: Removing linear dependent vector 24
17:12 gram_schmidt: Removing linear dependent vector 25
17:12 gram_schmidt: Removing linear dependent vector 26
17:12 gram_schmidt: Removing linear dependent vector 27
17:12 gram_schmidt: Removing linear dependent vector 28
17:12 gram_schmidt: Removing linear dependent vector 29
17:12 gram_schmidt: Removing linear dependent vector 30
17:12 gram_schmidt: Removing linear dependent vector 31
17:12 gram_schmidt: Removing linear dependent vector 32
17:12 gram_schmidt: Removing linear dependent vector 33
17:12 gram_schmidt: Removing linear dependent vector 34
17:12 gram_schmidt: Removing linear dependent vector 35
17:12 gram_schmidt: Removing linear dependent vector 36
17:12 gram_schmidt: Removing linear dependent vector 37
17:12 gram_schmidt: Removing linear dependent vector 38
17:12 gram_schmidt: Removing linear dependent vector 39
17:12 gram_schmidt: Removing linear dependent vector 40
17:12 gram_schmidt: Removing linear dependent vector 41
17:12 gram_schmidt: Removing linear dependent vector 42
17:12 gram_schmidt: Removing linear dependent vector 43
17:12 gram_schmidt: Removing linear dependent vector 44
17:12 gram_schmidt: Removing linear dependent vector 45
17:12 gram_schmidt: Removing linear dependent vector 46
17:12 gram_schmidt: Removing linear dependent vector 47
17:12 gram_schmidt: Removing linear dependent vector 48
17:12 gram_schmidt: Removing linear dependent vector 49
17:12 gram_schmidt: Removing linear dependent vector 50
17:12 gram_schmidt: Removing linear dependent vector 51
17:12 gram_schmidt: Removing linear dependent vector 52
17:12 gram_schmidt: Removing linear dependent vector 53
17:12 gram_schmidt: Removing linear dependent vector 54
17:12 gram_schmidt: Removing linear dependent vector 55
17:12 gram_schmidt: Removing linear dependent vector 56
17:12 gram_schmidt: Removing linear dependent vector 57
17:12 gram_schmidt: Removing linear dependent vector 58
17:12 gram_schmidt: Removing linear dependent vector 59
17:12 gram_schmidt: Removing linear dependent vector 60
17:12 gram_schmidt: Removing linear dependent vector 61
17:12 gram_schmidt: Removing linear dependent vector 62
17:12 gram_schmidt: Removing linear dependent vector 63
17:12 gram_schmidt: Removing linear dependent vector 64
17:12 gram_schmidt: Removing linear dependent vector 65
17:12 gram_schmidt: Removing linear dependent vector 66
17:12 gram_schmidt: Removing linear dependent vector 67
17:12 gram_schmidt: Removing linear dependent vector 68
17:12 gram_schmidt: Removing linear dependent vector 69
17:12 gram_schmidt: Removing linear dependent vector 70
17:12 gram_schmidt: Removing linear dependent vector 71
17:12 gram_schmidt: Removing linear dependent vector 72
17:12 gram_schmidt: Removing linear dependent vector 73
17:12 gram_schmidt: Removing linear dependent vector 74
17:12 gram_schmidt: Removing linear dependent vector 75
17:12 gram_schmidt: Removing linear dependent vector 76
17:12 gram_schmidt: Removing linear dependent vector 77
17:12 gram_schmidt: Removing linear dependent vector 78
17:12 gram_schmidt: Removing linear dependent vector 79
17:12 gram_schmidt: Removing linear dependent vector 80
17:12 gram_schmidt: Removing linear dependent vector 81
17:12 gram_schmidt: Removing linear dependent vector 82
17:12 gram_schmidt: Removing linear dependent vector 83
17:12 gram_schmidt: Removing linear dependent vector 84
17:12 gram_schmidt: Removing linear dependent vector 85
17:12 gram_schmidt: Removing linear dependent vector 86
17:12 gram_schmidt: Removing linear dependent vector 87
17:12 gram_schmidt: Removing linear dependent vector 88
17:12 gram_schmidt: Removing linear dependent vector 89
17:12 gram_schmidt: Removing linear dependent vector 90
17:12 gram_schmidt: Removing linear dependent vector 91
17:12 gram_schmidt: Removing linear dependent vector 92
17:12 gram_schmidt: Removing linear dependent vector 93
17:12 gram_schmidt: Removing linear dependent vector 94
17:12 gram_schmidt: Removing linear dependent vector 95
17:12 gram_schmidt: Removing linear dependent vector 96
17:12 gram_schmidt: Removing linear dependent vector 97
17:12 gram_schmidt: Removing linear dependent vector 98
17:12 gram_schmidt: Removing linear dependent vector 99
17:12 gram_schmidt: Removing linear dependent vector 100
17:12 gram_schmidt: Removing linear dependent vector 101
17:12 gram_schmidt: Removing linear dependent vector 3
17:12 gram_schmidt: Removing linear dependent vector 4
17:12 gram_schmidt: Removing linear dependent vector 5
17:12 gram_schmidt: Removing linear dependent vector 6
17:12 gram_schmidt: Removing linear dependent vector 7
17:12 gram_schmidt: Removing linear dependent vector 8
17:12 gram_schmidt: Removing linear dependent vector 9
17:12 gram_schmidt: Removing linear dependent vector 10
17:12 gram_schmidt: Removing linear dependent vector 11
17:12 gram_schmidt: Removing linear dependent vector 12
17:12 gram_schmidt: Removing linear dependent vector 13
17:12 gram_schmidt: Removing linear dependent vector 14
17:12 gram_schmidt: Removing linear dependent vector 15
17:12 gram_schmidt: Removing linear dependent vector 16
17:12 gram_schmidt: Removing linear dependent vector 17
17:12 gram_schmidt: Removing linear dependent vector 18
17:12 gram_schmidt: Removing linear dependent vector 19
17:12 gram_schmidt: Removing linear dependent vector 20
17:12 gram_schmidt: Removing linear dependent vector 21
17:12 gram_schmidt: Removing linear dependent vector 22
17:12 gram_schmidt: Removing linear dependent vector 23
17:12 gram_schmidt: Removing linear dependent vector 24
17:12 gram_schmidt: Removing linear dependent vector 25
17:12 gram_schmidt: Removing linear dependent vector 26
17:12 gram_schmidt: Removing linear dependent vector 27
17:12 gram_schmidt: Removing linear dependent vector 28
17:12 gram_schmidt: Removing linear dependent vector 29
17:12 gram_schmidt: Removing linear dependent vector 30
17:12 gram_schmidt: Removing linear dependent vector 31
17:12 gram_schmidt: Removing linear dependent vector 32
17:12 gram_schmidt: Removing linear dependent vector 33
17:12 gram_schmidt: Removing linear dependent vector 34
17:12 gram_schmidt: Removing linear dependent vector 35
17:12 gram_schmidt: Removing linear dependent vector 36
17:12 gram_schmidt: Removing linear dependent vector 37
17:12 gram_schmidt: Removing linear dependent vector 38
17:12 gram_schmidt: Removing linear dependent vector 39
17:12 gram_schmidt: Removing linear dependent vector 40
17:12 gram_schmidt: Removing linear dependent vector 41
17:12 gram_schmidt: Removing linear dependent vector 42
17:12 gram_schmidt: Removing linear dependent vector 43
17:12 gram_schmidt: Removing linear dependent vector 44
17:12 gram_schmidt: Removing linear dependent vector 45
17:12 gram_schmidt: Removing linear dependent vector 46
17:12 gram_schmidt: Removing linear dependent vector 47
17:12 gram_schmidt: Removing linear dependent vector 48
17:12 gram_schmidt: Removing linear dependent vector 49
17:12 gram_schmidt: Removing linear dependent vector 50
17:12 gram_schmidt: Removing linear dependent vector 51
17:12 gram_schmidt: Removing linear dependent vector 52
17:12 gram_schmidt: Removing linear dependent vector 53
17:12 gram_schmidt: Removing linear dependent vector 54
17:12 gram_schmidt: Removing linear dependent vector 55
17:12 gram_schmidt: Removing linear dependent vector 56
17:12 gram_schmidt: Removing linear dependent vector 57
17:12 gram_schmidt: Removing linear dependent vector 58
17:12 gram_schmidt: Removing linear dependent vector 59
17:12 gram_schmidt: Removing linear dependent vector 60
17:12 gram_schmidt: Removing linear dependent vector 61
17:12 gram_schmidt: Removing linear dependent vector 62
17:12 gram_schmidt: Removing linear dependent vector 63
17:12 gram_schmidt: Removing linear dependent vector 64
17:12 gram_schmidt: Removing linear dependent vector 65
17:12 gram_schmidt: Removing linear dependent vector 66
17:12 gram_schmidt: Removing linear dependent vector 67
17:12 gram_schmidt: Removing linear dependent vector 68
17:12 gram_schmidt: Removing linear dependent vector 69
17:12 gram_schmidt: Removing linear dependent vector 70
17:12 gram_schmidt: Removing linear dependent vector 71
17:12 gram_schmidt: Removing linear dependent vector 72
17:12 gram_schmidt: Removing linear dependent vector 73
17:12 gram_schmidt: Removing linear dependent vector 74
17:12 gram_schmidt: Removing linear dependent vector 75
17:12 gram_schmidt: Removing linear dependent vector 76
17:12 gram_schmidt: Removing linear dependent vector 77
17:12 gram_schmidt: Removing linear dependent vector 78
17:12 gram_schmidt: Removing linear dependent vector 79
17:12 gram_schmidt: Removing linear dependent vector 80
17:12 gram_schmidt: Removing linear dependent vector 81
17:12 gram_schmidt: Removing linear dependent vector 82
17:12 gram_schmidt: Removing linear dependent vector 83
17:12 gram_schmidt: Removing linear dependent vector 84
17:12 gram_schmidt: Removing linear dependent vector 85
17:12 gram_schmidt: Removing linear dependent vector 86
17:12 gram_schmidt: Removing linear dependent vector 87
17:12 gram_schmidt: Removing linear dependent vector 88
17:12 gram_schmidt: Removing linear dependent vector 89
17:12 gram_schmidt: Removing linear dependent vector 90
17:12 gram_schmidt: Removing linear dependent vector 91
17:12 gram_schmidt: Removing linear dependent vector 92
17:12 gram_schmidt: Removing linear dependent vector 93
17:12 gram_schmidt: Removing linear dependent vector 94
17:12 gram_schmidt: Removing linear dependent vector 95
17:12 gram_schmidt: Removing linear dependent vector 96
17:12 gram_schmidt: Removing linear dependent vector 97
17:12 gram_schmidt: Removing linear dependent vector 98
17:12 gram_schmidt: Removing linear dependent vector 99
17:12 gram_schmidt: Removing linear dependent vector 100
17:12 gram_schmidt: Removing linear dependent vector 101
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;17]" time="0.003490447998046875"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;18]" time="0.002529621124267578"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;19]" time="0.0050013065338134766"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;20]" time="0.2799060344696045"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;21]" time="1.5547282695770264"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;22]" time="0.0029764175415039062"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;23]" time="0.0023458003997802734"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;24]" time="0.009340524673461914"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;25]" time="0.44735288619995117"><system-err>17:14 gram_schmidt: Orthonormalizing vector 31 again
17:14 gram_schmidt: Removing linear dependent vector 32
17:14 gram_schmidt: Removing linear dependent vector 33
17:14 gram_schmidt: Removing linear dependent vector 34
17:14 gram_schmidt: Removing linear dependent vector 35
17:14 gram_schmidt: Removing linear dependent vector 36
17:14 gram_schmidt: Removing linear dependent vector 37
17:14 gram_schmidt: Removing linear dependent vector 38
17:14 gram_schmidt: Removing linear dependent vector 39
17:14 gram_schmidt: Removing linear dependent vector 40
17:14 gram_schmidt: Removing linear dependent vector 41
17:14 gram_schmidt: Removing linear dependent vector 42
17:14 gram_schmidt: Orthonormalizing vector 31 again
17:14 gram_schmidt: Removing linear dependent vector 32
17:14 gram_schmidt: Removing linear dependent vector 33
17:14 gram_schmidt: Removing linear dependent vector 34
17:14 gram_schmidt: Removing linear dependent vector 35
17:14 gram_schmidt: Removing linear dependent vector 36
17:14 gram_schmidt: Removing linear dependent vector 37
17:14 gram_schmidt: Removing linear dependent vector 38
17:14 gram_schmidt: Removing linear dependent vector 39
17:14 gram_schmidt: Removing linear dependent vector 40
17:14 gram_schmidt: Removing linear dependent vector 41
17:14 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;26]" time="0.25409626960754395"><system-err>17:14 gram_schmidt: Removing vector 0 of norm 0.0
17:14 gram_schmidt: Removing vector 1 of norm 0.0
17:14 gram_schmidt: Removing vector 2 of norm 0.0
17:14 gram_schmidt: Removing vector 3 of norm 0.0
17:14 gram_schmidt: Removing vector 4 of norm 0.0
17:14 gram_schmidt: Removing vector 5 of norm 0.0
17:14 gram_schmidt: Removing vector 6 of norm 0.0
17:14 gram_schmidt: Removing vector 7 of norm 0.0
17:14 gram_schmidt: Removing vector 8 of norm 0.0
17:14 gram_schmidt: Removing vector 9 of norm 0.0
17:14 gram_schmidt: Removing vector 10 of norm 0.0
17:14 gram_schmidt: Removing vector 11 of norm 0.0
17:14 gram_schmidt: Removing vector 12 of norm 0.0
17:14 gram_schmidt: Removing vector 13 of norm 0.0
17:14 gram_schmidt: Removing vector 14 of norm 0.0
17:14 gram_schmidt: Removing vector 15 of norm 0.0
17:14 gram_schmidt: Removing vector 16 of norm 0.0
17:14 gram_schmidt: Removing vector 17 of norm 0.0
17:14 gram_schmidt: Removing vector 18 of norm 0.0
17:14 gram_schmidt: Removing vector 19 of norm 0.0
17:14 gram_schmidt: Removing vector 20 of norm 0.0
17:14 gram_schmidt: Removing vector 21 of norm 0.0
17:14 gram_schmidt: Removing vector 22 of norm 0.0
17:14 gram_schmidt: Removing vector 23 of norm 0.0
17:14 gram_schmidt: Removing vector 24 of norm 0.0
17:14 gram_schmidt: Removing vector 25 of norm 0.0
17:14 gram_schmidt: Removing vector 26 of norm 0.0
17:14 gram_schmidt: Removing vector 27 of norm 0.0
17:14 gram_schmidt: Removing vector 28 of norm 0.0
17:14 gram_schmidt: Removing vector 29 of norm 0.0
17:14 gram_schmidt: Removing vector 30 of norm 0.0
17:14 gram_schmidt: Removing vector 31 of norm 0.0
17:14 gram_schmidt: Removing vector 32 of norm 0.0
17:14 gram_schmidt: Removing vector 33 of norm 0.0
17:14 gram_schmidt: Removing vector 34 of norm 0.0
17:14 gram_schmidt: Removing vector 35 of norm 0.0
17:14 gram_schmidt: Removing vector 36 of norm 0.0
17:14 gram_schmidt: Removing vector 37 of norm 0.0
17:14 gram_schmidt: Removing vector 38 of norm 0.0
17:14 gram_schmidt: Removing vector 39 of norm 0.0
17:14 gram_schmidt: Removing vector 40 of norm 0.0
17:14 gram_schmidt: Removing vector 41 of norm 0.0
17:14 gram_schmidt: Removing vector 42 of norm 0.0
17:14 gram_schmidt: Removing vector 43 of norm 0.0
17:14 gram_schmidt: Removing vector 44 of norm 0.0
17:14 gram_schmidt: Removing vector 45 of norm 0.0
17:14 gram_schmidt: Removing vector 46 of norm 0.0
17:14 gram_schmidt: Removing vector 47 of norm 0.0
17:14 gram_schmidt: Removing vector 48 of norm 0.0
17:14 gram_schmidt: Removing vector 49 of norm 0.0
17:14 gram_schmidt: Removing vector 50 of norm 0.0
17:14 gram_schmidt: Removing vector 51 of norm 0.0
17:14 gram_schmidt: Removing vector 52 of norm 0.0
17:14 gram_schmidt: Removing vector 53 of norm 0.0
17:14 gram_schmidt: Removing vector 54 of norm 0.0
17:14 gram_schmidt: Removing vector 55 of norm 0.0
17:14 gram_schmidt: Removing vector 56 of norm 0.0
17:14 gram_schmidt: Removing vector 57 of norm 0.0
17:14 gram_schmidt: Removing vector 58 of norm 0.0
17:14 gram_schmidt: Removing vector 59 of norm 0.0
17:14 gram_schmidt: Removing vector 60 of norm 0.0
17:14 gram_schmidt: Removing vector 61 of norm 0.0
17:14 gram_schmidt: Removing vector 62 of norm 0.0
17:14 gram_schmidt: Removing vector 63 of norm 0.0
17:14 gram_schmidt: Removing vector 64 of norm 0.0
17:14 gram_schmidt: Removing vector 65 of norm 0.0
17:14 gram_schmidt: Removing vector 66 of norm 0.0
17:14 gram_schmidt: Removing vector 67 of norm 0.0
17:14 gram_schmidt: Removing vector 68 of norm 0.0
17:14 gram_schmidt: Removing vector 69 of norm 0.0
17:14 gram_schmidt: Removing vector 70 of norm 0.0
17:14 gram_schmidt: Removing vector 71 of norm 0.0
17:14 gram_schmidt: Removing vector 72 of norm 0.0
17:14 gram_schmidt: Removing vector 73 of norm 0.0
17:14 gram_schmidt: Removing vector 74 of norm 0.0
17:14 gram_schmidt: Removing vector 75 of norm 0.0
17:14 gram_schmidt: Removing vector 76 of norm 0.0
17:14 gram_schmidt: Removing vector 77 of norm 0.0
17:14 gram_schmidt: Removing vector 78 of norm 0.0
17:14 gram_schmidt: Removing vector 79 of norm 0.0
17:14 gram_schmidt: Removing vector 80 of norm 0.0
17:14 gram_schmidt: Removing vector 81 of norm 0.0
17:14 gram_schmidt: Removing vector 82 of norm 0.0
17:14 gram_schmidt: Removing vector 83 of norm 0.0
17:14 gram_schmidt: Removing vector 84 of norm 0.0
17:14 gram_schmidt: Removing vector 85 of norm 0.0
17:14 gram_schmidt: Removing vector 86 of norm 0.0
17:14 gram_schmidt: Removing vector 87 of norm 0.0
17:14 gram_schmidt: Removing vector 88 of norm 0.0
17:14 gram_schmidt: Removing vector 89 of norm 0.0
17:14 gram_schmidt: Removing vector 90 of norm 0.0
17:14 gram_schmidt: Removing vector 91 of norm 0.0
17:14 gram_schmidt: Removing vector 92 of norm 0.0
17:14 gram_schmidt: Removing vector 93 of norm 0.0
17:14 gram_schmidt: Removing vector 94 of norm 0.0
17:14 gram_schmidt: Removing vector 95 of norm 0.0
17:14 gram_schmidt: Removing vector 96 of norm 0.0
17:14 gram_schmidt: Removing vector 97 of norm 0.0
17:14 gram_schmidt: Removing vector 98 of norm 0.0
17:14 gram_schmidt: Removing vector 99 of norm 0.0
17:14 gram_schmidt: Removing vector 100 of norm 0.0
17:14 gram_schmidt: Removing vector 101 of norm 0.0
17:14 gram_schmidt: Removing vector 0 of norm 0.0
17:14 gram_schmidt: Removing vector 1 of norm 0.0
17:14 gram_schmidt: Removing vector 2 of norm 0.0
17:14 gram_schmidt: Removing vector 3 of norm 0.0
17:14 gram_schmidt: Removing vector 4 of norm 0.0
17:14 gram_schmidt: Removing vector 5 of norm 0.0
17:14 gram_schmidt: Removing vector 6 of norm 0.0
17:14 gram_schmidt: Removing vector 7 of norm 0.0
17:14 gram_schmidt: Removing vector 8 of norm 0.0
17:14 gram_schmidt: Removing vector 9 of norm 0.0
17:14 gram_schmidt: Removing vector 10 of norm 0.0
17:14 gram_schmidt: Removing vector 11 of norm 0.0
17:14 gram_schmidt: Removing vector 12 of norm 0.0
17:14 gram_schmidt: Removing vector 13 of norm 0.0
17:14 gram_schmidt: Removing vector 14 of norm 0.0
17:14 gram_schmidt: Removing vector 15 of norm 0.0
17:14 gram_schmidt: Removing vector 16 of norm 0.0
17:14 gram_schmidt: Removing vector 17 of norm 0.0
17:14 gram_schmidt: Removing vector 18 of norm 0.0
17:14 gram_schmidt: Removing vector 19 of norm 0.0
17:14 gram_schmidt: Removing vector 20 of norm 0.0
17:14 gram_schmidt: Removing vector 21 of norm 0.0
17:14 gram_schmidt: Removing vector 22 of norm 0.0
17:14 gram_schmidt: Removing vector 23 of norm 0.0
17:14 gram_schmidt: Removing vector 24 of norm 0.0
17:14 gram_schmidt: Removing vector 25 of norm 0.0
17:14 gram_schmidt: Removing vector 26 of norm 0.0
17:14 gram_schmidt: Removing vector 27 of norm 0.0
17:14 gram_schmidt: Removing vector 28 of norm 0.0
17:14 gram_schmidt: Removing vector 29 of norm 0.0
17:14 gram_schmidt: Removing vector 30 of norm 0.0
17:14 gram_schmidt: Removing vector 31 of norm 0.0
17:14 gram_schmidt: Removing vector 32 of norm 0.0
17:14 gram_schmidt: Removing vector 33 of norm 0.0
17:14 gram_schmidt: Removing vector 34 of norm 0.0
17:14 gram_schmidt: Removing vector 35 of norm 0.0
17:14 gram_schmidt: Removing vector 36 of norm 0.0
17:14 gram_schmidt: Removing vector 37 of norm 0.0
17:14 gram_schmidt: Removing vector 38 of norm 0.0
17:14 gram_schmidt: Removing vector 39 of norm 0.0
17:14 gram_schmidt: Removing vector 40 of norm 0.0
17:14 gram_schmidt: Removing vector 41 of norm 0.0
17:14 gram_schmidt: Removing vector 42 of norm 0.0
17:14 gram_schmidt: Removing vector 43 of norm 0.0
17:14 gram_schmidt: Removing vector 44 of norm 0.0
17:14 gram_schmidt: Removing vector 45 of norm 0.0
17:14 gram_schmidt: Removing vector 46 of norm 0.0
17:14 gram_schmidt: Removing vector 47 of norm 0.0
17:14 gram_schmidt: Removing vector 48 of norm 0.0
17:14 gram_schmidt: Removing vector 49 of norm 0.0
17:14 gram_schmidt: Removing vector 50 of norm 0.0
17:14 gram_schmidt: Removing vector 51 of norm 0.0
17:14 gram_schmidt: Removing vector 52 of norm 0.0
17:14 gram_schmidt: Removing vector 53 of norm 0.0
17:14 gram_schmidt: Removing vector 54 of norm 0.0
17:14 gram_schmidt: Removing vector 55 of norm 0.0
17:14 gram_schmidt: Removing vector 56 of norm 0.0
17:14 gram_schmidt: Removing vector 57 of norm 0.0
17:14 gram_schmidt: Removing vector 58 of norm 0.0
17:14 gram_schmidt: Removing vector 59 of norm 0.0
17:14 gram_schmidt: Removing vector 60 of norm 0.0
17:14 gram_schmidt: Removing vector 61 of norm 0.0
17:14 gram_schmidt: Removing vector 62 of norm 0.0
17:14 gram_schmidt: Removing vector 63 of norm 0.0
17:14 gram_schmidt: Removing vector 64 of norm 0.0
17:14 gram_schmidt: Removing vector 65 of norm 0.0
17:14 gram_schmidt: Removing vector 66 of norm 0.0
17:14 gram_schmidt: Removing vector 67 of norm 0.0
17:14 gram_schmidt: Removing vector 68 of norm 0.0
17:14 gram_schmidt: Removing vector 69 of norm 0.0
17:14 gram_schmidt: Removing vector 70 of norm 0.0
17:14 gram_schmidt: Removing vector 71 of norm 0.0
17:14 gram_schmidt: Removing vector 72 of norm 0.0
17:14 gram_schmidt: Removing vector 73 of norm 0.0
17:14 gram_schmidt: Removing vector 74 of norm 0.0
17:14 gram_schmidt: Removing vector 75 of norm 0.0
17:14 gram_schmidt: Removing vector 76 of norm 0.0
17:14 gram_schmidt: Removing vector 77 of norm 0.0
17:14 gram_schmidt: Removing vector 78 of norm 0.0
17:14 gram_schmidt: Removing vector 79 of norm 0.0
17:14 gram_schmidt: Removing vector 80 of norm 0.0
17:14 gram_schmidt: Removing vector 81 of norm 0.0
17:14 gram_schmidt: Removing vector 82 of norm 0.0
17:14 gram_schmidt: Removing vector 83 of norm 0.0
17:14 gram_schmidt: Removing vector 84 of norm 0.0
17:14 gram_schmidt: Removing vector 85 of norm 0.0
17:14 gram_schmidt: Removing vector 86 of norm 0.0
17:14 gram_schmidt: Removing vector 87 of norm 0.0
17:14 gram_schmidt: Removing vector 88 of norm 0.0
17:14 gram_schmidt: Removing vector 89 of norm 0.0
17:14 gram_schmidt: Removing vector 90 of norm 0.0
17:14 gram_schmidt: Removing vector 91 of norm 0.0
17:14 gram_schmidt: Removing vector 92 of norm 0.0
17:14 gram_schmidt: Removing vector 93 of norm 0.0
17:14 gram_schmidt: Removing vector 94 of norm 0.0
17:14 gram_schmidt: Removing vector 95 of norm 0.0
17:14 gram_schmidt: Removing vector 96 of norm 0.0
17:14 gram_schmidt: Removing vector 97 of norm 0.0
17:14 gram_schmidt: Removing vector 98 of norm 0.0
17:14 gram_schmidt: Removing vector 99 of norm 0.0
17:14 gram_schmidt: Removing vector 100 of norm 0.0
17:14 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;0]" time="0.04137730598449707"><system-err>17:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:14 DiffusionOperatorP1: Determine global dofs ...
17:14 DiffusionOperatorP1: Boundary treatment ...
17:14 DiffusionOperatorP1: Assemble system matrix ...
17:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:14 DiffusionOperatorP1: Determine global dofs ...
17:14 DiffusionOperatorP1: Boundary treatment ...
17:14 DiffusionOperatorP1: Assemble system matrix ...
17:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:14 DiffusionOperatorP1: Determine global dofs ...
17:14 DiffusionOperatorP1: Boundary treatment ...
17:14 DiffusionOperatorP1: Assemble system matrix ...
17:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:14 DiffusionOperatorP1: Determine global dofs ...
17:14 DiffusionOperatorP1: Boundary treatment ...
17:14 DiffusionOperatorP1: Assemble system matrix ...
17:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:14 DiffusionOperatorP1: Determine global dofs ...
17:14 DiffusionOperatorP1: Boundary treatment ...
17:14 DiffusionOperatorP1: Assemble system matrix ...
17:14 L2ProductP1: Integrate the products of the shape functions on each element
17:14 L2ProductP1: Determine global dofs ...
17:14 L2ProductP1: Boundary treatment ...
17:14 L2ProductP1: Assemble system matrix ...
17:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:14 DiffusionOperatorP1: Determine global dofs ...
17:14 DiffusionOperatorP1: Boundary treatment ...
17:14 DiffusionOperatorP1: Assemble system matrix ...
17:14 L2ProductP1: Integrate the products of the shape functions on each element
17:14 L2ProductP1: Determine global dofs ...
17:14 L2ProductP1: Boundary treatment ...
17:14 L2ProductP1: Assemble system matrix ...
17:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:14 DiffusionOperatorP1: Determine global dofs ...
17:14 DiffusionOperatorP1: Boundary treatment ...
17:14 DiffusionOperatorP1: Assemble system matrix ...
17:14 gram_schmidt: Orthonormalizing vector 3 again
17:14 gram_schmidt: Orthonormalizing vector 4 again
17:14 gram_schmidt: Orthonormalizing vector 3 again
17:14 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;1]" time="0.03768587112426758"><system-err>17:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:14 DiffusionOperatorP1: Determine global dofs ...
17:14 DiffusionOperatorP1: Boundary treatment ...
17:14 DiffusionOperatorP1: Assemble system matrix ...
17:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:14 DiffusionOperatorP1: Determine global dofs ...
17:14 DiffusionOperatorP1: Boundary treatment ...
17:14 DiffusionOperatorP1: Assemble system matrix ...
17:14 L2ProductP1: Integrate the products of the shape functions on each element
17:14 L2ProductP1: Determine global dofs ...
17:14 L2ProductP1: Boundary treatment ...
17:14 L2ProductP1: Assemble system matrix ...
17:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:14 DiffusionOperatorP1: Determine global dofs ...
17:14 DiffusionOperatorP1: Boundary treatment ...
17:14 DiffusionOperatorP1: Assemble system matrix ...
17:14 L2ProductP1: Integrate the products of the shape functions on each element
17:14 L2ProductP1: Determine global dofs ...
17:14 L2ProductP1: Boundary treatment ...
17:14 L2ProductP1: Assemble system matrix ...
17:14 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:14 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:14 DiffusionOperatorP1: Determine global dofs ...
17:14 DiffusionOperatorP1: Boundary treatment ...
17:14 DiffusionOperatorP1: Assemble system matrix ...
17:14 gram_schmidt: Orthonormalizing vector 1 again
17:14 gram_schmidt: Orthonormalizing vector 2 again
17:14 gram_schmidt: Orthonormalizing vector 3 again
17:14 gram_schmidt: Orthonormalizing vector 4 again
17:14 gram_schmidt: Orthonormalizing vector 1 again
17:14 gram_schmidt: Orthonormalizing vector 2 again
17:14 gram_schmidt: Orthonormalizing vector 3 again
17:14 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;2]" time="0.042188405990600586"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;3]" time="0.03709745407104492"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;4]" time="0.04185652732849121"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;5]" time="0.0389866828918457"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;6]" time="0.04189252853393555"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;7]" time="0.03804469108581543"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;8]" time="0.04086136817932129"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;9]" time="0.03701138496398926"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;10]" time="0.043501853942871094"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;11]" time="0.038733720779418945"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;12]" time="0.0415339469909668"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Removing linear dependent vector 5
17:15 gram_schmidt: Removing linear dependent vector 6
17:15 gram_schmidt: Removing linear dependent vector 5
17:15 gram_schmidt: Removing linear dependent vector 6
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;13]" time="0.03803825378417969"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Removing linear dependent vector 5
17:15 gram_schmidt: Removing linear dependent vector 6
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Removing linear dependent vector 5
17:15 gram_schmidt: Removing linear dependent vector 6
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;14]" time="0.0474848747253418"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Removing linear dependent vector 5
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Removing linear dependent vector 5
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;15]" time="0.04403114318847656"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Orthonormalizing vector 5 again
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Orthonormalizing vector 5 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;16]" time="0.03916597366333008"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Removing linear dependent vector 1
17:15 gram_schmidt: Removing linear dependent vector 2
17:15 gram_schmidt: Removing linear dependent vector 3
17:15 gram_schmidt: Removing linear dependent vector 4
17:15 gram_schmidt: Removing linear dependent vector 5
17:15 gram_schmidt: Removing linear dependent vector 6
17:15 gram_schmidt: Removing linear dependent vector 1
17:15 gram_schmidt: Removing linear dependent vector 2
17:15 gram_schmidt: Removing linear dependent vector 3
17:15 gram_schmidt: Removing linear dependent vector 4
17:15 gram_schmidt: Removing linear dependent vector 5
17:15 gram_schmidt: Removing linear dependent vector 6
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;17]" time="0.03428173065185547"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Removing linear dependent vector 1
17:15 gram_schmidt: Removing linear dependent vector 2
17:15 gram_schmidt: Removing linear dependent vector 3
17:15 gram_schmidt: Removing linear dependent vector 4
17:15 gram_schmidt: Removing linear dependent vector 5
17:15 gram_schmidt: Removing linear dependent vector 6
17:15 gram_schmidt: Removing linear dependent vector 1
17:15 gram_schmidt: Removing linear dependent vector 2
17:15 gram_schmidt: Removing linear dependent vector 3
17:15 gram_schmidt: Removing linear dependent vector 4
17:15 gram_schmidt: Removing linear dependent vector 5
17:15 gram_schmidt: Removing linear dependent vector 6
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;18]" time="0.04617619514465332"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Removing linear dependent vector 5
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Removing linear dependent vector 5
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;19]" time="0.04067826271057129"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Orthonormalizing vector 5 again
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Orthonormalizing vector 5 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;20]" time="0.04374885559082031"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Removing linear dependent vector 5
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Removing linear dependent vector 5
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;21]" time="0.04168438911437988"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Orthonormalizing vector 5 again
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Orthonormalizing vector 5 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;22]" time="0.04258370399475098"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;23]" time="0.03807473182678223"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;24]" time="0.012178182601928711"><system-err>17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;25]" time="0.011674642562866211"><system-err>17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;26]" time="0.011322021484375"><system-err>17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;27]" time="0.0072405338287353516"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;28]" time="0.007508516311645508"><system-err>17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:16 gram_schmidt: Orthonormalizing vector 1 again
17:16 gram_schmidt: Orthonormalizing vector 2 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;29]" time="0.00685882568359375"><system-err>17:16 gram_schmidt: Orthonormalizing vector 1 again
17:16 gram_schmidt: Orthonormalizing vector 2 again
17:16 gram_schmidt: Orthonormalizing vector 1 again
17:16 gram_schmidt: Orthonormalizing vector 2 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;30]" time="0.0066983699798583984"><system-err>17:16 gram_schmidt: Orthonormalizing vector 1 again
17:16 gram_schmidt: Orthonormalizing vector 2 again
17:16 gram_schmidt: Orthonormalizing vector 1 again
17:16 gram_schmidt: Orthonormalizing vector 2 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;31]" time="0.006617546081542969"><system-err>17:16 gram_schmidt: Orthonormalizing vector 1 again
17:16 gram_schmidt: Orthonormalizing vector 2 again
17:16 gram_schmidt: Orthonormalizing vector 1 again
17:16 gram_schmidt: Orthonormalizing vector 2 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;32]" time="0.02320694923400879"><system-err>17:16 gram_schmidt: Orthonormalizing vector 3 again
17:16 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;33]" time="0.019048690795898438"><system-err>17:16 gram_schmidt: Orthonormalizing vector 3 again
17:16 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;34]" time="0.011436700820922852"><system-err>17:16 gram_schmidt: Orthonormalizing vector 1 again
17:16 gram_schmidt: Orthonormalizing vector 2 again
17:16 gram_schmidt: Orthonormalizing vector 3 again
17:16 gram_schmidt: Orthonormalizing vector 1 again
17:16 gram_schmidt: Orthonormalizing vector 2 again
17:16 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;35]" time="0.02069997787475586"><system-err>17:16 gram_schmidt: Orthonormalizing vector 2 again
17:16 gram_schmidt: Orthonormalizing vector 3 again
17:16 gram_schmidt: Orthonormalizing vector 2 again
17:16 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;36]" time="0.011870622634887695"><system-err>17:16 gram_schmidt: Orthonormalizing vector 1 again
17:16 gram_schmidt: Orthonormalizing vector 2 again
17:16 gram_schmidt: Orthonormalizing vector 3 again
17:16 gram_schmidt: Orthonormalizing vector 1 again
17:16 gram_schmidt: Orthonormalizing vector 2 again
17:16 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;0]" time="0.0019426345825195312"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;1]" time="0.0015552043914794922"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;2]" time="0.0014350414276123047"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;3]" time="0.06379842758178711"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;4]" time="0.00205230712890625"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;5]" time="0.0015940666198730469"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;6]" time="0.0014963150024414062"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;7]" time="0.0014407634735107422"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;8]" time="0.1201772689819336"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;9]" time="0.002500772476196289"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;10]" time="0.0017316341400146484"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;11]" time="0.007233858108520508"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;12]" time="0.00160980224609375"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;13]" time="0.0016193389892578125"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;14]" time="0.005379915237426758"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;15]" time="0.23531723022460938"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;16]" time="0.010367393493652344"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;17]" time="0.0033223628997802734"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;18]" time="0.002454042434692383"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;19]" time="0.003934621810913086"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;20]" time="0.158278226852417"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;21]" time="0.7949216365814209"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;22]" time="0.0019741058349609375"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;23]" time="0.0015401840209960938"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;24]" time="0.0026636123657226562"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;25]" time="0.3261449337005615"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;26]" time="0.058075666427612305"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;0]" time="0.0021200180053710938"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;1]" time="0.0016775131225585938"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;2]" time="0.0014681816101074219"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;3]" time="0.06450891494750977"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;4]" time="0.002192974090576172"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;5]" time="0.0017070770263671875"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;6]" time="0.0015375614166259766"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;7]" time="0.0016231536865234375"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;8]" time="0.1202402114868164"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;9]" time="0.0033211708068847656"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;10]" time="0.0018358230590820312"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;11]" time="0.007279157638549805"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;12]" time="0.0017647743225097656"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;13]" time="0.0017855167388916016"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;14]" time="0.0057332515716552734"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;15]" time="0.23801207542419434"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;16]" time="0.01029825210571289"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;17]" time="0.0032722949981689453"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;18]" time="0.002490520477294922"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;19]" time="0.0040340423583984375"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;20]" time="0.16068005561828613"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;21]" time="0.8128118515014648"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;22]" time="0.0022563934326171875"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;23]" time="0.0016641616821289062"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;24]" time="0.0031795501708984375"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;25]" time="0.3500709533691406"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;26]" time="0.06050848960876465"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;0]" time="0.0021331310272216797"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;1]" time="0.001569509506225586"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;2]" time="0.0016870498657226562"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;3]" time="0.06655311584472656"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;4]" time="0.0023610591888427734"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;5]" time="0.0017747879028320312"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;6]" time="0.001863718032836914"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;7]" time="0.0017337799072265625"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;8]" time="0.1222374439239502"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;9]" time="0.0034737586975097656"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;10]" time="0.0019068717956542969"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;11]" time="0.007395744323730469"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;12]" time="0.0018506050109863281"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;13]" time="0.0017652511596679688"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;14]" time="0.005276679992675781"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;15]" time="0.23224425315856934"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;16]" time="0.009753227233886719"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;17]" time="0.0033087730407714844"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;18]" time="0.0024199485778808594"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;19]" time="0.0038013458251953125"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;20]" time="0.1617569923400879"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;21]" time="0.8077075481414795"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;22]" time="0.0024247169494628906"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;23]" time="0.001931905746459961"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;24]" time="0.003107786178588867"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;25]" time="0.3403897285461426"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;26]" time="0.059333086013793945"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;0]" time="0.03652691841125488"><system-err>17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;1]" time="0.03401947021484375"><system-err>17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 gram_schmidt_biorth: Projecting vector V[1] again
17:21 gram_schmidt_biorth: Projecting vector W[1] again
17:21 gram_schmidt_biorth: Projecting vector V[1] again
17:21 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;2]" time="0.03900766372680664"><system-err>17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;3]" time="0.03413867950439453"><system-err>17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 gram_schmidt_biorth: Projecting vector V[1] again
17:21 gram_schmidt_biorth: Projecting vector W[1] again
17:21 gram_schmidt_biorth: Projecting vector V[1] again
17:21 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;4]" time="0.036134958267211914"><system-err>17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;5]" time="0.03347587585449219"><system-err>17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;6]" time="0.03776669502258301"><system-err>17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;7]" time="0.034578561782836914"><system-err>17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;8]" time="0.035828351974487305"><system-err>17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;9]" time="0.03378415107727051"><system-err>17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;10]" time="0.03579139709472656"><system-err>17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;11]" time="0.03248023986816406"><system-err>17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;12]" time="0.038655757904052734"><system-err>17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;13]" time="0.03234362602233887"><system-err>17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;14]" time="0.041768789291381836"><system-err>17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector V[2] again
17:22 gram_schmidt_biorth: Projecting vector W[2] again
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector V[2] again
17:22 gram_schmidt_biorth: Projecting vector W[2] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;15]" time="0.03756523132324219"><system-err>17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
17:22 gram_schmidt_biorth: Projecting vector V[2] again
17:22 gram_schmidt_biorth: Projecting vector W[2] again
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
17:22 gram_schmidt_biorth: Projecting vector V[2] again
17:22 gram_schmidt_biorth: Projecting vector W[2] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;16]" time="0.031944990158081055"><system-err>17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;17]" time="0.02758169174194336"><system-err>17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;18]" time="0.04167485237121582"><system-err>17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector V[2] again
17:22 gram_schmidt_biorth: Projecting vector W[2] again
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector V[2] again
17:22 gram_schmidt_biorth: Projecting vector W[2] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;19]" time="0.037116289138793945"><system-err>17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
17:22 gram_schmidt_biorth: Projecting vector V[2] again
17:22 gram_schmidt_biorth: Projecting vector W[2] again
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
17:22 gram_schmidt_biorth: Projecting vector V[2] again
17:22 gram_schmidt_biorth: Projecting vector W[2] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;20]" time="0.04194045066833496"><system-err>17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector V[2] again
17:22 gram_schmidt_biorth: Projecting vector W[2] again
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector V[2] again
17:22 gram_schmidt_biorth: Projecting vector W[2] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;21]" time="0.036992549896240234"><system-err>17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
17:22 gram_schmidt_biorth: Projecting vector V[2] again
17:22 gram_schmidt_biorth: Projecting vector W[2] again
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
17:22 gram_schmidt_biorth: Projecting vector V[2] again
17:22 gram_schmidt_biorth: Projecting vector W[2] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;22]" time="0.037084341049194336"><system-err>17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;23]" time="0.03235936164855957"><system-err>17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;24]" time="0.010085582733154297"><system-err>17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;25]" time="0.009820699691772461"><system-err>17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;26]" time="0.009474754333496094"><system-err>17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;27]" time="0.006703853607177734"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;28]" time="0.0054569244384765625"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;29]" time="0.004881858825683594"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;30]" time="0.0049304962158203125"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;31]" time="0.004667520523071289"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;32]" time="0.0176088809967041"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;33]" time="0.015267372131347656"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;34]" time="0.010355472564697266"><system-err>17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;35]" time="0.015641450881958008"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;36]" time="0.01011347770690918"><system-err>17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="20" name="test_newton[1]" time="0.0037584304809570312"><system-err>17:22 newton:       Initial Residual: 1.000000e+00
17:22 newton: Iteration  1: Residual: 0.000000e+00,  Reduction: 0.000000e+00, Total Reduction: 0.000000e+00
17:22 newton: Absolute limit of 1e-15 reached. Stopping.
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="20" name="test_newton[2]" time="0.0034966468811035156"><system-err>17:22 newton:       Initial Residual: 1.000000e+00
17:22 newton: Iteration  1: Residual: 0.000000e+00,  Reduction: 0.000000e+00, Total Reduction: 0.000000e+00
17:22 newton: Absolute limit of 1e-15 reached. Stopping.
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="20" name="test_newton[3]" time="0.002665996551513672"><system-err>17:22 newton:       Initial Residual: 1.000000e+00
17:22 newton: Iteration  1: Residual: 0.000000e+00,  Reduction: 0.000000e+00, Total Reduction: 0.000000e+00
17:22 newton: Absolute limit of 1e-15 reached. Stopping.
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="20" name="test_newton[4]" time="0.0024535655975341797"><system-err>17:22 newton:       Initial Residual: 1.000000e+00
17:22 newton: Iteration  1: Residual: 0.000000e+00,  Reduction: 0.000000e+00, Total Reduction: 0.000000e+00
17:22 newton: Absolute limit of 1e-15 reached. Stopping.
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="20" name="test_newton[5]" time="0.0029456615447998047"><system-err>17:22 newton:       Initial Residual: 1.000000e+00
17:22 newton: Iteration  1: Residual: 0.000000e+00,  Reduction: 0.000000e+00, Total Reduction: 0.000000e+00
17:22 newton: Absolute limit of 1e-15 reached. Stopping.
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="20" name="test_newton[6]" time="0.002627134323120117"><system-err>17:22 newton:       Initial Residual: 1.000000e+00
17:22 newton: Iteration  1: Residual: 0.000000e+00,  Reduction: 0.000000e+00, Total Reduction: 0.000000e+00
17:22 newton: Absolute limit of 1e-15 reached. Stopping.
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="20" name="test_newton[7]" time="0.0025796890258789062"><system-err>17:22 newton:       Initial Residual: 1.000000e+00
17:22 newton: Iteration  1: Residual: 0.000000e+00,  Reduction: 0.000000e+00, Total Reduction: 0.000000e+00
17:22 newton: Absolute limit of 1e-15 reached. Stopping.
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="26" name="test_newton_fail" time="0.0058689117431640625"><system-err>17:22 newton:       Initial Residual: 1.000000e+00
17:22 newton: Iteration  1: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
17:22 newton: Iteration  2: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
17:22 newton: Iteration  3: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
17:22 newton: Iteration  4: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
17:22 newton: Iteration  5: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
17:22 newton: Iteration  6: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
17:22 newton: Iteration  7: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
17:22 newton: Iteration  8: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
17:22 newton: Iteration  9: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
17:22 newton: Iteration 10: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
</system-err></testcase><testcase classname="src.pymortests.core.config" file="src/pymortests/core/config.py" line="8" name="test_repr" time="0.02287602424621582"></testcase><testcase classname="src.pymortests.core.config" file="src/pymortests/core/config.py" line="12" name="test_entries" time="0.0013804435729980469"></testcase><testcase classname="src.pymortests.core.config" file="src/pymortests/core/config.py" line="19" name="test_dir" time="0.0013055801391601562"></testcase><testcase classname="src.pymortests.core.defaults" file="src/pymortests/core/defaults.py" line="14" name="test_defaults" time="0.0016865730285644531"></testcase><testcase classname="src.pymortests.core.defaults" file="src/pymortests/core/defaults.py" line="30" name="test_print_defaults" time="0.05359983444213867"><system-out>                                                       defaults affecting state id calcuation                                                       
                                                       ======================================                                                       

path (shortened)                                                       value                                                                  source
---------------------------------------------------------------------  ---------------------------------------------------------------------  ------
basic.almost_equal.atol                                                1e-14                                                                  code  
basic.almost_equal.rtol                                                1e-14                                                                  code  
genericsolvers.apply_inverse.check_finite                              True                                                                   code  
genericsolvers.apply_inverse.default_least_squares_solver              &apos;generic_least_squares_lsmr&apos;                                           code  
genericsolvers.apply_inverse.default_solver                            &apos;generic_lgmres&apos;                                                       code  
genericsolvers.solver_options.least_squares_lsmr_atol                  1e-06                                                                  code  
genericsolvers.solver_options.least_squares_lsmr_btol                  1e-06                                                                  code  
genericsolvers.solver_options.least_squares_lsmr_conlim                100000000.0                                                            code  
genericsolvers.solver_options.least_squares_lsmr_damp                  0.0                                                                    code  
genericsolvers.solver_options.least_squares_lsmr_maxiter               None                                                                   code  
genericsolvers.solver_options.least_squares_lsqr_atol                  1e-06                                                                  code  
genericsolvers.solver_options.least_squares_lsqr_btol                  1e-06                                                                  code  
genericsolvers.solver_options.least_squares_lsqr_conlim                100000000.0                                                            code  
genericsolvers.solver_options.least_squares_lsqr_iter_lim              None                                                                   code  
genericsolvers.solver_options.lgmres_inner_m                           39                                                                     code  
genericsolvers.solver_options.lgmres_maxiter                           1000                                                                   code  
genericsolvers.solver_options.lgmres_outer_k                           3                                                                      code  
genericsolvers.solver_options.lgmres_tol                               1e-05                                                                  code  
gram_schmidt.gram_schmidt.atol                                         1e-13                                                                  code  
gram_schmidt.gram_schmidt.check                                        True                                                                   code  
gram_schmidt.gram_schmidt.check_tol                                    0.001                                                                  code  
gram_schmidt.gram_schmidt.reiterate                                    True                                                                   code  
gram_schmidt.gram_schmidt.reiteration_threshold                        0.1                                                                    code  
gram_schmidt.gram_schmidt.rtol                                         1e-13                                                                  code  
newton.newton.atol                                                     -1.0                                                                   code  
newton.newton.maxiter                                                  100                                                                    code  
newton.newton.miniter                                                  0                                                                      code  
newton.newton.rtol                                                     -1.0                                                                   code  
newton.newton.stagnation_threshold                                     0.9                                                                    code  
newton.newton.stagnation_window                                        3                                                                      code  
pod.pod.atol                                                           0.0                                                                    code  
pod.pod.check                                                          True                                                                   code  
pod.pod.check_tol                                                      1e-10                                                                  code  
pod.pod.l2_err                                                         0.0                                                                    code  
pod.pod.orthonormalize                                                 True                                                                   code  
pod.pod.rtol                                                           4e-08                                                                  code  
pod.pod.symmetrize                                                     False                                                                  code  
text.text_problem.font_name                                            None                                                                   code  
fenics._solver_options.preconditioner                                  &apos;amg&apos;                                                                  code  
fenics._solver_options.solver                                          &apos;bicgstab&apos;                                                             code  
ngsolve.NGSolveMatrixOperator.apply_inverse.default_solver             &apos;&apos;                                                                     code  
pyamg.apply_inverse.check_finite                                       True                                                                   code  
pyamg.apply_inverse.default_solver                                     &apos;pyamg_solve&apos;                                                          code  
pyamg.solver_options.maxiter                                           400                                                                    code  
pyamg.solver_options.rs_CF                                             &apos;RS&apos;                                                                   code  
pyamg.solver_options.rs_accel                                          None                                                                   code  
pyamg.solver_options.rs_coarse_solver                                  &apos;pinv2&apos;                                                                code  
pyamg.solver_options.rs_cycle                                          &apos;V&apos;                                                                    code  
pyamg.solver_options.rs_max_coarse                                     500                                                                    code  
pyamg.solver_options.rs_max_levels                                     10                                                                     code  
pyamg.solver_options.rs_maxiter                                        100                                                                    code  
pyamg.solver_options.rs_postsmoother                                   (&apos;gauss_seidel&apos;, {&apos;sweep&apos;: &apos;symmetric&apos;})                               code  
pyamg.solver_options.rs_strength                                       (&apos;classical&apos;, {&apos;theta&apos;: 0.25})                                         code  
pyamg.solver_options.rs_tol                                            1e-05                                                                  code  
pyamg.solver_options.sa_accel                                          None                                                                   code  
pyamg.solver_options.sa_aggregate                                      &apos;standard&apos;                                                             code  
pyamg.solver_options.sa_coarse_solver                                  &apos;pinv2&apos;                                                                code  
pyamg.solver_options.sa_cycle                                          &apos;V&apos;                                                                    code  
pyamg.solver_options.sa_diagonal_dominance                             False                                                                  code  
pyamg.solver_options.sa_improve_candidates                             ((&apos;block_gauss_seidel&apos;, {&apos;sweep&apos;: &apos;symmetric&apos;, &apos;iterations&apos;: 4}),      code  
                                                                       None)                                                                        
pyamg.solver_options.sa_max_coarse                                     500                                                                    code  
pyamg.solver_options.sa_max_levels                                     10                                                                     code  
pyamg.solver_options.sa_maxiter                                        100                                                                    code  
pyamg.solver_options.sa_postsmoother                                   (&apos;block_gauss_seidel&apos;, {&apos;sweep&apos;: &apos;symmetric&apos;})                         code  
pyamg.solver_options.sa_presmoother                                    (&apos;block_gauss_seidel&apos;, {&apos;sweep&apos;: &apos;symmetric&apos;})                         code  
pyamg.solver_options.sa_smooth                                         (&apos;jacobi&apos;, {&apos;omega&apos;: 1.3333333333333333})                              code  
pyamg.solver_options.sa_strength                                       &apos;symmetric&apos;                                                            code  
pyamg.solver_options.sa_symmetry                                       &apos;hermitian&apos;                                                            code  
pyamg.solver_options.sa_tol                                            1e-05                                                                  code  
pyamg.solver_options.tol                                               1e-05                                                                  code  
pymess.solve_lyap.default_solver                                       &apos;pymess&apos;                                                               code  
pymess.solve_ricc.default_solver                                       &apos;pymess&apos;                                                               code  
scipy.apply_inverse.check_finite                                       True                                                                   code  
scipy.apply_inverse.default_least_squares_solver                       &apos;scipy_least_squares_lsmr&apos;                                             code  
scipy.apply_inverse.default_solver                                     &apos;scipy_spsolve&apos;                                                        code  
scipy.solver_options.bicgstab_maxiter                                  None                                                                   code  
scipy.solver_options.bicgstab_tol                                      1e-15                                                                  code  
scipy.solver_options.least_squares_lsmr_atol                           1e-06                                                                  code  
scipy.solver_options.least_squares_lsmr_btol                           1e-06                                                                  code  
scipy.solver_options.least_squares_lsmr_conlim                         100000000.0                                                            code  
scipy.solver_options.least_squares_lsmr_damp                           0.0                                                                    code  
scipy.solver_options.least_squares_lsmr_maxiter                        None                                                                   code  
scipy.solver_options.least_squares_lsqr_atol                           1e-06                                                                  code  
scipy.solver_options.least_squares_lsqr_btol                           1e-06                                                                  code  
scipy.solver_options.least_squares_lsqr_conlim                         100000000.0                                                            code  
scipy.solver_options.least_squares_lsqr_iter_lim                       None                                                                   code  
scipy.solver_options.lgmres_inner_m                                    39                                                                     code  
scipy.solver_options.lgmres_maxiter                                    1000                                                                   code  
scipy.solver_options.lgmres_outer_k                                    3                                                                      code  
scipy.solver_options.lgmres_tol                                        1e-05                                                                  code  
scipy.solver_options.spilu_drop_rule                                   None                                                                   code  
scipy.solver_options.spilu_drop_tol                                    0.0001                                                                 code  
scipy.solver_options.spilu_fill_factor                                 10                                                                     code  
scipy.solver_options.spilu_permc_spec                                  &apos;COLAMD&apos;                                                               code  
scipy.solver_options.spsolve_keep_factorization                        True                                                                   code  
scipy.solver_options.spsolve_permc_spec                                &apos;COLAMD&apos;                                                               code  
iosys.LTISystem._lyap_solver.default_solver_backend                    &apos;pymess&apos;                                                               code  
constructions.induced_norm.raise_negative                              True                                                                   code  
constructions.induced_norm.tol                                         1e-10                                                                  code  
fv.jacobian_options.delta                                              1e-07                                                                  code  
numpy.NumpyMatrixOperator.apply_inverse.check_finite                   True                                                                   code  
numpy.NumpyMatrixOperator.apply_inverse.default_sparse_solver_backend  &apos;scipy&apos;                                                                code  
default.new_parallel_pool.allow_mpi                                    True                                                                   code  
default.new_parallel_pool.ipython_num_engines                          None                                                                   code  
default.new_parallel_pool.ipython_profile                              None                                                                   code  
bt.BRBTReductor._ricc_solver.default_solver_backend                    &apos;slycot&apos;                                                               code  
bt.LQGBTReductor._ricc_solver.default_solver_backend                   &apos;pymess&apos;                                                               code  
floatcmp.float_cmp.atol                                                1e-14                                                                  code  
floatcmp.float_cmp.rtol                                                1e-14                                                                  code  
mpi.event_loop_settings.auto_launch                                    True                                                                   code  
random.new_random_state.seed                                           42                                                                     code  
defaults.func.c                                                        43                                                                     user  
defaults.func.d                                                        3                                                                      code  



                  defaults not affecting state id calculation                   
                  ===========================================                   

path (shortened)                     value                                source
-----------------------------------  -----------------------------------  ------
genericsolvers.solver_options.least  False                                code  
_squares_lsmr_show                                                              
genericsolvers.solver_options.least  False                                code  
_squares_lsqr_show                                                              
pyamg.solver_options.verb            False                                code  
scipy.solver_options.least_squares_  False                                code  
lsmr_show                                                                       
scipy.solver_options.least_squares_  False                                code  
lsqr_show                                                                       
cache.default_regions.disk_max_size  1073741824                           code  
cache.default_regions.disk_path      &apos;/tmp/pymor.cache.pymor&apos;             code  
cache.default_regions.memory_max_ke  1000                                 code  
ys                                                                              
cache.default_regions.persistent_ma  1073741824                           code  
x_size                                                                          
cache.default_regions.persistent_pa  &apos;/tmp/pymor.persistent.cache.pymor&apos;  code  
th                                                                              
logger.getLogger.filename            &apos;&apos;                                   code  
logger.set_log_format.block_timings  False                                code  
logger.set_log_format.indent_blocks  True                                 code  
logger.set_log_format.max_hierarchy  1                                    code  
_level                                                                          
logger.set_log_levels.levels         None                                 code  
gl.colormap_texture.name             &apos;viridis&apos;                            code  
qt.visualize_patch.backend           &apos;gl&apos;                                 code  
pprint.format_array.compact_print    False                                code  

</system-out></testcase><testcase classname="src.pymortests.core.defaults" file="src/pymortests/core/defaults.py" line="34" name="test_write_defaults_to_file" time="0.012117385864257812"><system-out>Written defaults to file /tmp/tmpoo7qia0v/defaults.py
</system-out></testcase><testcase classname="src.pymortests.core.defaults" file="src/pymortests/core/defaults.py" line="39" name="test_load_defaults_from_file" time="0.012936115264892578"><system-out>Written defaults to file /tmp/tmp4vk4mpmy/defaults.py
</system-out></testcase><testcase classname="src.pymortests.core.interface.Test_Interface" file="src/pymortests/core/interface.py" line="18" name="testImplementorlist" time="0.0015254020690917969"></testcase><testcase classname="src.pymortests.core.interface.Test_Interface" file="src/pymortests/core/interface.py" line="24" name="testAbstractMethods" time="0.003989696502685547"></testcase><testcase classname="src.pymortests.core.interface.Test_Interface" file="src/pymortests/core/interface.py" line="56" name="testVersion" time="0.0009076595306396484"></testcase><testcase classname="src.pymortests.core.interface" file="src/pymortests/core/interface.py" line="78" name="test_withcopy_implementors" time="0.009432792663574219"></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[RuleTable]" time="0.0019178390502929688"><system-err>17:23 |WARNING|RuleTable: warning -- logger &lt;logging.Logger object at 0x7fc81b3cf8d0&gt;
17:23 |ERROR|RuleTable: error -- logger &lt;logging.Logger object at 0x7fc81b3cf8d0&gt;
17:23 RuleTable: info -- logger &lt;logging.Logger object at 0x7fc81b3cf8d0&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[PatchVisualizer]" time="0.0016455650329589844"><system-err>17:23 |WARNING|PatchVisualizer: warning -- logger &lt;logging.Logger object at 0x7fc81b32e0b8&gt;
17:23 |ERROR|PatchVisualizer: error -- logger &lt;logging.Logger object at 0x7fc81b32e0b8&gt;
17:23 PatchVisualizer: info -- logger &lt;logging.Logger object at 0x7fc81b32e0b8&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[OnedVisualizer]" time="0.0014927387237548828"><system-err>17:23 |WARNING|OnedVisualizer: warning -- logger &lt;logging.Logger object at 0x7fc81b32e4e0&gt;
17:23 |ERROR|OnedVisualizer: error -- logger &lt;logging.Logger object at 0x7fc81b32e4e0&gt;
17:23 OnedVisualizer: info -- logger &lt;logging.Logger object at 0x7fc81b32e4e0&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[FenicsVisualizer]" time="0.0015044212341308594"><system-err>17:23 |WARNING|FenicsVisualizer: warning -- logger &lt;logging.Logger object at 0x7fc813245400&gt;
17:23 |ERROR|FenicsVisualizer: error -- logger &lt;logging.Logger object at 0x7fc813245400&gt;
17:23 FenicsVisualizer: info -- logger &lt;logging.Logger object at 0x7fc813245400&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[BoringTestClass]" time="0.0017430782318115234"><system-err>17:23 |WARNING|BoringTestClass: warning -- logger &lt;logging.Logger object at 0x7fc7faa34080&gt;
17:23 |ERROR|BoringTestClass: error -- logger &lt;logging.Logger object at 0x7fc7faa34080&gt;
17:23 BoringTestClass: info -- logger &lt;logging.Logger object at 0x7fc7faa34080&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[RemoteObjectManager]" time="0.0014214515686035156"><system-err>17:23 |WARNING|RemoteObjectManager: warning -- logger &lt;logging.Logger object at 0x7fc7fa9b5128&gt;
17:23 |ERROR|RemoteObjectManager: error -- logger &lt;logging.Logger object at 0x7fc7fa9b5128&gt;
17:23 RemoteObjectManager: info -- logger &lt;logging.Logger object at 0x7fc7fa9b5128&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[AdaptiveSampleSet]" time="0.0014753341674804688"><system-err>17:23 |WARNING|AdaptiveSampleSet: warning -- logger &lt;logging.Logger object at 0x7fc7fa9b52b0&gt;
17:23 |ERROR|AdaptiveSampleSet: error -- logger &lt;logging.Logger object at 0x7fc7fa9b52b0&gt;
17:23 AdaptiveSampleSet: info -- logger &lt;logging.Logger object at 0x7fc7fa9b52b0&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[GenericRBReductor]" time="0.0014019012451171875"><system-err>17:23 |WARNING|GenericRBReductor: warning -- logger &lt;logging.Logger object at 0x7fc7fa8d36a0&gt;
17:23 |ERROR|GenericRBReductor: error -- logger &lt;logging.Logger object at 0x7fc7fa8d36a0&gt;
17:23 GenericRBReductor: info -- logger &lt;logging.Logger object at 0x7fc7fa8d36a0&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[GenericPGReductor]" time="0.0013728141784667969"><system-err>17:23 |WARNING|GenericPGReductor: warning -- logger &lt;logging.Logger object at 0x7fc7fa8d3e80&gt;
17:23 |ERROR|GenericPGReductor: error -- logger &lt;logging.Logger object at 0x7fc7fa8d3e80&gt;
17:23 GenericPGReductor: info -- logger &lt;logging.Logger object at 0x7fc7fa8d3e80&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ResidualReductor]" time="0.0014061927795410156"><system-err>17:23 |WARNING|ResidualReductor: warning -- logger &lt;logging.Logger object at 0x7fc7fa9467b8&gt;
17:23 |ERROR|ResidualReductor: error -- logger &lt;logging.Logger object at 0x7fc7fa9467b8&gt;
17:23 ResidualReductor: info -- logger &lt;logging.Logger object at 0x7fc7fa9467b8&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ImplicitEulerResidualReductor]" time="0.0013473033905029297"><system-err>17:23 |WARNING|ImplicitEulerResidualReductor: warning -- logger &lt;logging.Logger object at 0x7fc7fa9490f0&gt;
17:23 |ERROR|ImplicitEulerResidualReductor: error -- logger &lt;logging.Logger object at 0x7fc7fa9490f0&gt;
17:23 ImplicitEulerResidualReductor: info -- logger &lt;logging.Logger object at 0x7fc7fa9490f0&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[TFInterpReductor]" time="0.0015757083892822266"><system-err>17:23 |WARNING|TFInterpReductor: warning -- logger &lt;logging.Logger object at 0x7fc7fa95ffd0&gt;
17:23 |ERROR|TFInterpReductor: error -- logger &lt;logging.Logger object at 0x7fc7fa95ffd0&gt;
17:23 TFInterpReductor: info -- logger &lt;logging.Logger object at 0x7fc7fa95ffd0&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[TF_IRKAReductor]" time="0.0014829635620117188"><system-err>17:23 |WARNING|TF_IRKAReductor: warning -- logger &lt;logging.Logger object at 0x7fc7fa966550&gt;
17:23 |ERROR|TF_IRKAReductor: error -- logger &lt;logging.Logger object at 0x7fc7fa966550&gt;
17:23 TF_IRKAReductor: info -- logger &lt;logging.Logger object at 0x7fc7fa966550&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SOBTReductor]" time="0.0016117095947265625"><system-err>17:23 |WARNING|SOBTReductor: warning -- logger &lt;logging.Logger object at 0x7fc7fa8736d8&gt;
17:23 |ERROR|SOBTReductor: error -- logger &lt;logging.Logger object at 0x7fc7fa8736d8&gt;
17:23 SOBTReductor: info -- logger &lt;logging.Logger object at 0x7fc7fa8736d8&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[new_ipcluster_pool]" time="0.0016765594482421875"><system-err>17:23 |WARNING|new_ipcluster_pool: warning -- logger &lt;logging.Logger object at 0x7fc7fa7c18d0&gt;
17:23 |ERROR|new_ipcluster_pool: error -- logger &lt;logging.Logger object at 0x7fc7fa7c18d0&gt;
17:23 new_ipcluster_pool: info -- logger &lt;logging.Logger object at 0x7fc7fa7c18d0&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[StationaryProblem]" time="0.0013692378997802734"><system-err>17:23 |WARNING|StationaryProblem: warning -- logger &lt;logging.Logger object at 0x7fc8302de4a8&gt;
17:23 |ERROR|StationaryProblem: error -- logger &lt;logging.Logger object at 0x7fc8302de4a8&gt;
17:23 StationaryProblem: info -- logger &lt;logging.Logger object at 0x7fc8302de4a8&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[InstationaryProblem]" time="0.0014536380767822266"><system-err>17:23 |WARNING|InstationaryProblem: warning -- logger &lt;logging.Logger object at 0x7fc8302de860&gt;
17:23 |ERROR|InstationaryProblem: error -- logger &lt;logging.Logger object at 0x7fc8302de860&gt;
17:23 InstationaryProblem: info -- logger &lt;logging.Logger object at 0x7fc8302de860&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[InducedNorm]" time="0.0014698505401611328"><system-err>17:23 |WARNING|InducedNorm: warning -- logger &lt;logging.Logger object at 0x7fc828a8d588&gt;
17:23 |ERROR|InducedNorm: error -- logger &lt;logging.Logger object at 0x7fc828a8d588&gt;
17:23 InducedNorm: info -- logger &lt;logging.Logger object at 0x7fc828a8d588&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[NGSolveVisualizer]" time="0.0012998580932617188"><system-err>17:23 |WARNING|NGSolveVisualizer: warning -- logger &lt;logging.Logger object at 0x7fc7fcaeb080&gt;
17:23 |ERROR|NGSolveVisualizer: error -- logger &lt;logging.Logger object at 0x7fc7fcaeb080&gt;
17:23 NGSolveVisualizer: info -- logger &lt;logging.Logger object at 0x7fc7fcaeb080&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[CoerciveRBEstimator]" time="0.0013568401336669922"><system-err>17:23 |WARNING|CoerciveRBEstimator: warning -- logger &lt;logging.Logger object at 0x7fc7fa949b00&gt;
17:23 |ERROR|CoerciveRBEstimator: error -- logger &lt;logging.Logger object at 0x7fc7fa949b00&gt;
17:23 CoerciveRBEstimator: info -- logger &lt;logging.Logger object at 0x7fc7fa949b00&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SimpleCoerciveRBEstimator]" time="0.0014913082122802734"><system-err>17:23 |WARNING|SimpleCoerciveRBEstimator: warning -- logger &lt;logging.Logger object at 0x7fc7fa94f048&gt;
17:23 |ERROR|SimpleCoerciveRBEstimator: error -- logger &lt;logging.Logger object at 0x7fc7fa94f048&gt;
17:23 SimpleCoerciveRBEstimator: info -- logger &lt;logging.Logger object at 0x7fc7fa94f048&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ParabolicRBEstimator]" time="0.001878499984741211"><system-err>17:23 |WARNING|ParabolicRBEstimator: warning -- logger &lt;logging.Logger object at 0x7fc7fa966c18&gt;
17:23 |ERROR|ParabolicRBEstimator: error -- logger &lt;logging.Logger object at 0x7fc7fa966c18&gt;
17:23 ParabolicRBEstimator: info -- logger &lt;logging.Logger object at 0x7fc7fa966c18&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[MPIVisualizer]" time="0.0013408660888671875"><system-err>17:23 |WARNING|MPIVisualizer: warning -- logger &lt;logging.Logger object at 0x7fc7fa89c588&gt;
17:23 |ERROR|MPIVisualizer: error -- logger &lt;logging.Logger object at 0x7fc7fa89c588&gt;
17:23 MPIVisualizer: info -- logger &lt;logging.Logger object at 0x7fc7fa89c588&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[NumpyVectorArray]" time="0.0014004707336425781"><system-err>17:23 |WARNING|NumpyVectorArray: warning -- logger &lt;logging.Logger object at 0x7fc83738cdd8&gt;
17:23 |ERROR|NumpyVectorArray: error -- logger &lt;logging.Logger object at 0x7fc83738cdd8&gt;
17:23 NumpyVectorArray: info -- logger &lt;logging.Logger object at 0x7fc83738cdd8&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[BlockVectorArray]" time="0.001428842544555664"><system-err>17:23 |WARNING|BlockVectorArray: warning -- logger &lt;logging.Logger object at 0x7fc828bdec88&gt;
17:23 |ERROR|BlockVectorArray: error -- logger &lt;logging.Logger object at 0x7fc828bdec88&gt;
17:23 BlockVectorArray: info -- logger &lt;logging.Logger object at 0x7fc828bdec88&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ListVectorArray]" time="0.0013713836669921875"><system-err>17:23 |WARNING|ListVectorArray: warning -- logger &lt;logging.Logger object at 0x7fc817794940&gt;
17:23 |ERROR|ListVectorArray: error -- logger &lt;logging.Logger object at 0x7fc817794940&gt;
17:23 ListVectorArray: info -- logger &lt;logging.Logger object at 0x7fc817794940&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[MPIVectorArray]" time="0.0014426708221435547"><system-err>17:23 |WARNING|MPIVectorArray: warning -- logger &lt;logging.Logger object at 0x7fc7fa887160&gt;
17:23 |ERROR|MPIVectorArray: error -- logger &lt;logging.Logger object at 0x7fc7fa887160&gt;
17:23 MPIVectorArray: info -- logger &lt;logging.Logger object at 0x7fc7fa887160&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[PreAssembleRules]" time="0.0014338493347167969"><system-err>17:23 |WARNING|PreAssembleRules: warning -- logger &lt;logging.Logger object at 0x7fc81b3cfe80&gt;
17:23 |ERROR|PreAssembleRules: error -- logger &lt;logging.Logger object at 0x7fc81b3cfe80&gt;
17:23 PreAssembleRules: info -- logger &lt;logging.Logger object at 0x7fc81b3cfe80&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ProjectRules]" time="0.001756906509399414"><system-err>17:23 |WARNING|ProjectRules: warning -- logger &lt;logging.Logger object at 0x7fc8178ebc18&gt;
17:23 |ERROR|ProjectRules: error -- logger &lt;logging.Logger object at 0x7fc8178ebc18&gt;
17:23 ProjectRules: info -- logger &lt;logging.Logger object at 0x7fc8178ebc18&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ProjectToSubbasisRules]" time="0.001538991928100586"><system-err>17:23 |WARNING|ProjectToSubbasisRules: warning -- logger &lt;logging.Logger object at 0x7fc8178ebfd0&gt;
17:23 |ERROR|ProjectToSubbasisRules: error -- logger &lt;logging.Logger object at 0x7fc8178ebfd0&gt;
17:23 ProjectToSubbasisRules: info -- logger &lt;logging.Logger object at 0x7fc8178ebfd0&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ToMatrixRules]" time="0.0013682842254638672"><system-err>17:23 |WARNING|ToMatrixRules: warning -- logger &lt;logging.Logger object at 0x7fc7fc86be10&gt;
17:23 |ERROR|ToMatrixRules: error -- logger &lt;logging.Logger object at 0x7fc7fc86be10&gt;
17:23 ToMatrixRules: info -- logger &lt;logging.Logger object at 0x7fc7fc86be10&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[CollectOperatorRangeRules]" time="0.0013675689697265625"><system-err>17:23 |WARNING|CollectOperatorRangeRules: warning -- logger &lt;logging.Logger object at 0x7fc7fa9b9588&gt;
17:23 |ERROR|CollectOperatorRangeRules: error -- logger &lt;logging.Logger object at 0x7fc7fa9b9588&gt;
17:23 CollectOperatorRangeRules: info -- logger &lt;logging.Logger object at 0x7fc7fa9b9588&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[CollectVectorRangeRules]" time="0.0014715194702148438"><system-err>17:23 |WARNING|CollectVectorRangeRules: warning -- logger &lt;logging.Logger object at 0x7fc7fa9b9a20&gt;
17:23 |ERROR|CollectVectorRangeRules: error -- logger &lt;logging.Logger object at 0x7fc7fa9b9a20&gt;
17:23 CollectVectorRangeRules: info -- logger &lt;logging.Logger object at 0x7fc7fa9b9a20&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[CopyOnWriteVector]" time="0.0014607906341552734"><system-err>17:23 |WARNING|CopyOnWriteVector: warning -- logger &lt;logging.Logger object at 0x7fc817789d30&gt;
17:23 |ERROR|CopyOnWriteVector: error -- logger &lt;logging.Logger object at 0x7fc817789d30&gt;
17:23 CopyOnWriteVector: info -- logger &lt;logging.Logger object at 0x7fc817789d30&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[AllDirichletBoundaryInfo]" time="0.0013611316680908203"><system-err>17:23 |WARNING|AllDirichletBoundaryInfo: warning -- logger &lt;logging.Logger object at 0x7fc7faa343c8&gt;
17:23 |ERROR|AllDirichletBoundaryInfo: error -- logger &lt;logging.Logger object at 0x7fc7faa343c8&gt;
17:23 AllDirichletBoundaryInfo: info -- logger &lt;logging.Logger object at 0x7fc7faa343c8&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[StupidImplementer]" time="0.0014564990997314453"><system-err>17:23 |WARNING|StupidImplementer: warning -- logger &lt;logging.Logger object at 0x7fc7faa4bf98&gt;
17:23 |ERROR|StupidImplementer: error -- logger &lt;logging.Logger object at 0x7fc7faa4bf98&gt;
17:23 StupidImplementer: info -- logger &lt;logging.Logger object at 0x7fc7faa4bf98&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[AverageImplementer0]" time="0.0014972686767578125"><system-err>17:23 |WARNING|AverageImplementer: warning -- logger &lt;logging.Logger object at 0x7fc7faa3a320&gt;
17:23 |ERROR|AverageImplementer: error -- logger &lt;logging.Logger object at 0x7fc7faa3a320&gt;
17:23 AverageImplementer: info -- logger &lt;logging.Logger object at 0x7fc7faa3a320&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[FailImplementer]" time="0.0018839836120605469"><system-err>17:23 |WARNING|FailImplementer: warning -- logger &lt;logging.Logger object at 0x7fc7faa30b00&gt;
17:23 |ERROR|FailImplementer: error -- logger &lt;logging.Logger object at 0x7fc7faa30b00&gt;
17:23 FailImplementer: info -- logger &lt;logging.Logger object at 0x7fc7faa30b00&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[AverageImplementer1]" time="0.0014688968658447266"><system-err>17:23 |WARNING|AverageImplementer: warning -- logger &lt;logging.Logger object at 0x7fc7faa3a320&gt;
17:23 |ERROR|AverageImplementer: error -- logger &lt;logging.Logger object at 0x7fc7faa3a320&gt;
17:23 AverageImplementer: info -- logger &lt;logging.Logger object at 0x7fc7faa3a320&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[DummyPool]" time="0.001374959945678711"><system-err>17:23 |WARNING|DummyPool: warning -- logger &lt;logging.Logger object at 0x7fc7faa4c5f8&gt;
17:23 |ERROR|DummyPool: error -- logger &lt;logging.Logger object at 0x7fc7faa4c5f8&gt;
17:23 DummyPool: info -- logger &lt;logging.Logger object at 0x7fc7faa4c5f8&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[WorkerPoolBase]" time="0.0014252662658691406"><system-err>17:23 |WARNING|WorkerPoolBase: warning -- logger &lt;logging.Logger object at 0x7fc7fa8e7828&gt;
17:23 |ERROR|WorkerPoolBase: error -- logger &lt;logging.Logger object at 0x7fc7fa8e7828&gt;
17:23 WorkerPoolBase: info -- logger &lt;logging.Logger object at 0x7fc7fa8e7828&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[CoerciveRBReductor]" time="0.0014140605926513672"><system-err>17:23 |WARNING|CoerciveRBReductor: warning -- logger &lt;logging.Logger object at 0x7fc7fa949940&gt;
17:23 |ERROR|CoerciveRBReductor: error -- logger &lt;logging.Logger object at 0x7fc7fa949940&gt;
17:23 CoerciveRBReductor: info -- logger &lt;logging.Logger object at 0x7fc7fa949940&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SimpleCoerciveRBReductor]" time="0.0015323162078857422"><system-err>17:23 |WARNING|SimpleCoerciveRBReductor: warning -- logger &lt;logging.Logger object at 0x7fc7fa949da0&gt;
17:23 |ERROR|SimpleCoerciveRBReductor: error -- logger &lt;logging.Logger object at 0x7fc7fa949da0&gt;
17:23 SimpleCoerciveRBReductor: info -- logger &lt;logging.Logger object at 0x7fc7fa949da0&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ParabolicRBReductor]" time="0.0013990402221679688"><system-err>17:23 |WARNING|ParabolicRBReductor: warning -- logger &lt;logging.Logger object at 0x7fc7fa966940&gt;
17:23 |ERROR|ParabolicRBReductor: error -- logger &lt;logging.Logger object at 0x7fc7fa966940&gt;
17:23 ParabolicRBReductor: info -- logger &lt;logging.Logger object at 0x7fc7fa966940&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[GenericBTReductor]" time="0.0014736652374267578"><system-err>17:23 |WARNING|GenericBTReductor: warning -- logger &lt;logging.Logger object at 0x7fc7fa8da240&gt;
17:23 |ERROR|GenericBTReductor: error -- logger &lt;logging.Logger object at 0x7fc7fa8da240&gt;
17:23 GenericBTReductor: info -- logger &lt;logging.Logger object at 0x7fc7fa8da240&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[GenericBHIReductor]" time="0.002036571502685547"><system-err>17:23 |WARNING|GenericBHIReductor: warning -- logger &lt;logging.Logger object at 0x7fc7fa94f6d8&gt;
17:23 |ERROR|GenericBHIReductor: error -- logger &lt;logging.Logger object at 0x7fc7fa94f6d8&gt;
17:23 GenericBHIReductor: info -- logger &lt;logging.Logger object at 0x7fc7fa94f6d8&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[IRKAReductor]" time="0.0014374256134033203"><system-err>17:23 |WARNING|IRKAReductor: warning -- logger &lt;logging.Logger object at 0x7fc7fa94fd30&gt;
17:23 |ERROR|IRKAReductor: error -- logger &lt;logging.Logger object at 0x7fc7fa94fd30&gt;
17:23 IRKAReductor: info -- logger &lt;logging.Logger object at 0x7fc7fa94fd30&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[TSIAReductor]" time="0.001323699951171875"><system-err>17:23 |WARNING|TSIAReductor: warning -- logger &lt;logging.Logger object at 0x7fc7fa9662e8&gt;
17:23 |ERROR|TSIAReductor: error -- logger &lt;logging.Logger object at 0x7fc7fa9662e8&gt;
17:23 TSIAReductor: info -- logger &lt;logging.Logger object at 0x7fc7fa9662e8&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[GenericSOBTpvReductor]" time="0.0013735294342041016"><system-err>17:23 |WARNING|GenericSOBTpvReductor: warning -- logger &lt;logging.Logger object at 0x7fc7fa966eb8&gt;
17:23 |ERROR|GenericSOBTpvReductor: error -- logger &lt;logging.Logger object at 0x7fc7fa966eb8&gt;
17:23 GenericSOBTpvReductor: info -- logger &lt;logging.Logger object at 0x7fc7fa966eb8&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SOBTfvReductor]" time="0.0012881755828857422"><system-err>17:23 |WARNING|SOBTfvReductor: warning -- logger &lt;logging.Logger object at 0x7fc7fa873400&gt;
17:23 |ERROR|SOBTfvReductor: error -- logger &lt;logging.Logger object at 0x7fc7fa873400&gt;
17:23 SOBTfvReductor: info -- logger &lt;logging.Logger object at 0x7fc7fa873400&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SOR_IRKAReductor]" time="0.0013668537139892578"><system-err>17:23 |WARNING|SOR_IRKAReductor: warning -- logger &lt;logging.Logger object at 0x7fc7fa873908&gt;
17:23 |ERROR|SOR_IRKAReductor: error -- logger &lt;logging.Logger object at 0x7fc7fa873908&gt;
17:23 SOR_IRKAReductor: info -- logger &lt;logging.Logger object at 0x7fc7fa873908&gt;
</system-err></testcase></testsuite>